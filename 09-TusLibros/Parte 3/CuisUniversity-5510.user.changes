

----QUIT----(11 September 2022 19:10:09) CuisUniversity-5481.image priorSource: 2810882!

----STARTUP---- (11 September 2022 19:10:10) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-5481.image!


----QUIT----(11 September 2022 19:10:10) CuisUniversity-5481.image priorSource: 7059465!

----STARTUP---- (3 November 2022 19:28:30) as C:\Users\maria\Desktop\Facultad\Taller\Inge1\CuisUniversity-windows64\CuisUniversity-5481.image!


----End fileIn of C:\Users\maria\Desktop\Facultad\Taller\Inge1\CuisUniversity-windows64\TusLibros-33.st----!

Object subclass: #Interfaz
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Interfaz category: 'TusLibros' stamp: 'MO 11/3/2022 19:32:10'!
Object subclass: #Interfaz
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

TestCase subclass: #InterfazTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #InterfazTest category: 'TusLibros' stamp: 'MO 11/3/2022 19:32:56'!
TestCase subclass: #InterfazTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!InterfazTest methodsFor: 'no messages' stamp: 'MO 11/3/2022 19:36:01'!
test01InterfazDebeTenerUnNombreDeClienteValido
	
	! !
!InterfazTest methodsFor: 'as yet unclassified' stamp: 'MO 11/3/2022 19:37:35' prior: 50552850!
test01InterfazDebeTenerUnNombreDeClienteValido
	
	
	! !
!InterfazTest methodsFor: 'as yet unclassified' stamp: 'MO 11/3/2022 19:38:14'!
test01InterfazDaErrorConClienteInvalido
	
	Interfaz 
	! !

!methodRemoval: InterfazTest #test01InterfazDebeTenerUnNombreDeClienteValido stamp: 'MO 11/3/2022 19:38:18'!
test01InterfazDebeTenerUnNombreDeClienteValido
	
	
	!
!InterfazTest methodsFor: 'as yet unclassified' stamp: 'MO 11/3/2022 19:42:09'!
test01InterfazDaErrorConUsuarioInvalido
	
	| aUser aPassword |
	
	aUser := 'Carla'.
	aPassword := 'contraseña'.
	
	Interfaz logInUser: aUser withPassword: aPassword
	! !

!methodRemoval: InterfazTest #test01InterfazDaErrorConClienteInvalido stamp: 'MO 11/3/2022 19:42:31'!
test01InterfazDaErrorConClienteInvalido
	
	Interfaz 
	!
!InterfazTest methodsFor: 'as yet unclassified' stamp: 'MO 11/3/2022 19:44:25' prior: 50552870!
test01InterfazDaErrorConUsuarioInvalido
	
	| anInterfaz aUser aPassword |
	
	aUser := 'Carla'.
	aPassword := 'contraseña'.
	
	self 
		should: [ anInterfaz := Interfaz logInUser: aUser withPassword: aPassword ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidUserErrorDescription.
			self assert: anInterfaz isNil ]
	! !

!classDefinition: #InterfazTest category: 'TusLibros' stamp: 'MO 11/3/2022 19:49:20'!
TestCase subclass: #InterfazTest
	instanceVariableNames: 'testObjectsFactory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #InterfazTest category: 'TusLibros' stamp: 'MO 11/3/2022 19:49:21'!
TestCase subclass: #InterfazTest
	instanceVariableNames: 'testObjectsFactory authenticatorBehavior'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!InterfazTest methodsFor: 'as yet unclassified' stamp: 'MO 11/3/2022 19:49:14' overrides: 16961394!
setUp 

	testObjectsFactory := StoreTestObjectsFactory new.
	authenticatorBehavior := [ :aUser :aPassword | ]! !
!InterfazTest methodsFor: 'authenticator protocol' stamp: 'MO 11/3/2022 19:53:14'!
authenticateUser: aUser with: aPassword
	
	^ authenticatorBehavior value: aUser value: aPassword! !
!InterfazTest methodsFor: 'as yet unclassified' stamp: 'MO 11/3/2022 19:56:09' prior: 50552884!
test01InterfazDaErrorConUsuarioInvalido
	
	| anInterfaz aUser aPassword |
	
	aUser := 'La invalida'.
	aPassword := 'contraseña valida'.
	authenticatorBehavior := [ :anUser :anPassword | ^ false].
	
	self 
		should: [ anInterfaz := Interfaz logInUser: aUser withPassword: aPassword withAutenticator: self ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidLogInErrorDescription.
			self assert: anInterfaz isNil ]
	! !
!InterfazTest class methodsFor: 'no messages' stamp: 'MO 11/3/2022 19:58:17'!
logInUser: aUser withPassword: aPassword withAutenticator: anAuthenticator
	
	(anAuthenticator authenticateUser: aUser with: aPassword) ifFalse: [self error: self invalidLogInErrorDescription]
! !
!InterfazTest class methodsFor: 'as yet unclassified' stamp: 'MO 11/3/2022 19:58:45'!
invalidLogInErrorDescription

	^ 'quien chota sos hermano??'
! !
!InterfazTest class methodsFor: 'as yet unclassified' stamp: 'MO 11/3/2022 19:59:04' prior: 50552956!
invalidLogInErrorDescription

	^ 'usuario o contrasenia invalido como vos'
! !
!InterfazTest class methodsFor: 'as yet unclassified' stamp: 'MO 11/3/2022 19:59:07' prior: 50552962!
invalidLogInErrorDescription

	^ 'usuario o contrasenia invalido'
! !

!testRun: #InterfazTest #test01InterfazDaErrorConUsuarioInvalido stamp: 'MO 11/3/2022 19:59:19'!
ERROR!
!InterfazTest class methodsFor: 'as yet unclassified' stamp: 'MO 11/3/2022 19:59:43' prior: 50552968!
invalidLogInErrorDescription

	^ 'usuario o contrasenia invalido'
! !
!Interfaz class methodsFor: 'no messages' stamp: 'MO 11/3/2022 20:00:07'!
logInUser: aUser withPassword: aPassword withAutenticator: anAuthenticator
	
	(anAuthenticator authenticateUser: aUser with: aPassword) ifFalse: [self error: self invalidLogInErrorDescription]! !
!Interfaz class methodsFor: 'as yet unclassified' stamp: 'MO 11/3/2022 20:00:19'!
invalidLogInErrorDescription

	^ 'usuario o contrasenia invalido'! !

!methodRemoval: InterfazTest class #logInUser:withPassword:withAutenticator: stamp: 'MO 11/3/2022 20:00:34'!
logInUser: aUser withPassword: aPassword withAutenticator: anAuthenticator
	
	(anAuthenticator authenticateUser: aUser with: aPassword) ifFalse: [self error: self invalidLogInErrorDescription]
!

!methodRemoval: InterfazTest class #invalidLogInErrorDescription stamp: 'MO 11/3/2022 20:00:39'!
invalidLogInErrorDescription

	^ 'usuario o contrasenia invalido'
!

!testRun: #InterfazTest #test01InterfazDaErrorConUsuarioInvalido stamp: 'MO 11/3/2022 20:00:42'!
PASSED!

!testRun: #InterfazTest #test01InterfazDaErrorConUsuarioInvalido stamp: 'MO 11/3/2022 20:00:42'!
PASSED!

!testRun: #InterfazTest #test01InterfazDaErrorConUsuarioInvalido stamp: 'MO 11/3/2022 20:00:49'!
PASSED!

!testRun: #InterfazTest #test01InterfazDaErrorConUsuarioInvalido stamp: 'MO 11/3/2022 20:00:49'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 20:01:28'!
test01InterfazDaErrorConContraseniaInvalida
	
	| anInterfaz aUser aPassword |
	
	aUser := 'Carla la valida'.
	aPassword := 'contraseña invalida'.
	authenticatorBehavior := [ :anUser :anPassword | ^ false].
	
	self 
		should: [ anInterfaz := Interfaz logInUser: aUser withPassword: aPassword withAutenticator: self ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidLogInErrorDescription.
			self assert: anInterfaz isNil ]
	! !

!testRun: #InterfazTest #test01InterfazDaErrorConContraseniaInvalida stamp: 'MO 11/3/2022 20:01:29'!
PASSED!

!testRun: #InterfazTest #test01InterfazDaErrorConContraseniaInvalida stamp: 'MO 11/3/2022 20:01:29'!
PASSED!

!testRun: #InterfazTest #test01InterfazDaErrorConUsuarioInvalido stamp: 'MO 11/3/2022 20:01:30'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 20:03:59'!
test03InterfazPermiteLogearseConUnUsuarioYContraseniaValidos
	
	| anInterfaz aUser aPassword |
	
	aUser := 'Carla la valida'.
	aPassword := 'contraseña valida'.
	authenticatorBehavior := [ :anUser :anPassword | ^ true].
	
	self 
		should: [ anInterfaz := Interfaz logInUser: aUser withPassword: aPassword withAutenticator: self ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidLogInErrorDescription.
			self deny: anInterfaz isNil ]
	! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 20:04:13'!
test02InterfazDaErrorConContraseniaInvalida
	
	| anInterfaz aUser aPassword |
	
	aUser := 'Carla la valida'.
	aPassword := 'contraseña invalida'.
	authenticatorBehavior := [ :anUser :anPassword | ^ false].
	
	self 
		should: [ anInterfaz := Interfaz logInUser: aUser withPassword: aPassword withAutenticator: self ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidLogInErrorDescription.
			self assert: anInterfaz isNil ]
	! !

!methodRemoval: InterfazTest #test01InterfazDaErrorConContraseniaInvalida stamp: 'MO 11/3/2022 20:04:16'!
test01InterfazDaErrorConContraseniaInvalida
	
	| anInterfaz aUser aPassword |
	
	aUser := 'Carla la valida'.
	aPassword := 'contraseña invalida'.
	authenticatorBehavior := [ :anUser :anPassword | ^ false].
	
	self 
		should: [ anInterfaz := Interfaz logInUser: aUser withPassword: aPassword withAutenticator: self ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidLogInErrorDescription.
			self assert: anInterfaz isNil ]
	!
!Interfaz class methodsFor: 'as yet unclassified' stamp: 'MO 11/3/2022 20:11:31' prior: 50552982!
logInUser: aUser withPassword: aPassword withAutenticator: anAuthenticator
	
	(anAuthenticator authenticateUser: aUser with: aPassword) ifFalse: [self error: self invalidLogInErrorDescription]
	
	^self new initializeWithUserID: aUser
	! !
!Interfaz class methodsFor: 'as yet unclassified' stamp: 'MO 11/3/2022 20:11:48' prior: 50553107!
logInUser: aUser withPassword: aPassword withAutenticator: anAuthenticator
	
	(anAuthenticator authenticateUser: aUser with: aPassword) ifFalse: [self error: self invalidLogInErrorDescription].
	
	^ self new initializeWithUserID: aUser
	! !

!classDefinition: #Interfaz category: 'TusLibros' stamp: 'MO 11/3/2022 20:12:28'!
Object subclass: #Interfaz
	instanceVariableNames: 'userID'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Interfaz methodsFor: 'no messages' stamp: 'MO 11/3/2022 20:12:24'!
initializeWithUserID: aUserID

	userID := aUserID! !
!Interfaz methodsFor: 'as yet unclassified' stamp: 'MO 11/3/2022 20:12:54'!
userID

	^ userID! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 20:13:50' prior: 50553052!
test03InterfazPermiteLogearseConUnUsuarioYContraseniaValidos
	
	| anInterfaz aUser aPassword |
	
	aUser := 'Carla la valida'.
	aPassword := 'contraseña valida'.
	authenticatorBehavior := [ :anUser :anPassword | ^ true].
	
	anInterfaz := Interfaz logInUser: aUser withPassword: aPassword withAutenticator: self.
	
	self assert: anInterfaz userID equals: aUser
	! !

!testRun: #InterfazTest #test03InterfazPermiteLogearseConUnUsuarioYContraseniaValidos stamp: 'MO 11/3/2022 20:13:58'!
PASSED!

!testRun: #InterfazTest #test01InterfazDaErrorConUsuarioInvalido stamp: 'MO 11/3/2022 20:13:58'!
PASSED!

!testRun: #InterfazTest #test02InterfazDaErrorConContraseniaInvalida stamp: 'MO 11/3/2022 20:13:58'!
PASSED!

!testRun: #InterfazTest #test03InterfazPermiteLogearseConUnUsuarioYContraseniaValidos stamp: 'MO 11/3/2022 20:13:58'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 20:14:28' prior: 50553070!
test02InterfazDaErrorConContraseniaInvalida
	
	| anInterfaz aUser aPassword |
	
	aUser := 'Carla la valida'.
	aPassword := 'contraseña invalida'.
	authenticatorBehavior := [ :anUser :anPassword | ^ false ].
	
	self 
		should: [ anInterfaz := Interfaz logInUser: aUser withPassword: aPassword withAutenticator: self ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidLogInErrorDescription.
			self assert: anInterfaz isNil ]
	! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 20:14:31' prior: 50552929!
test01InterfazDaErrorConUsuarioInvalido
	
	| anInterfaz aUser aPassword |
	
	aUser := 'La invalida'.
	aPassword := 'contraseña valida'.
	authenticatorBehavior := [ :anUser :anPassword | ^ false ].
	
	self 
		should: [ anInterfaz := Interfaz logInUser: aUser withPassword: aPassword withAutenticator: self ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidLogInErrorDescription.
			self assert: anInterfaz isNil ]
	! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 20:14:36' prior: 50553144!
test03InterfazPermiteLogearseConUnUsuarioYContraseniaValidos
	
	| anInterfaz aUser aPassword |
	
	aUser := 'Carla la valida'.
	aPassword := 'contraseña valida'.
	authenticatorBehavior := [ :anUser :anPassword | ^ true ].
	
	anInterfaz := Interfaz logInUser: aUser withPassword: aPassword withAutenticator: self.
	
	self assert: anInterfaz userID equals: aUser
	! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 20:15:12' prior: 50553209!
test03InterfazPermiteLogearseConUnUsuarioYContraseniaValidos

	| anInterfaz aUser aPassword |

	aUser := 'Carla la valida'.
	aPassword := 'contraseña valida'.
	authenticatorBehavior := [ :anUser :anPassword | ^ true ].

	anInterfaz := Interfaz logInUser: aUser withPassword: aPassword withAutenticator: self.

	self assert: anInterfaz userID equals: aUser
	! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 20:15:46'!
test04InterfazPermiteCrearChangos

	| anInterfaz aUser aPassword |

	aUser := 'Carla la valida'.
	aPassword := 'contraseña valida'.
	authenticatorBehavior := [ :anUser :anPassword | ^ true ].

	anInterfaz := Interfaz logInUser: aUser withPassword: aPassword withAutenticator: self.

	self assert: anInterfaz userID equals: aUser
	! !
!InterfazTest methodsFor: 'setUp' stamp: 'MO 11/3/2022 20:18:01' prior: 50552915 overrides: 16961394!
setUp 

	testObjectsFactory := StoreTestObjectsFactory new.
	authenticatorBehavior := [ :aUser :aPassword | ^ true]! !
!InterfazTest methodsFor: 'setUp' stamp: 'MO 11/3/2022 20:18:03' prior: 50553251 overrides: 16961394!
setUp 

	testObjectsFactory := StoreTestObjectsFactory new.
	authenticatorBehavior := [ :aUser :aPassword | ^ true ]! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 20:18:10' prior: 50553223!
test03InterfazPermiteLogearseConUnUsuarioYContraseniaValidos

	| anInterfaz aUser aPassword |

	aUser := 'Carla la valida'.
	aPassword := 'contraseña valida'.

	anInterfaz := Interfaz logInUser: aUser withPassword: aPassword withAutenticator: self.

	self assert: anInterfaz userID equals: aUser
	! !
!StoreTestObjectsFactory methodsFor: 'cart' stamp: 'MO 11/3/2022 20:22:10'!
createInterfaz: anAuthenticator
	
	^ Interfaz logInUser: 'sisi' withPassword: 'jiji' withAutenticator: anAuthenticator.! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 20:23:04' prior: 50553237!
test04InterfazPermiteCrearChangos

	| anInterfaz aUser aPassword |

	aUser := 'Carla la valida'.
	aPassword := 'contraseña valida'.

	anInterfaz := testObjectsFactory createInterfaz: self.

	self assert: anInterfaz userID equals: aUser
	! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 20:32:02' prior: 50553284!
test04InterfazPermiteCrearChangos

	| anInterfaz |

	anInterfaz := testObjectsFactory createInterfaz: self.

	anInterfaz createCart
	! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 20:35:10' prior: 50553191!
test01InterfazDaErrorConUsuarioInvalido
	
	| anInterfaz aUser aPassword |
	
	aUser := 'La invalida'.
	aPassword := 'contraseña valida'.
	authenticatorBehavior := [ :anUser :anPassword | ^ false ].
	anInterfaz := Interfaz withAuthenticator: self.
	
	self 
		should: [ anInterfaz := Interfaz createCartForUser: aUser withPassword: aPassword ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidLogInErrorDescription.
			self assert: anInterfaz isNil ]
	! !
!Interfaz class methodsFor: 'as yet unclassified' stamp: 'MO 11/3/2022 20:35:57'!
withAuthenticator: anAuthenticator
	
	^ self new initializeWithUserID: anAuthenticator
	! !

!classDefinition: 'Interfaz class' category: 'TusLibros' stamp: 'MO 11/3/2022 20:37:09'!
Interfaz class
	instanceVariableNames: 'authenticator'!
!Interfaz class methodsFor: 'as yet unclassified' stamp: 'MO 11/3/2022 20:37:18'!
createCartForUser: aUserID withPassword: aPassword
	
	(authenticator authenticateUser: aUserID with: aPassword) ifFalse: [self error: self class invalidLogInErrorDescription].
	! !

!methodRemoval: Interfaz class #logInUser:withPassword:withAutenticator: stamp: 'MO 11/3/2022 20:37:33'!
logInUser: aUser withPassword: aPassword withAutenticator: anAuthenticator
	
	(anAuthenticator authenticateUser: aUser with: aPassword) ifFalse: [self error: self invalidLogInErrorDescription].
	
	^ self new initializeWithUserID: aUser
	!

!methodRemoval: Interfaz class #createCartForUser:withPassword: stamp: 'MO 11/3/2022 20:37:38'!
createCartForUser: aUserID withPassword: aPassword
	
	(authenticator authenticateUser: aUserID with: aPassword) ifFalse: [self error: self class invalidLogInErrorDescription].
	!

!classDefinition: #Interfaz category: 'TusLibros' stamp: 'MO 11/3/2022 20:37:49'!
Object subclass: #Interfaz
	instanceVariableNames: 'userID authenticator'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Interfaz methodsFor: 'as yet unclassified' stamp: 'MO 11/3/2022 20:37:46'!
createCartForUser: aUserID withPassword: aPassword
	
	(authenticator authenticateUser: aUserID with: aPassword) ifFalse: [self error: self class invalidLogInErrorDescription]! !

Interfaz class
	instanceVariableNames: ''!

!classDefinition: 'Interfaz class' category: 'TusLibros' stamp: 'MO 11/3/2022 20:37:58'!
Interfaz class
	instanceVariableNames: ''!
!Interfaz class methodsFor: 'as yet unclassified' stamp: 'MO 11/3/2022 20:38:18' prior: 50553321!
withAuthenticator: anAuthenticator
	
	^ self new initializeWith: anAuthenticator
	! !
!Interfaz methodsFor: 'as yet unclassified' stamp: 'MO 11/3/2022 20:38:36'!
initializeWith: anAuthenticator

	authenticator := anAuthenticator! !

!methodRemoval: Interfaz #initializeWithUserID: stamp: 'MO 11/3/2022 20:38:48'!
initializeWithUserID: aUserID

	userID := aUserID!

!classDefinition: #Interfaz category: 'TusLibros' stamp: 'MO 11/3/2022 20:39:28'!
Object subclass: #Interfaz
	instanceVariableNames: 'userID authenticator userCarts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Interfaz methodsFor: 'as yet unclassified' stamp: 'MO 11/3/2022 20:39:26' prior: 50553387!
initializeWith: anAuthenticator

	authenticator := anAuthenticator.
	userCarts := Dictionary new! !

!methodRemoval: Interfaz #userID stamp: 'MO 11/3/2022 20:39:31'!
userID

	^ userID!

!testRun: #InterfazTest #test01InterfazDaErrorConUsuarioInvalido stamp: 'MO 11/3/2022 20:40:18'!
FAILURE!

!testRun: #InterfazTest #test01InterfazDaErrorConUsuarioInvalido stamp: 'MO 11/3/2022 20:40:18'!
FAILURE!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 20:40:43' prior: 50553302!
test01InterfazDaErrorConUsuarioInvalido
	
	| anInterfaz aUser aPassword |
	
	aUser := 'La invalida'.
	aPassword := 'contraseña valida'.
	authenticatorBehavior := [ :anUser :anPassword | ^ false ].
	anInterfaz := Interfaz withAuthenticator: self.
	
	self 
		should: [ anInterfaz createCartForUser: aUser withPassword: aPassword ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidLogInErrorDescription ]
	! !

!testRun: #InterfazTest #test01InterfazDaErrorConUsuarioInvalido stamp: 'MO 11/3/2022 20:40:49'!
PASSED!

!testRun: #InterfazTest #test01InterfazDaErrorConUsuarioInvalido stamp: 'MO 11/3/2022 20:40:49'!
PASSED!

!testRun: #InterfazTest #test02InterfazDaErrorConContraseniaInvalida stamp: 'MO 11/3/2022 20:40:49'!
FAILURE!

!testRun: #InterfazTest #test03InterfazPermiteLogearseConUnUsuarioYContraseniaValidos stamp: 'MO 11/3/2022 20:40:49'!
ERROR!

!testRun: #InterfazTest #test04InterfazPermiteCrearChangos stamp: 'MO 11/3/2022 20:40:49'!
ERROR!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 20:41:40' prior: 50553173!
test02InterfazDaErrorConContraseniaInvalida
	
	| anInterfaz aUser aPassword |
	
	aUser := 'Carla la valida'.
	aPassword := 'contraseña invalida'.
	authenticatorBehavior := [ :anUser :anPassword | ^ false ].
	anInterfaz := Interfaz withAuthenticator: self.
	
	self 
		should: [ anInterfaz createCartForUser: aUser withPassword: aPassword ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidLogInErrorDescription ]
	! !

!testRun: #InterfazTest #test02InterfazDaErrorConContraseniaInvalida stamp: 'MO 11/3/2022 20:41:41'!
PASSED!

!testRun: #InterfazTest #test01InterfazDaErrorConUsuarioInvalido stamp: 'MO 11/3/2022 20:41:41'!
PASSED!

!testRun: #InterfazTest #test02InterfazDaErrorConContraseniaInvalida stamp: 'MO 11/3/2022 20:41:41'!
PASSED!

!testRun: #InterfazTest #test03InterfazPermiteLogearseConUnUsuarioYContraseniaValidos stamp: 'MO 11/3/2022 20:41:41'!
ERROR!

!testRun: #InterfazTest #test04InterfazPermiteCrearChangos stamp: 'MO 11/3/2022 20:41:41'!
ERROR!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 20:42:19'!
test01createCartDaErrorConUsuarioInvalido
	
	| anInterfaz aUser aPassword |
	
	aUser := 'La invalida'.
	aPassword := 'contraseña valida'.
	authenticatorBehavior := [ :anUser :anPassword | ^ false ].
	anInterfaz := Interfaz withAuthenticator: self.
	
	self 
		should: [ anInterfaz createCartForUser: aUser withPassword: aPassword ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidLogInErrorDescription ]
	! !

!methodRemoval: InterfazTest #test01InterfazDaErrorConUsuarioInvalido stamp: 'MO 11/3/2022 20:42:19'!
test01InterfazDaErrorConUsuarioInvalido
	
	| anInterfaz aUser aPassword |
	
	aUser := 'La invalida'.
	aPassword := 'contraseña valida'.
	authenticatorBehavior := [ :anUser :anPassword | ^ false ].
	anInterfaz := Interfaz withAuthenticator: self.
	
	self 
		should: [ anInterfaz createCartForUser: aUser withPassword: aPassword ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidLogInErrorDescription ]
	!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 20:42:28'!
test02createCartDaErrorConContraseniaInvalida
	
	| anInterfaz aUser aPassword |
	
	aUser := 'Carla la valida'.
	aPassword := 'contraseña invalida'.
	authenticatorBehavior := [ :anUser :anPassword | ^ false ].
	anInterfaz := Interfaz withAuthenticator: self.
	
	self 
		should: [ anInterfaz createCartForUser: aUser withPassword: aPassword ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidLogInErrorDescription ]
	! !

!methodRemoval: InterfazTest #test02InterfazDaErrorConContraseniaInvalida stamp: 'MO 11/3/2022 20:42:29'!
test02InterfazDaErrorConContraseniaInvalida
	
	| anInterfaz aUser aPassword |
	
	aUser := 'Carla la valida'.
	aPassword := 'contraseña invalida'.
	authenticatorBehavior := [ :anUser :anPassword | ^ false ].
	anInterfaz := Interfaz withAuthenticator: self.
	
	self 
		should: [ anInterfaz createCartForUser: aUser withPassword: aPassword ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidLogInErrorDescription ]
	!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 20:42:48'!
test03createCartFuncionaConUnUsuarioYContraseniaValidos

	| anInterfaz aUser aPassword |

	aUser := 'Carla la valida'.
	aPassword := 'contraseña valida'.

	anInterfaz := Interfaz logInUser: aUser withPassword: aPassword withAutenticator: self.

	self assert: anInterfaz userID equals: aUser
	! !

!methodRemoval: InterfazTest #test03InterfazPermiteLogearseConUnUsuarioYContraseniaValidos stamp: 'MO 11/3/2022 20:42:48'!
test03InterfazPermiteLogearseConUnUsuarioYContraseniaValidos

	| anInterfaz aUser aPassword |

	aUser := 'Carla la valida'.
	aPassword := 'contraseña valida'.

	anInterfaz := Interfaz logInUser: aUser withPassword: aPassword withAutenticator: self.

	self assert: anInterfaz userID equals: aUser
	!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 20:45:08' prior: 50553556!
test03createCartFuncionaConUnUsuarioYContraseniaValidos

	| anInterfaz aUser aPassword |

	aUser := 'Carla la valida'.
	aPassword := 'contraseña valida'.
	anInterfaz := Interfaz withAuthenticator: self.
	
	anInterfaz createCartForUser: aUser withPassword: aPassword.

	self assert: anInterfaz userID equals: aUser
	! !
!StoreTestObjectsFactory methodsFor: 'interfaz' stamp: 'MO 11/3/2022 20:45:47' prior: 50553277!
createInterfaz: anAuthenticator
	
	^ Interfaz withAuthenticator: anAuthenticator.! !

!classDefinition: #InterfazTest category: 'TusLibros' stamp: 'MO 11/3/2022 20:47:14'!
TestCase subclass: #InterfazTest
	instanceVariableNames: 'testObjectsFactory authenticatorBehavior laInterfaz'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!InterfazTest methodsFor: 'setUp' stamp: 'MO 11/3/2022 20:47:11' prior: 50553258 overrides: 16961394!
setUp 

	testObjectsFactory := StoreTestObjectsFactory new.
	authenticatorBehavior := [ :aUser :aPassword | ^ true ].
	
	laInterfaz := Interfaz withAuthenticator: self.! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 20:47:34' prior: 50553487!
test01createCartDaErrorConUsuarioInvalido
	
	| aUser aPassword |
	
	aUser := 'La invalida'.
	aPassword := 'contraseña valida'.
	authenticatorBehavior := [ :anUser :anPassword | ^ false ].
	
	self 
		should: [ laInterfaz createCartForUser: aUser withPassword: aPassword ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidLogInErrorDescription ]
	! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 20:47:45' prior: 50553521!
test02createCartDaErrorConContraseniaInvalida
	
	| aUser aPassword |
	
	aUser := 'Carla la valida'.
	aPassword := 'contraseña invalida'.
	authenticatorBehavior := [ :anUser :anPassword | ^ false ].
	
	self 
		should: [ laInterfaz createCartForUser: aUser withPassword: aPassword ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidLogInErrorDescription ]
	! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 20:47:59' prior: 50553581!
test03createCartFuncionaConUnUsuarioYContraseniaValidos

	| aUser aPassword |

	aUser := 'Carla la valida'.
	aPassword := 'contraseña valida'.
	
	laInterfaz createCartForUser: aUser withPassword: aPassword.

	self assert: laInterfaz userID equals: aUser
	! !

Object subclass: #Interfaz
	instanceVariableNames: 'authenticator userCarts cartIDManager'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Interfaz category: 'TusLibros' stamp: 'MO 11/3/2022 20:52:16'!
Object subclass: #Interfaz
	instanceVariableNames: 'authenticator userCarts cartIDManager'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Interfaz methodsFor: 'as yet unclassified' stamp: 'MO 11/3/2022 20:52:29' prior: 50553404!
initializeWith: anAuthenticator

	authenticator := anAuthenticator.
	userCarts := Dictionary new.
	cartIDManager := 0! !

!classDefinition: #Interfaz category: 'TusLibros' stamp: 'MO 11/3/2022 20:55:12'!
Object subclass: #Interfaz
	instanceVariableNames: 'authenticator cartIDtoCart cartIDManager'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Interfaz methodsFor: 'as yet unclassified' stamp: 'MO 11/3/2022 20:55:12' prior: 50553673!
initializeWith: anAuthenticator

	authenticator := anAuthenticator.
	cartIDtoCart := Dictionary new.
	cartIDManager := 0! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 20:56:47' prior: 50553649!
test03createCartFuncionaConUnUsuarioYContraseniaValidos

	| aUser aPassword changoID |

	aUser := 'Carla la valida'.
	aPassword := 'contraseña valida'.
	
	changoID := laInterfaz createCartForUser: aUser withPassword: aPassword.

	self assert: changoID listCart equals: ''
	! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 20:57:44' prior: 50553695!
test03createCartFuncionaConUnUsuarioYContraseniaValidos

	| aUser aPassword changoID |

	aUser := 'Carla la valida'.
	aPassword := 'contraseña valida'.

	changoID := laInterfaz createCartForUser: aUser withPassword: aPassword.

	self assert: changoID listCart equals: ''
	! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 20:58:16' prior: 50553707!
test03createCartFuncionaConUnUsuarioYContraseniaValidos

	| aUser aPassword changoID |

	aUser := 'Carla la valida'.
	aPassword := 'contraseña valida'.

	changoID := laInterfaz createCartForUser: aUser withPassword: aPassword.

	self assert: changoID listCart isEmpty
	! !

!methodRemoval: InterfazTest #test04InterfazPermiteCrearChangos stamp: 'MO 11/3/2022 20:58:38'!
test04InterfazPermiteCrearChangos

	| anInterfaz |

	anInterfaz := testObjectsFactory createInterfaz: self.

	anInterfaz createCart
	!
!Interfaz class methodsFor: 'as yet unclassified' stamp: 'MO 11/3/2022 21:01:39'!
withAuthenticator: anAuthenticator withCatalog: aCatalog 
	
	^ self new initializeWith: anAuthenticator
	! !
!StoreTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'MO 11/3/2022 21:01:39' prior: 50553594!
createInterfaz: anAuthenticator
	
	^ Interfaz withAuthenticator: anAuthenticator withCatalog: aCatalog.! !
!InterfazTest methodsFor: 'as yet unclassified' stamp: 'MO 11/3/2022 21:01:40' prior: 50553609 overrides: 16961394!
setUp 

	testObjectsFactory := StoreTestObjectsFactory new.
	authenticatorBehavior := [ :aUser :aPassword | ^ true ].
	
	laInterfaz := Interfaz withAuthenticator: self withCatalog: aCatalog.! !

!methodRemoval: Interfaz class #withAuthenticator: stamp: 'MO 11/3/2022 21:01:40'!
withAuthenticator: anAuthenticator
	
	^ self new initializeWith: anAuthenticator
	!
!InterfazTest methodsFor: 'setUp' stamp: 'MO 11/3/2022 21:02:21' prior: 50553752 overrides: 16961394!
setUp 

	testObjectsFactory := StoreTestObjectsFactory new.
	authenticatorBehavior := [ :aUser :aPassword | ^ true ].
	
	laInterfaz := testObjectsFactory createInterfaz: self.! !
!StoreTestObjectsFactory methodsFor: 'interfaz' stamp: 'MO 11/3/2022 21:02:42' prior: 50553745!
createInterfaz: anAuthenticator
	
	^ Interfaz withAuthenticator: anAuthenticator withCatalog: self defaultCatalog! !

Object subclass: #Interfaz
	instanceVariableNames: 'authenticator catalog cartIDtoCart cartIDManager'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Interfaz category: 'TusLibros' stamp: 'MO 11/3/2022 21:06:10'!
Object subclass: #Interfaz
	instanceVariableNames: 'authenticator catalog cartIDtoCart cartIDManager'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Interfaz class methodsFor: 'as yet unclassified' stamp: 'MO 11/3/2022 21:06:42' prior: 50553738!
withAuthenticator: anAuthenticator withCatalog: aCatalog 
	
	^ self new initializeWith: anAuthenticator
	! !
!Interfaz methodsFor: 'as yet unclassified' stamp: 'MO 11/3/2022 21:07:03'!
initializeWith: anAuthenticator with: aCatalog 

	authenticator := anAuthenticator.
	cartIDtoCart := Dictionary new.
	cartIDManager := 0! !
!Interfaz class methodsFor: 'as yet unclassified' stamp: 'MO 11/3/2022 21:07:03' prior: 50553797!
withAuthenticator: anAuthenticator withCatalog: aCatalog 
	
	^ self new initializeWith: anAuthenticator with: aCatalog
	! !

!methodRemoval: Interfaz #initializeWith: stamp: 'MO 11/3/2022 21:07:03'!
initializeWith: anAuthenticator

	authenticator := anAuthenticator.
	cartIDtoCart := Dictionary new.
	cartIDManager := 0!
!Interfaz methodsFor: 'as yet unclassified' stamp: 'MO 11/3/2022 21:07:22' prior: 50553803!
initializeWith: anAuthenticator with: aCatalog 

	authenticator := anAuthenticator.
	catalog  := aCatalog.
	cartIDtoCart := Dictionary new.
	cartIDManager := 0! !
!Interfaz methodsFor: 'as yet unclassified' stamp: 'MO 11/3/2022 21:08:49' prior: 50553366!
createCartForUser: aUserID withPassword: aPassword
	
	(authenticator authenticateUser: aUserID with: aPassword) ifFalse: [self error: self class invalidLogInErrorDescription].
	
	cartIDtoCart at: cartIDManager put: (Cart acceptingItemsOf: catalog).
	
	cartIDManager := cartIDManager + 1.
	
	^ cartIDManager - 1! !
!Cart methodsFor: 'total' stamp: 'MO 11/3/2022 21:13:05'!
items
	
	^ items! !
!Cart methodsFor: 'total' stamp: 'MO 11/3/2022 21:13:41' prior: 50553844!
items
	
	^ items copy! !
!Interfaz methodsFor: 'as yet unclassified' stamp: 'MO 11/3/2022 21:13:55'!
listCart: aChangoID

	^ (cartIDtoCart at: aChangoID) items! !

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/3/2022 21:14:02'!
ERROR!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/3/2022 21:14:02'!
ERROR!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/3/2022 21:14:19'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/3/2022 21:14:21'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/3/2022 21:14:24'!
ERROR!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/3/2022 21:14:24'!
ERROR!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 21:14:31' prior: 50553719!
test03createCartFuncionaConUnUsuarioYContraseniaValidos

	| aUser aPassword changoID |

	aUser := 'Carla la valida'.
	aPassword := 'contraseña valida'.

	changoID := laInterfaz createCartForUser: aUser withPassword: aPassword.

	"self assert: changoID listCart isEmpty"
	! !

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/3/2022 21:14:34'!
ERROR!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/3/2022 21:15:39'!
ERROR!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/3/2022 21:18:08'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 21:18:20' prior: 50553633!
test02createCartDaErrorConContraseniaInvalida
	
	| aUser aPassword |
	
	aUser := 'Carla la valida'.
	aPassword := 'contraseña invalida'.
	authenticatorBehavior := [ :anUser :anPassword | false ].
	
	self 
		should: [ laInterfaz createCartForUser: aUser withPassword: aPassword ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidLogInErrorDescription ]
	! !

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/3/2022 21:18:22'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 21:18:29' prior: 50553617!
test01createCartDaErrorConUsuarioInvalido
	
	| aUser aPassword |
	
	aUser := 'La invalida'.
	aPassword := 'contraseña valida'.
	authenticatorBehavior := [ :anUser :anPassword | false ].
	
	self 
		should: [ laInterfaz createCartForUser: aUser withPassword: aPassword ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidLogInErrorDescription ]
	! !

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/3/2022 21:18:30'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/3/2022 21:18:30'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/3/2022 21:18:30'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/3/2022 21:18:30'!
ERROR!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/3/2022 21:18:30'!
ERROR!
!InterfazTest methodsFor: 'setUp' stamp: 'MO 11/3/2022 21:18:40' prior: 50553767 overrides: 16961394!
setUp 

	testObjectsFactory := StoreTestObjectsFactory new.
	authenticatorBehavior := [ :aUser :aPassword | true ].
	
	laInterfaz := testObjectsFactory createInterfaz: self.! !

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/3/2022 21:18:43'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/3/2022 21:18:43'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/3/2022 21:18:43'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 21:19:24' prior: 50553878!
test03createCartFuncionaConUnUsuarioYContraseniaValidos

	| aUser aPassword changoID |

	aUser := 'Carla la valida'.
	aPassword := 'contraseña valida'.

	changoID := laInterfaz createCartForUser: aUser withPassword: aPassword.

	self assert: changoID listCart isEmpty
	! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 21:19:49' prior: 50553973!
test03createCartFuncionaConUnUsuarioYContraseniaValidos

	| aUser aPassword changoID |

	aUser := 'Carla la valida'.
	aPassword := 'contraseña valida'.

	changoID := laInterfaz createCartForUser: aUser withPassword: aPassword.

	self assert: (laInterfaz listCart: changoID) isEmpty
	! !

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/3/2022 21:19:51'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/3/2022 21:19:51'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/3/2022 21:19:51'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/3/2022 21:19:51'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 21:24:02'!
test04listCartNoFuncionaConUnIDInvalido

	self 
		should: [ laInterfaz addToCart: 0 ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidCartIDErrorDescription ]! !
!Interfaz methodsFor: 'as yet unclassified' stamp: 'MO 11/3/2022 21:24:57'!
addToCart: aChangoID

	self error: self class invalidCartIDErrorDescription.! !
!Interfaz class methodsFor: 'as yet unclassified' stamp: 'MO 11/3/2022 21:25:15'!
invalidCartIDErrorDescription

	^ 'ese chango no existe man'! !
!Interfaz methodsFor: 'operations' stamp: 'MO 11/3/2022 21:28:16' prior: 50553832!
createCartForUser: aUserID withPassword: aPassword
	
	self assertValid: aUserID with: aPassword.
	
	cartIDtoCart at: cartIDManager put: (Cart acceptingItemsOf: catalog).
	
	cartIDManager := cartIDManager + 1.
	
	^ cartIDManager - 1! !
!Interfaz methodsFor: 'assertions' stamp: 'MO 11/3/2022 21:28:44'!
assertValid: aUserID with: aPassword

	(authenticator authenticateUser: aUserID with: aPassword) ifFalse: [self error: self class invalidLogInErrorDescription]! !
!Interfaz methodsFor: 'operations' stamp: 'MO 11/3/2022 21:29:58' prior: 50554021!
addToCart: aChangoID
	
	self asssertValidCart.! !
!Interfaz methodsFor: 'assertions' stamp: 'MO 11/3/2022 21:30:08'!
asssertValidCart

	self error: self class invalidCartIDErrorDescription! !
!Interfaz methodsFor: 'assertions' stamp: 'MO 11/3/2022 21:30:22'!
assertValidCart

	self error: self class invalidCartIDErrorDescription! !
!Interfaz methodsFor: 'as yet unclassified' stamp: 'MO 11/3/2022 21:30:22' prior: 50554050!
addToCart: aChangoID
	
	self assertValidCart.! !

!methodRemoval: Interfaz #asssertValidCart stamp: 'MO 11/3/2022 21:30:22'!
asssertValidCart

	self error: self class invalidCartIDErrorDescription!

!testRun: #InterfazTest #test04listCartNoFuncionaConUnIDInvalido stamp: 'MO 11/3/2022 21:30:27'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/3/2022 21:30:27'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/3/2022 21:30:27'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/3/2022 21:30:27'!
PASSED!

!testRun: #InterfazTest #test04listCartNoFuncionaConUnIDInvalido stamp: 'MO 11/3/2022 21:30:27'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 21:30:58'!
test04addCartNoFuncionaConUnIDInvalido

	self 
		should: [ laInterfaz addToCart: 0 ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidCartIDErrorDescription ]! !

!methodRemoval: InterfazTest #test04listCartNoFuncionaConUnIDInvalido stamp: 'MO 11/3/2022 21:30:58'!
test04listCartNoFuncionaConUnIDInvalido

	self 
		should: [ laInterfaz addToCart: 0 ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidCartIDErrorDescription ]!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 21:32:21'!
test05addCartNoFuncionaConUnLibroInvalido

	self 
		should: [ laInterfaz addToCart: 0 ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidCartIDErrorDescription ]! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 21:33:59' prior: 50554110!
test05addCartNoFuncionaConUnLibroInvalido

	self 
		should: [ laInterfaz addToCart: 0 book: 'Don Quejas' quantity: 1]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidCartIDErrorDescription ]! !
!Interfaz methodsFor: 'operations' stamp: 'MO 11/3/2022 21:35:11'!
addToCart: aChangoID book: aBookISBN quantity: aQuantity
	
	self assertValidCart.! !

!methodRemoval: Interfaz #addToCart: stamp: 'MO 11/3/2022 21:35:24'!
addToCart: aChangoID
	
	self assertValidCart.!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 21:35:53' prior: 50554091!
test04addCartNoFuncionaConUnIDInvalido

	self 
		should: [ laInterfaz addToCart: 0 book: 'Libro valido' quantity: 1 ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidCartIDErrorDescription ]! !

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'MO 11/3/2022 21:35:56'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 21:38:34' prior: 50554120!
test05addCartNoFuncionaConUnLibroInvalido

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	self 
		should: [ laInterfaz addToCart: changoID book:  'Don Quejas' quantity: 1 ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidCartIDErrorDescription ]! !
!Interfaz methodsFor: 'assertions' stamp: 'MO 11/3/2022 21:40:27'!
assertValidCart: aChangoID

	self error: self class invalidCartIDErrorDescription! !
!Interfaz methodsFor: 'as yet unclassified' stamp: 'MO 11/3/2022 21:40:28' prior: 50554130!
addToCart: aChangoID book: aBookISBN quantity: aQuantity
	
	self assertValidCart: aChangoID.! !

!methodRemoval: Interfaz #assertValidCart stamp: 'MO 11/3/2022 21:40:28'!
assertValidCart

	self error: self class invalidCartIDErrorDescription!

----End fileIn of C:\Users\maria\Desktop\Facultad\Taller\Inge1\CuisUniversity-windows64\Packages\TerseGuide.pck.st----!
!Interfaz methodsFor: 'assertions' stamp: 'MO 11/3/2022 21:42:24' prior: 50554166!
assertValidCart: aChangoID

	(cartIDtoCart includesKey: aChangoID) ifFalse: [ self error: self class invalidCartIDErrorDescription ]! !
!Interfaz methodsFor: 'operations' stamp: 'MO 11/3/2022 21:44:26' prior: 50554172!
addToCart: aChangoID book: aBookISBN quantity: aQuantity
	
	self assertValidCart: aChangoID.
	self assertValidBook: aBookISBN.
	self assertValidQuantity: aQuantity.
	
	(cartIDtoCart at: aChangoID) add: aQuantity of: aBookISBN! !
!Interfaz methodsFor: 'assertions' stamp: 'MO 11/3/2022 21:45:33'!
assertValidBook: aBookISBN

	(catalog includes: aBookISBN) ifFalse: [ self error: self class invalidBookISBNIDErrorDescription ]! !
!Interfaz class methodsFor: 'error descriptions' stamp: 'MO 11/3/2022 21:46:22'!
invalidBookISBNIDErrorDescription

	^ 'no conocemos ese libro, proba escribirlo y capa lo publicamo'! !
!Interfaz class methodsFor: 'error descriptions' stamp: 'MO 11/3/2022 21:46:33' prior: 50557127!
invalidBookISBNIDErrorDescription

	^ 'no conocemos ese broli, proba escribirlo y capa lo publicamo'! !
!Interfaz methodsFor: 'assertions' stamp: 'MO 11/3/2022 21:47:29'!
assertValidQuantity: aQuantity

	(aQuantity > 0) ifFalse: [ self error: self class invalidQuantityErrorDescription ]! !
!Interfaz class methodsFor: 'error descriptions' stamp: 'MO 11/3/2022 21:47:51'!
invalidQuantityErrorDescription

	^ 'claramente no sabes contar'! !

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'MO 11/3/2022 21:48:09'!
FAILURE!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'MO 11/3/2022 21:48:09'!
FAILURE!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 21:48:36' prior: 50554153!
test05addCartNoFuncionaConUnLibroInvalido

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	self 
		should: [ laInterfaz addToCart: changoID book:  'Don Quejas' quantity: 1 ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidBookISBNIDErrorDescription ]! !

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'MO 11/3/2022 21:48:38'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/3/2022 21:48:38'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/3/2022 21:48:38'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/3/2022 21:48:38'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'MO 11/3/2022 21:48:38'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'MO 11/3/2022 21:48:38'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 21:48:56' prior: 50557159!
test05addCartNoFuncionaConUnLibroInvalido

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	self 
		should: [ laInterfaz addToCart: changoID book:  'Don Quejas' quantity: 1 ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidBookISBNIDErrorDescription.
			self assert: (laInterfaz listCart: changoID) isEmpty ]! !

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'MO 11/3/2022 21:48:57'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/3/2022 21:48:57'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/3/2022 21:48:57'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/3/2022 21:48:57'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'MO 11/3/2022 21:48:57'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'MO 11/3/2022 21:48:57'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 21:49:29'!
test05addCartNoFuncionaConUnaCantidadInvalida

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	self 
		should: [ laInterfaz addToCart: changoID book:  'Don Quejas' quantity: 1 ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidBookISBNIDErrorDescription.
			self assert: (laInterfaz listCart: changoID) isEmpty ]! !
!StoreTestObjectsFactory methodsFor: 'items' stamp: 'MO 11/3/2022 21:50:35' prior: 50552784!
itemSellByTheStore
	
	^ 'La vida y obra de grandes personas como Carla'! !
!StoreTestObjectsFactory methodsFor: 'items' stamp: 'MO 11/3/2022 21:51:04' prior: 50552779!
itemNotSellByTheStore
	
	^'Las marivollas aventuras de Marian y Santi en la calse de Inge'! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 21:51:42'!
test06addCartNoFuncionaConUnaCantidadInvalida

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	self 
		should: [ laInterfaz addToCart: changoID book:  'Don Quejas' quantity: 1 ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidBookISBNIDErrorDescription.
			self assert: (laInterfaz listCart: changoID) isEmpty ]! !

!methodRemoval: InterfazTest #test05addCartNoFuncionaConUnaCantidadInvalida stamp: 'MO 11/3/2022 21:51:42'!
test05addCartNoFuncionaConUnaCantidadInvalida

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	self 
		should: [ laInterfaz addToCart: changoID book:  'Don Quejas' quantity: 1 ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidBookISBNIDErrorDescription.
			self assert: (laInterfaz listCart: changoID) isEmpty ]!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 21:52:11' prior: 50557257!
test06addCartNoFuncionaConUnaCantidadInvalida

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	self 
		should: [ laInterfaz addToCart: changoID book: testObjectsFactory itemSellByTheStore quantity: -69 ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidQuantityErrorDescription.
			self assert: (laInterfaz listCart: changoID) isEmpty ]! !

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'MO 11/3/2022 21:52:16'!
FAILURE!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'MO 11/3/2022 21:52:33'!
FAILURE!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 21:53:00' prior: 50557289!
test06addCartNoFuncionaConUnaCantidadInvalida

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	self 
		should: [ laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: -69 ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidQuantityErrorDescription.
			self assert: (laInterfaz listCart: changoID) isEmpty ]! !

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'MO 11/3/2022 21:53:01'!
FAILURE!
!Interfaz methodsFor: 'assertions' stamp: 'MO 11/3/2022 21:53:49' prior: 50557120!
assertValidBook: aBookISBN

	(catalog includesKey: aBookISBN) ifFalse: [ self error: self class invalidBookISBNIDErrorDescription ]! !

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/3/2022 21:53:52'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/3/2022 21:53:52'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/3/2022 21:53:52'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'MO 11/3/2022 21:53:52'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'MO 11/3/2022 21:53:52'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'MO 11/3/2022 21:53:52'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'MO 11/3/2022 21:54:01'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/3/2022 21:54:01'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/3/2022 21:54:01'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/3/2022 21:54:01'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'MO 11/3/2022 21:54:01'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'MO 11/3/2022 21:54:01'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'MO 11/3/2022 21:54:01'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/3/2022 21:56:36'!
test07addCartFuncionaConTodoBien

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: testObjectsFactory itemSellByTheStore quantity: 2.

	self assert: ((laInterfaz listCart: changoID) occurrencesOf: testObjectsFactory itemSellByTheStore) equals: 2.
	self assert: (laInterfaz listCart: changoID) size equals: 2! !

!testRun: #InterfazTest #test07addCartFuncionaConTodoBien stamp: 'MO 11/3/2022 21:56:37'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/3/2022 21:56:37'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/3/2022 21:56:38'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/3/2022 21:56:38'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'MO 11/3/2022 21:56:38'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'MO 11/3/2022 21:56:38'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'MO 11/3/2022 21:56:38'!
PASSED!

!testRun: #InterfazTest #test07addCartFuncionaConTodoBien stamp: 'MO 11/3/2022 21:56:38'!
PASSED!

!methodRemoval: InterfazTest #test07addCartFuncionaConTodoBien stamp: 'MO 11/3/2022 21:57:56'!
test07addCartFuncionaConTodoBien

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: testObjectsFactory itemSellByTheStore quantity: 2.

	self assert: ((laInterfaz listCart: changoID) occurrencesOf: testObjectsFactory itemSellByTheStore) equals: 2.
	self assert: (laInterfaz listCart: changoID) size equals: 2!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'MO 11/3/2022 21:58:00'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'MO 11/3/2022 21:58:03'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/3/2022 21:58:07'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/3/2022 21:58:07'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/3/2022 21:58:07'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'MO 11/3/2022 21:58:07'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'MO 11/3/2022 21:58:07'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'MO 11/3/2022 21:58:07'!
PASSED!

----SNAPSHOT----(3 November 2022 21:58:35) CuisUniversity-5481.image priorSource: 7059698!

----QUIT----(3 November 2022 21:58:39) CuisUniversity-5481.image priorSource: 7226209!

----STARTUP---- (5 November 2022 13:09:10) as C:\Users\sarod\Desktop\windows64\CuisUniversity-5481.image!


!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'SR 11/5/2022 13:09:36'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'SR 11/5/2022 13:09:36'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'SR 11/5/2022 13:09:36'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'SR 11/5/2022 13:09:36'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'SR 11/5/2022 13:09:36'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'SR 11/5/2022 13:09:36'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'SR 11/5/2022 13:09:42'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'SR 11/5/2022 13:09:42'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'SR 11/5/2022 13:09:42'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'SR 11/5/2022 13:09:42'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'SR 11/5/2022 13:09:42'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'SR 11/5/2022 13:09:42'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'SR 11/5/2022 13:09:44'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'SR 11/5/2022 13:09:44'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'SR 11/5/2022 13:09:44'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'SR 11/5/2022 13:09:44'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'SR 11/5/2022 13:09:44'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'SR 11/5/2022 13:09:44'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'SR 11/5/2022 13:09:44'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'SR 11/5/2022 13:09:44'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'SR 11/5/2022 13:09:46'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'SR 11/5/2022 13:09:46'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'SR 11/5/2022 13:09:46'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'SR 11/5/2022 13:09:46'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'SR 11/5/2022 13:09:46'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'SR 11/5/2022 13:09:46'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'SR 11/5/2022 15:39:30'!
test07addCartFuncionaConCartIDLibroYCantidadValidos

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	
	self assert: (laInterfaz listCart: changoID) size equals: 1.
	self assert: (laInterfaz listCart: changoID) first equals: (testObjectsFactory itemSellByTheStore).! !

!testRun: #InterfazTest #test07addCartFuncionaConCartIDLibroYCantidadValidos stamp: 'SR 11/5/2022 15:39:31'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'SR 11/5/2022 15:39:31'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'SR 11/5/2022 15:39:31'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'SR 11/5/2022 15:39:31'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'SR 11/5/2022 15:39:31'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'SR 11/5/2022 15:39:31'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'SR 11/5/2022 15:39:31'!
PASSED!

!testRun: #InterfazTest #test07addCartFuncionaConCartIDLibroYCantidadValidos stamp: 'SR 11/5/2022 15:39:31'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'SR 11/5/2022 15:40:23'!
test08ListCartNoFuncionaConUnCartIDInvalido

	! !
!InterfazTest methodsFor: 'test' stamp: 'SR 11/5/2022 15:40:55' prior: 50557608!
test08ListCartNoFuncionaConUnCartIDInvalido

	self 
		should: [ laInterfaz listCart: 0 ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidCartIDErrorDescription ]! !

!testRun: #InterfazTest #test08ListCartNoFuncionaConUnCartIDInvalido stamp: 'SR 11/5/2022 15:40:59'!
FAILURE!

!testRun: #InterfazTest #test08ListCartNoFuncionaConUnCartIDInvalido stamp: 'SR 11/5/2022 15:40:59'!
FAILURE!
!Interfaz methodsFor: 'operations' stamp: 'SR 11/5/2022 15:42:14' prior: 50553851!
listCart: aChangoID

	self assertValidCart: aChangoID.
	
	^ (cartIDtoCart at: aChangoID) items! !

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'SR 11/5/2022 15:42:16'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'SR 11/5/2022 15:42:16'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'SR 11/5/2022 15:42:16'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'SR 11/5/2022 15:42:16'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'SR 11/5/2022 15:42:16'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'SR 11/5/2022 15:42:16'!
PASSED!

!testRun: #InterfazTest #test07addCartFuncionaConCartIDLibroYCantidadValidos stamp: 'SR 11/5/2022 15:42:16'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConUnCartIDInvalido stamp: 'SR 11/5/2022 15:42:16'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'SR 11/5/2022 16:03:49'!
test09ListCartFuncionaConCartIDValido

	! !
!InterfazTest methodsFor: 'test' stamp: 'SR 11/5/2022 16:04:21' prior: 50557664!
test09ListCartFuncionaConCartIDValido

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	
	self assert: (laInterfaz listCart: changoID) size equals: 1.
	self assert: (laInterfaz listCart: changoID) first equals: (testObjectsFactory itemSellByTheStore).! !
!InterfazTest methodsFor: 'test' stamp: 'SR 11/5/2022 16:15:52' prior: 50557668!
test09ListCartFuncionaConCartIDValido

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 2.
	
	self assert: (laInterfaz listCart: changoID) size equals: 1.
	self assert: (laInterfaz listCart: changoID) first equals: (testObjectsFactory itemSellByTheStore).! !
!InterfazTest methodsFor: 'test' stamp: 'SR 11/5/2022 16:17:25' prior: 50557683!
test09ListCartFuncionaConCartIDValido

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	
	self assert: (laInterfaz listCart: changoID) size equals: 1.
	self assert: (laInterfaz listCart: changoID) first equals: (testObjectsFactory itemSellByTheStore).! !

!testRun: #InterfazTest #test09ListCartFuncionaConCartIDValido stamp: 'SR 11/5/2022 16:17:26'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'SR 11/5/2022 16:17:26'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'SR 11/5/2022 16:17:26'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'SR 11/5/2022 16:17:26'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'SR 11/5/2022 16:17:26'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'SR 11/5/2022 16:17:26'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'SR 11/5/2022 16:17:26'!
PASSED!

!testRun: #InterfazTest #test07addCartFuncionaConCartIDLibroYCantidadValidos stamp: 'SR 11/5/2022 16:17:26'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConUnCartIDInvalido stamp: 'SR 11/5/2022 16:17:26'!
PASSED!

!testRun: #InterfazTest #test09ListCartFuncionaConCartIDValido stamp: 'SR 11/5/2022 16:17:26'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'SR 11/5/2022 16:18:25'!
test09ListCartConUnLibroRetornaColeccionConEseLibro

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	
	self assert: (laInterfaz listCart: changoID) size equals: 1.
	self assert: (laInterfaz listCart: changoID) first equals: (testObjectsFactory itemSellByTheStore).! !

!methodRemoval: InterfazTest #test09ListCartFuncionaConCartIDValido stamp: 'SR 11/5/2022 16:18:25'!
test09ListCartFuncionaConCartIDValido

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	
	self assert: (laInterfaz listCart: changoID) size equals: 1.
	self assert: (laInterfaz listCart: changoID) first equals: (testObjectsFactory itemSellByTheStore).!
!InterfazTest methodsFor: 'test' stamp: 'SR 11/5/2022 16:20:02'!
test07AddCartConUnLibroAgregaEseLibroAlCart

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	
	self assert: (laInterfaz listCart: changoID) size equals: 1.
	self assert: (laInterfaz listCart: changoID) first equals: (testObjectsFactory itemSellByTheStore).! !

!methodRemoval: InterfazTest #test07addCartFuncionaConCartIDLibroYCantidadValidos stamp: 'SR 11/5/2022 16:20:05'!
test07addCartFuncionaConCartIDLibroYCantidadValidos

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	
	self assert: (laInterfaz listCart: changoID) size equals: 1.
	self assert: (laInterfaz listCart: changoID) first equals: (testObjectsFactory itemSellByTheStore).!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'SR 11/5/2022 16:20:08'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'SR 11/5/2022 16:20:08'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'SR 11/5/2022 16:20:08'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'SR 11/5/2022 16:20:08'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'SR 11/5/2022 16:20:08'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'SR 11/5/2022 16:20:08'!
PASSED!

!testRun: #InterfazTest #test07AddCartConUnLibroAgregaEseLibroAlCart stamp: 'SR 11/5/2022 16:20:08'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConUnCartIDInvalido stamp: 'SR 11/5/2022 16:20:08'!
PASSED!

!testRun: #InterfazTest #test09ListCartConUnLibroRetornaColeccionConEseLibro stamp: 'SR 11/5/2022 16:20:08'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'SR 11/5/2022 16:20:54'!
test10ListCartConMultiplesLibrosRetornaColeccionCorrecta

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	laInterfaz addToCart: changoID book: (testObjectsFactory otherItemSellByTheStore) quantity: 2.
	
	self assert: (laInterfaz listCart: changoID) size equals: 1.
	self assert: (laInterfaz listCart: changoID) first equals: (testObjectsFactory itemSellByTheStore).! !
!StoreTestObjectsFactory methodsFor: 'cart' stamp: 'SR 11/5/2022 16:22:37' prior: 50552797!
defaultCatalog
	
	^ Dictionary new
		at: self itemSellByTheStore put: self itemSellByTheStorePrice;
		at: self otherItemSellByTheStore put: self otherItemSellByTheStorePrice;
		yourself ! !

----STARTUP---- (5 November 2022 16:24:17) as C:\Users\sarod\Desktop\windows64\CuisUniversity-5481.image!


!classRemoval: #StoreTestObjectsFactory stamp: 'SR 11/5/2022 16:24:33'!
Object subclass: #StoreTestObjectsFactory
	instanceVariableNames: 'today'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #Sale stamp: 'SR 11/5/2022 16:24:33'!
Object subclass: #Sale
	instanceVariableNames: 'total'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #Interfaz stamp: 'SR 11/5/2022 16:24:33'!
Object subclass: #Interfaz
	instanceVariableNames: 'authenticator catalog cartIDtoCart cartIDManager'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CreditCard stamp: 'SR 11/5/2022 16:24:33'!
Object subclass: #CreditCard
	instanceVariableNames: 'expiration'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #Cashier stamp: 'SR 11/5/2022 16:24:33'!
Object subclass: #Cashier
	instanceVariableNames: 'cart salesBook merchantProcessor creditCard total'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #Cart stamp: 'SR 11/5/2022 16:24:34'!
Object subclass: #Cart
	instanceVariableNames: 'catalog items'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #InterfazTest stamp: 'SR 11/5/2022 16:24:34'!
TestCase subclass: #InterfazTest
	instanceVariableNames: 'testObjectsFactory authenticatorBehavior laInterfaz'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CashierTest stamp: 'SR 11/5/2022 16:24:34'!
TestCase subclass: #CashierTest
	instanceVariableNames: 'testObjectsFactory debitBehavior'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CartTest stamp: 'SR 11/5/2022 16:24:34'!
TestCase subclass: #CartTest
	instanceVariableNames: 'testObjectsFactory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

----End fileIn of C:\Users\sarod\Desktop\windows64\TusLibros.st----!

----STARTUP---- (5 November 2022 16:25:13) as C:\Users\sarod\Desktop\windows64\CuisUniversity-5481.image!

!InterfazTest methodsFor: 'test' stamp: 'SR 11/5/2022 16:26:40'!
test07AddToCartAgregaUnElementoCorrectamente

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	! !
!InterfazTest methodsFor: 'test' stamp: 'SR 11/5/2022 16:27:18' prior: 50558719!
test07AddToCartAgregaUnElementoCorrectamente

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	
	! !
!InterfazTest methodsFor: 'test' stamp: 'SR 11/5/2022 16:27:29'!
test07AddToCartAgregaUnLibroCorrectamente

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	
	! !

!methodRemoval: InterfazTest #test07AddToCartAgregaUnElementoCorrectamente stamp: 'SR 11/5/2022 16:27:29'!
test07AddToCartAgregaUnElementoCorrectamente

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	
	!
!InterfazTest methodsFor: 'test' stamp: 'SR 11/5/2022 16:28:10' prior: 50558736!
test07AddToCartAgregaUnLibroCorrectamente

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	
	self assert: (laInterfaz listCart: changoID) size equals: 1.
	self assert: (laInterfaz listCart: changoID) first equals: (testObjectsFactory itemSellByTheStore).! !

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'SR 11/5/2022 16:28:11'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'SR 11/5/2022 16:28:11'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'SR 11/5/2022 16:28:11'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'SR 11/5/2022 16:28:11'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'SR 11/5/2022 16:28:11'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'SR 11/5/2022 16:28:11'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'SR 11/5/2022 16:28:11'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'SR 11/5/2022 16:28:11'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'SR 11/5/2022 16:28:27'!
test08ListCartNoFuncionaConCartIDInvalida

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	
	self assert: (laInterfaz listCart: changoID) size equals: 1.
	self assert: (laInterfaz listCart: changoID) first equals: (testObjectsFactory itemSellByTheStore).! !
!InterfazTest methodsFor: 'test' stamp: 'SR 11/5/2022 16:28:56' prior: 50558799!
test08ListCartNoFuncionaConCartIDInvalida

	self 
		should: [ laInterfaz listCart: 0 ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidCartIDErrorDescription ]! !

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'SR 11/5/2022 16:28:57'!
FAILURE!
!Interfaz methodsFor: 'operations' stamp: 'SR 11/5/2022 16:29:19' prior: 50553851!
listCart: aChangoID

	self assertValidCart: aChangoID.
	^ (cartIDtoCart at: aChangoID) items! !

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'SR 11/5/2022 16:29:21'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'SR 11/5/2022 16:29:21'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'SR 11/5/2022 16:29:21'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'SR 11/5/2022 16:29:21'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'SR 11/5/2022 16:29:21'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'SR 11/5/2022 16:29:21'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'SR 11/5/2022 16:29:21'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'SR 11/5/2022 16:29:21'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'SR 11/5/2022 16:29:57'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'SR 11/5/2022 16:30:22'!
test09ListCartACartConUnLibroRetornaColeccionConEseLibro

	self 
		should: [ laInterfaz listCart: 0 ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidCartIDErrorDescription ]! !
!InterfazTest methodsFor: 'test' stamp: 'SR 11/5/2022 16:30:37' prior: 50558863!
test09ListCartACartConUnLibroRetornaColeccionConEseLibro

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	
	self assert: (laInterfaz listCart: changoID) size equals: 1.
	self assert: (laInterfaz listCart: changoID) first equals: (testObjectsFactory itemSellByTheStore).! !

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'SR 11/5/2022 16:30:40'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'SR 11/5/2022 16:30:40'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'SR 11/5/2022 16:30:40'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'SR 11/5/2022 16:30:40'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'SR 11/5/2022 16:30:40'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'SR 11/5/2022 16:30:40'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'SR 11/5/2022 16:30:40'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'SR 11/5/2022 16:30:40'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'SR 11/5/2022 16:30:40'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'SR 11/5/2022 16:31:06'!
test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros
	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	
	self assert: (laInterfaz listCart: changoID) size equals: 1.
	self assert: (laInterfaz listCart: changoID) first equals: (testObjectsFactory itemSellByTheStore).! !
!InterfazTest methodsFor: 'test' stamp: 'SR 11/5/2022 16:31:39' prior: 50558920!
test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros
	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 2.
	laInterfaz addToCart: changoID book: (testObjectsFactory otherItemSellByTheStore) quantity: 3.
	
	self assert: (laInterfaz listCart: changoID) size equals: 5.! !
!StoreTestObjectsFactory methodsFor: 'items' stamp: 'SR 11/5/2022 16:35:14'!
otherItemSellByTheStore
	
	^ 'Otro libro a la venta'! !
!StoreTestObjectsFactory methodsFor: 'items' stamp: 'SR 11/5/2022 16:35:31'!
otherItemSellByTheStorePrice
	
	^50! !
!StoreTestObjectsFactory methodsFor: 'cart' stamp: 'SR 11/5/2022 16:35:55' prior: 50552797!
defaultCatalog
	
	^ Dictionary new
		at: self itemSellByTheStore put: self itemSellByTheStorePrice;
		at: self otherItemSellByTheStore put: self otherItemSellByTheStorePrice;
		yourself ! !
!InterfazTest methodsFor: 'test' stamp: 'SR 11/5/2022 16:36:51' prior: 50558936!
test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros
	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 2.
	laInterfaz addToCart: changoID book: (testObjectsFactory otherItemSellByTheStore) quantity: 3.
	
	self assert: (laInterfaz listCart: changoID) size equals: 5.
	self assert: ((laInterfaz listCart: changoID) occurrencesOf: (testObjectsFactory itemSellByTheStore)) equals: 2.
	self assert: ((laInterfaz listCart: changoID) occurrencesOf: (testObjectsFactory otherItemSellByTheStore)) equals: 3.! !

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'SR 11/5/2022 16:36:53'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'SR 11/5/2022 16:36:53'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'SR 11/5/2022 16:36:53'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'SR 11/5/2022 16:36:53'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'SR 11/5/2022 16:36:53'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'SR 11/5/2022 16:36:53'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'SR 11/5/2022 16:36:53'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'SR 11/5/2022 16:36:53'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'SR 11/5/2022 16:36:53'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'SR 11/5/2022 16:36:53'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'SR 11/5/2022 16:36:53'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'SR 11/5/2022 16:37:13'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'SR 11/5/2022 16:37:13'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'SR 11/5/2022 16:37:13'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'SR 11/5/2022 16:37:13'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'SR 11/5/2022 16:37:13'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'SR 11/5/2022 16:37:13'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'SR 11/5/2022 16:37:13'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'SR 11/5/2022 16:37:13'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'SR 11/5/2022 16:37:13'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'SR 11/5/2022 16:37:13'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'SR 11/5/2022 16:37:56' prior: 50558971!
test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 2.
	laInterfaz addToCart: changoID book: (testObjectsFactory otherItemSellByTheStore) quantity: 3.
	
	self assert: (laInterfaz listCart: changoID) size equals: 5.
	self assert: ((laInterfaz listCart: changoID) occurrencesOf: (testObjectsFactory itemSellByTheStore)) equals: 2.
	self assert: ((laInterfaz listCart: changoID) occurrencesOf: (testObjectsFactory otherItemSellByTheStore)) equals: 3.! !

----SNAPSHOT----(5 November 2022 16:44:58) CuisUniversity-5481.image priorSource: 7226301!

----STARTUP---- (5 November 2022 16:50:42) as /home/carla/Desktop/linux64/CuisUniversity-5510.image!


!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'cde 11/5/2022 16:53:15'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'cde 11/5/2022 16:53:19'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'cde 11/5/2022 16:53:19'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'cde 11/5/2022 16:53:19'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'cde 11/5/2022 16:53:19'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'cde 11/5/2022 16:53:19'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'cde 11/5/2022 16:53:19'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'cde 11/5/2022 16:53:19'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'cde 11/5/2022 16:53:19'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'cde 11/5/2022 16:53:19'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'cde 11/5/2022 16:53:19'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'cde 11/5/2022 16:56:06'!
test11VCheckOutACartConUnLibroRetornaColeccionConEseLibro

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	
	self assert: (laInterfaz listCart: changoID) size equals: 1.
	self assert: (laInterfaz listCart: changoID) first equals: (testObjectsFactory itemSellByTheStore).! !
!InterfazTest methodsFor: 'test' stamp: 'cde 11/5/2022 16:56:36' prior: 50559138!
test11VCheckOutACartConUnLibroRetornaColeccionConEseLibro
	
	self 
		should: [ laInterfaz listCart: 0 ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidCartIDErrorDescription ]! !
!CreditCard methodsFor: 'testing' stamp: 'cde 11/5/2022 17:06:24'!
expirationDate: aCard 
	
	^expiration .! !
!CreditCard methodsFor: 'testing' stamp: 'cde 11/5/2022 17:06:46'!
expirationDate 
	
	^expiration .! !

!methodRemoval: CreditCard #expirationDate: stamp: 'cde 11/5/2022 17:08:00'!
expirationDate: aCard 
	
	^expiration .!

!methodRemoval: CreditCard #expirationDate stamp: 'cde 11/5/2022 17:08:03'!
expirationDate 
	
	^expiration .!
!InterfazTest methodsFor: 'test' stamp: 'cde 11/5/2022 17:10:22' prior: 50559154!
test11VCheckOutACartConUnLibroRetornaColeccionConEseLibro
	|aDate|
	aDate  := Month month: 4 year: 2023 .
	self 
		should: [laInterfaz checkOutCart: 0 withCard: 1234567812345678 expiringOn: aDate withOwner: 'Mariano Oca']
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidCartIDErrorDescription ]! !

!testRun: #InterfazTest #test11VCheckOutACartConUnLibroRetornaColeccionConEseLibro stamp: 'cde 11/5/2022 17:10:26'!
FAILURE!

!testRun: #InterfazTest #test11VCheckOutACartConUnLibroRetornaColeccionConEseLibro stamp: 'cde 11/5/2022 17:10:39'!
FAILURE!
!Interfaz methodsFor: 'operations' stamp: 'cde 11/5/2022 17:11:52'!
checkOutCart: cartID withCard: cardNumber expiringOn: aDate withOwner: aName
	
	! !
!InterfazTest methodsFor: 'test' stamp: 'cde 11/5/2022 17:12:51'!
test11CheckOutACartConUnLibroRetornaColeccionConEseLibro
	|aDate|
	aDate  := Month month: 4 year: 2023 .
	self 
		should: [laInterfaz checkOutCart: 0 withCard: 1234567812345678 expiringOn: aDate withOwner: 'Mariano Oca']
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidCartIDErrorDescription ]! !

!methodRemoval: InterfazTest #test11VCheckOutACartConUnLibroRetornaColeccionConEseLibro stamp: 'cde 11/5/2022 17:12:51'!
test11VCheckOutACartConUnLibroRetornaColeccionConEseLibro
	|aDate|
	aDate  := Month month: 4 year: 2023 .
	self 
		should: [laInterfaz checkOutCart: 0 withCard: 1234567812345678 expiringOn: aDate withOwner: 'Mariano Oca']
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidCartIDErrorDescription ]!
!Interfaz methodsFor: 'operations' stamp: 'cde 11/5/2022 17:14:44' prior: 50559200!
checkOutCart: cartID withCard: cardNumber expiringOn: aDate withOwner: aName
	
	^ self error: self class invalidCartIDErrorDescription.! !

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'cde 11/5/2022 17:14:49'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'cde 11/5/2022 17:14:49'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'cde 11/5/2022 17:14:49'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'cde 11/5/2022 17:14:49'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'cde 11/5/2022 17:14:49'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'cde 11/5/2022 17:14:49'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'cde 11/5/2022 17:14:49'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'cde 11/5/2022 17:14:49'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'cde 11/5/2022 17:14:49'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'cde 11/5/2022 17:14:49'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartConUnLibroRetornaColeccionConEseLibro stamp: 'cde 11/5/2022 17:14:49'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'cde 11/5/2022 17:16:01'!
test11CheckOutACartWithInvalidIDRaisesException
	|aDate|
	aDate  := Month month: 4 year: 2023 .
	self 
		should: [laInterfaz checkOutCart: 0 withCard: 1234567812345678 expiringOn: aDate withOwner: 'Mariano Oca']
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidCartIDErrorDescription ]! !

!methodRemoval: InterfazTest #test11CheckOutACartConUnLibroRetornaColeccionConEseLibro stamp: 'cde 11/5/2022 17:16:01'!
test11CheckOutACartConUnLibroRetornaColeccionConEseLibro
	|aDate|
	aDate  := Month month: 4 year: 2023 .
	self 
		should: [laInterfaz checkOutCart: 0 withCard: 1234567812345678 expiringOn: aDate withOwner: 'Mariano Oca']
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidCartIDErrorDescription ]!
!InterfazTest methodsFor: 'test' stamp: 'cde 11/5/2022 17:16:19'!
test12CheckOutACartWithInvalidCardRaisesException
	|aDate|
	aDate  := Month month: 4 year: 2023 .
	self 
		should: [laInterfaz checkOutCart: 0 withCard: 1234567812345678 expiringOn: aDate withOwner: 'Mariano Oca']
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidCartIDErrorDescription ]! !
!InterfazTest methodsFor: 'test' stamp: 'cde 11/5/2022 17:17:49' prior: 50559309!
test12CheckOutACartWithInvalidCardRaisesException
	|aDate|
	aDate  := Month month: 4 year: 1998.
	self 
		should: [laInterfaz checkOutCart: 0 withCard: 1234567812345678 expiringOn: aDate withOwner: 'Mariano Oca']
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidCartIDErrorDescription ]! !
!InterfazTest methodsFor: 'test' stamp: 'cde 11/5/2022 17:18:11' prior: 50559323!
test12CheckOutACartWithInvalidCardRaisesException
	|aDate changoID|
	aDate  := Month month: 4 year: 1998.
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	self 
		should: [laInterfaz checkOutCart: 0 withCard: 1234567812345678 expiringOn: aDate withOwner: 'Mariano Oca']
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidCartIDErrorDescription ]! !
!InterfazTest methodsFor: 'test' stamp: 'cde 11/5/2022 17:20:10' prior: 50559337!
test12CheckOutACartWithInvalidCardRaisesException
	|aDate changoID|
	aDate  := Month month: 4 year: 1998.
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	self 
		should: [laInterfaz checkOutCart: changoID withCard: 1234567812345678 expiringOn: aDate withOwner: 'user']
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidCartIDErrorDescription ]! !
!InterfazTest methodsFor: 'test' stamp: 'cde 11/5/2022 17:26:12' prior: 50559353!
test12CheckOutACartWithInvalidCardRaisesException
	|aDate changoID |
	aDate  := Month month: 4 year: 1998.
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	self 
		should: [laInterfaz checkOutCart: changoID withCard: 1234567812345678 expiringOn: aDate withOwner: 'user']
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz canNotChargeAnExpiredCreditCardErrorMessage ]! !

Object subclass: #CreditCard
	instanceVariableNames: 'expiration owner number '
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CreditCard category: 'TusLibros' stamp: 'cde 11/5/2022 17:30:35'!
Object subclass: #CreditCard
	instanceVariableNames: 'expiration owner number'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CreditCard class methodsFor: 'instance creation' stamp: 'cde 11/5/2022 17:32:06'!
expiringOn: aMonth withNumber: aCardNumber withOwner: aName
	
	^self new initializeExpiringOn: aMonth! !
!CreditCard methodsFor: 'initialization' stamp: 'cde 11/5/2022 17:32:51'!
initializeExpiringOn: aMonth withNumber: aNumber withOwner: aName
	
	expiration := aMonth 
	! !

Object subclass: #CreditCard
	instanceVariableNames: 'expiration owner cardNumber'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CreditCard category: 'TusLibros' stamp: 'cde 11/5/2022 17:32:58'!
Object subclass: #CreditCard
	instanceVariableNames: 'expiration owner cardNumber'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CreditCard methodsFor: 'initialization' stamp: 'cde 11/5/2022 17:33:19' prior: 50559404!
initializeExpiringOn: aMonth withNumber: aNumber withOwner: aName
	
	expiration := aMonth.
	cardNumber := aNumber.
	owner := aName.
	! !

!methodRemoval: CreditCard class #expiringOn: stamp: 'cde 11/5/2022 17:33:40'!
expiringOn: aMonth 
	
	^self new initializeExpiringOn: aMonth!
!CreditCard class methodsFor: 'instance creation' stamp: 'cde 11/5/2022 17:34:22' prior: 50559398!
expiringOn: aMonth withNumber: aCardNumber withOwner: aName
	
	^self new initializeExpiringOn: aMonth withNumber: aCardNumber withOwner: aName.! !

!methodRemoval: CreditCard #initializeExpiringOn: stamp: 'cde 11/5/2022 17:35:06'!
initializeExpiringOn: aMonth 
	
	expiration := aMonth !

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'cde 11/5/2022 17:35:32'!
ERROR!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'cde 11/5/2022 17:35:32'!
ERROR!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'cde 11/5/2022 17:35:32'!
ERROR!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'cde 11/5/2022 17:35:32'!
ERROR!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'cde 11/5/2022 17:35:32'!
ERROR!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'cde 11/5/2022 17:35:32'!
ERROR!
!CreditCard class methodsFor: 'instance creation' stamp: 'cde 11/5/2022 17:36:21'!
expiringOn: aMonth 
	
	^self new initializeExpiringOn: aMonth.! !
!StoreTestObjectsFactory methodsFor: 'credit card' stamp: 'cde 11/5/2022 17:37:19' prior: 50552811!
expiredCreditCard
	
	^CreditCard expiringOn: (Month month: today monthIndex year: today yearNumber - 1) withNumber: 1234123412341234 withOwner: 'Santi '! !
!StoreTestObjectsFactory methodsFor: 'credit card' stamp: 'cde 11/5/2022 17:37:44' prior: 50552804!
notExpiredCreditCard
	
	^CreditCard expiringOn: (Month month: today monthIndex year: today yearNumber + 1) withNumber: 1234123412341234 withOwner: 'Marianito'! !

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'cde 11/5/2022 17:37:53'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'cde 11/5/2022 17:37:53'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'cde 11/5/2022 17:37:53'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'cde 11/5/2022 17:37:53'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'cde 11/5/2022 17:37:53'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'cde 11/5/2022 17:37:53'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'cde 11/5/2022 17:37:59'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'cde 11/5/2022 17:37:59'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'cde 11/5/2022 17:37:59'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'cde 11/5/2022 17:37:59'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'cde 11/5/2022 17:37:59'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'cde 11/5/2022 17:37:59'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'cde 11/5/2022 17:37:59'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'cde 11/5/2022 17:37:59'!
PASSED!

!methodRemoval: CreditCard class #expiringOn: stamp: 'cde 11/5/2022 17:38:10'!
expiringOn: aMonth 
	
	^self new initializeExpiringOn: aMonth.!

Object subclass: #Interfaz
	instanceVariableNames: 'authenticator catalog cartIDtoCart cartIDManager merchantProcessor'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Interfaz category: 'TusLibros' stamp: 'cde 11/5/2022 17:49:20'!
Object subclass: #Interfaz
	instanceVariableNames: 'authenticator catalog cartIDtoCart cartIDManager merchantProcessor'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

Object subclass: #MerchantProcessorSimulator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #MerchantProcessorSimulator category: 'TusLibros' stamp: 'cde 11/5/2022 17:49:58'!
Object subclass: #MerchantProcessorSimulator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #MerchantProcessorSimulator category: 'TusLibros' stamp: 'cde 11/5/2022 17:50:10'!
Object subclass: #MerchantProcessorSimulator
	instanceVariableNames: 'debitBehavior'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!MerchantProcessorSimulator methodsFor: 'no messages' stamp: 'cde 11/5/2022 17:50:06'!
debit: anAmount from: aCreditCard 

	^debitBehavior value: anAmount value: aCreditCard ! !
!MerchantProcessorSimulator methodsFor: 'as yet unclassified' stamp: 'cde 11/5/2022 17:51:18' overrides: 16920235!
initialize
	debitBehavior := [ :anAmount :aCreditCard | ]! !
!Interfaz methodsFor: 'operations' stamp: 'cde 11/5/2022 17:51:35' prior: 50559234!
checkOutCart: cartID withCard: cardNumber expiringOn: aDate withOwner: aName
	|aCard aCashier|
	aCard := CreditCard expiringOn: aDate withNumber: cardNumber withOwner: aName.
	aCashier := Cashier toCheckout: cartID charging: aCard throught: (MerchantProcessorSimulator new) on: (DateAndTime now) registeringOn: (OrderedCollection new).
	^ self error: self class invalidCartIDErrorDescription.! !
!Interfaz methodsFor: 'operations' stamp: 'cde 11/5/2022 18:21:49' prior: 50559586!
checkOutCart: cartID withCard: cardNumber expiringOn: aDate withOwner: aName
	|aCard aCashier|
	
	aCard := CreditCard expiringOn: aDate withNumber: cardNumber withOwner: aName.
	aCashier := Cashier toCheckout: cartID charging: aCard throught: (MerchantProcessorSimulator new) on: (DateAndTime now) registeringOn: (OrderedCollection new).
	
	^ self error: self class invalidCartIDErrorDescription.! !

----SNAPSHOT----(5 November 2022 18:43:28) CuisUniversity-5510.image priorSource: 7278116!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'cde 11/6/2022 14:22:47'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'cde 11/6/2022 14:22:47'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'cde 11/6/2022 14:22:47'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'cde 11/6/2022 14:22:47'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'cde 11/6/2022 14:22:47'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'cde 11/6/2022 14:22:47'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'cde 11/6/2022 14:22:51'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'cde 11/6/2022 14:22:51'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'cde 11/6/2022 14:22:51'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'cde 11/6/2022 14:22:51'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'cde 11/6/2022 14:22:51'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'cde 11/6/2022 14:22:51'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'cde 11/6/2022 14:22:51'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'cde 11/6/2022 14:22:51'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'cde 11/6/2022 14:28:28'!
FAILURE!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'cde 11/6/2022 14:28:28'!
FAILURE!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'cde 11/6/2022 14:34:01'!
FAILURE!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'cde 11/6/2022 14:34:01'!
FAILURE!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'cde 11/6/2022 14:34:51'!
FAILURE!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'cde 11/6/2022 14:35:09'!
FAILURE!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'cde 11/6/2022 14:35:09'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'cde 11/6/2022 14:35:09'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'cde 11/6/2022 14:35:09'!
FAILURE!
!Interfaz methodsFor: 'operations' stamp: 'cde 11/6/2022 14:37:02' prior: 50559601!
checkOutCart: cartID withCard: cardNumber expiringOn: aDate withOwner: aName
	|aCard aCashier|
	self assertValidCart: cartID.
	aCard := CreditCard expiringOn: aDate withNumber: cardNumber withOwner: aName.
	aCashier := Cashier toCheckout: cartID charging: aCard throught: (MerchantProcessorSimulator new) on: (DateAndTime now) registeringOn: (OrderedCollection new).
	
	! !

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'cde 11/6/2022 14:37:09'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithInvalidCardRaisesException stamp: 'cde 11/6/2022 14:37:16'!
ERROR!

!testRun: #InterfazTest #test12CheckOutACartWithInvalidCardRaisesException stamp: 'cde 11/6/2022 14:37:16'!
ERROR!
!Interfaz methodsFor: 'operations' stamp: 'cde 11/6/2022 14:40:42' prior: 50559697!
checkOutCart: cart withCard: cardNumber expiringOn: aDate withOwner: aName
	|aCard aCashier|
	self assertValidCart: cart.
	aCard := CreditCard expiringOn: aDate withNumber: cardNumber withOwner: aName.
	aCashier := Cashier toCheckout: cart charging: aCard throught: (MerchantProcessorSimulator new) on: (DateAndTime now) registeringOn: (OrderedCollection new).
	
	! !
!Interfaz methodsFor: 'operations' stamp: 'cde 11/6/2022 14:44:01' prior: 50559723!
checkOutCart: cartID withCard: cardNumber expiringOn: aDate withOwner: aName
	|aCard aCashier|
	self assertValidCart: cartID.
	aCard := CreditCard expiringOn: aDate withNumber: cardNumber withOwner: aName.
	aCashier := Cashier toCheckout: (cartIDtoCart at: cartID) charging: aCard throught: (MerchantProcessorSimulator new) on: (DateAndTime now) registeringOn: (OrderedCollection new).
	
	! !
!InterfazTest methodsFor: 'test' stamp: 'cde 11/6/2022 14:44:24' prior: 50559369!
test12CheckOutACartWithInvalidCardRaisesException
	|aDate changoID |
	aDate  := Month month: 4 year: 1998.
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	self 
		should: [laInterfaz checkOutCart: changoID withCard: 1234567812345678 expiringOn: aDate withOwner: 'user']
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cashier canNotChargeAnExpiredCreditCardErrorMessage ]! !

!testRun: #InterfazTest #test12CheckOutACartWithInvalidCardRaisesException stamp: 'cde 11/6/2022 14:44:26'!
FAILURE!
!InterfazTest methodsFor: 'test' stamp: 'cde 11/6/2022 14:48:31' prior: 50559753!
test12CheckOutACartWithInvalidCardRaisesException
	|aDate changoID |
	aDate  := Month month: 4 year: 1998.
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 2.
	
	self 
		should: [laInterfaz checkOutCart: changoID withCard: 1234567812345678 expiringOn: aDate withOwner: 'user']
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cashier canNotChargeAnExpiredCreditCardErrorMessage ]! !

!testRun: #InterfazTest #test12CheckOutACartWithInvalidCardRaisesException stamp: 'cde 11/6/2022 14:48:32'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'cde 11/6/2022 14:48:32'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'cde 11/6/2022 14:48:32'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'cde 11/6/2022 14:48:32'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'cde 11/6/2022 14:48:32'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'cde 11/6/2022 14:48:32'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'cde 11/6/2022 14:48:32'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'cde 11/6/2022 14:48:32'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'cde 11/6/2022 14:48:32'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'cde 11/6/2022 14:48:32'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'cde 11/6/2022 14:48:32'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'cde 11/6/2022 14:48:32'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithInvalidCardRaisesException stamp: 'cde 11/6/2022 14:48:32'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'cde 11/6/2022 14:52:40'!
test12CheckOutACartWithExpiredCardRaisesException
	|aDate changoID |
	aDate  := Month month: 4 year: 1998.
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 2.
	
	self 
		should: [laInterfaz checkOutCart: changoID withCard: 1234567812345678 expiringOn: aDate withOwner: 'user']
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cashier canNotChargeAnExpiredCreditCardErrorMessage ]! !

!methodRemoval: InterfazTest #test12CheckOutACartWithInvalidCardRaisesException stamp: 'cde 11/6/2022 14:52:40'!
test12CheckOutACartWithInvalidCardRaisesException
	|aDate changoID |
	aDate  := Month month: 4 year: 1998.
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 2.
	
	self 
		should: [laInterfaz checkOutCart: changoID withCard: 1234567812345678 expiringOn: aDate withOwner: 'user']
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cashier canNotChargeAnExpiredCreditCardErrorMessage ]!
!InterfazTest methodsFor: 'test' stamp: 'cde 11/6/2022 14:53:16'!
test13CheckOutACartWithInvalidNumberedCardRaisesException
	|aDate changoID |
	aDate  := Month month: 4 year: 2050.
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 2.
	
	self 
		should: [laInterfaz checkOutCart: changoID withCard: 12345678123 expiringOn: aDate withOwner: 'user']
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cashier canNotChargeAnExpiredCreditCardErrorMessage ]! !
!InterfazTest methodsFor: 'test' stamp: 'cde 11/6/2022 14:53:39' prior: 50559878!
test13CheckOutACartWithInvalidNumberedCardRaisesException
	|aDate changoID |
	aDate  := Month month: 4 year: 2050.
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 2.
	
	self 
		should: [laInterfaz checkOutCart: changoID withCard: 12345678123 expiringOn: aDate withOwner: 'user']
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cashier canNotChargeAnInvalidCreditCardNumberErrorMessage ]! !

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'cde 11/6/2022 14:53:44'!
FAILURE!
!Cashier class methodsFor: 'error messages' stamp: 'cde 11/6/2022 14:54:22'!
canNotChargeAnInvalidCreditCardNumberErrorMessage
	
	^'Ese numero de tarjeta es invalido'! !
!CreditCard class methodsFor: 'instance creation' stamp: 'cde 11/6/2022 15:00:20'!
invalidCardNumberErrorDescription
	
	^'El numero de tarjeta es invalido'! !
!CreditCard class methodsFor: 'instance creation' stamp: 'cde 11/6/2022 15:03:32'!
assertCreditCardNumberIsValid: aCardNumber
	
	(aCardNumber > ((10 ^ 16) -1) or: aCardNumber < ((10 ^ 15) -1))  ifTrue: [self error: self invalidCardNumberErrorDescription ]! !
!CreditCard class methodsFor: 'instance creation' stamp: 'cde 11/6/2022 15:03:47' prior: 50559933!
assertCreditCardNumberIsValid: aCardNumber
	
	(aCardNumber > ((10 ^ 16) -1) or: aCardNumber <= ((10 ^ 15) -1))  ifTrue: [self error: self invalidCardNumberErrorDescription ]! !
!CreditCard methodsFor: 'nil' stamp: 'cde 11/6/2022 15:07:45'!
creditCardNumber
	^ cardNumber! !
!Cashier methodsFor: 'checkout' stamp: 'cde 11/6/2022 15:07:51' prior: 50552485!
checkOut

	creditCard assertCreditCardNumberIsValid: creditCard creditCardNumber.
	self calculateTotal.
	self debitTotal.
	self registerSale.

	^ total! !
!InterfazTest methodsFor: 'test' stamp: 'cde 11/6/2022 15:08:37' prior: 50559898!
test13CheckOutACartWithInvalidNumberedCardRaisesException
	|aDate changoID |
	aDate  := Month month: 4 year: 2050.
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 2.
	
	self 
		should: [laInterfaz checkOutCart: changoID withCard: 12345678123 expiringOn: aDate withOwner: 'user']
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cashier canNotChargeAnInvalidCreditCardNumberErrorMessage ]! !

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'cde 11/6/2022 15:08:38'!
FAILURE!

TestCase subclass: #CreditCardTest
	instanceVariableNames: ' '
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CreditCardTest category: 'TusLibros' stamp: 'cde 11/6/2022 15:11:31'!
TestCase subclass: #CreditCardTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CreditCardTest methodsFor: 'no messages' stamp: 'cde 11/6/2022 15:15:10'!
test01CannotLoadCardWithInvalidNumber
	
	self 
		should: [CreditCard initializeExpiringOn: (Month month: 4 year: 2050) withNumber: 123 withOwner: 'Jorge Drexler']
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = CreditCard invalidCardNumberErrorDescription ]! !

!testRun: #CreditCardTest #test01CannotLoadCardWithInvalidNumber stamp: 'cde 11/6/2022 15:15:12'!
FAILURE!
!CreditCard methodsFor: 'initialization' stamp: 'cde 11/6/2022 15:15:49' prior: 50559423!
initializeExpiringOn: aMonth withNumber: aNumber withOwner: aName

	expiration := aMonth.
	cardNumber := aNumber.
	owner := aName.
	! !
!CreditCard class methodsFor: 'instance creation' stamp: 'cde 11/6/2022 15:17:30' prior: 50559435!
expiringOn: aMonth withNumber: aCardNumber withOwner: aName
	self assertCreditCardNumberIsValid: aCardNumber .
	
	^self new initializeExpiringOn: aMonth withNumber: aCardNumber withOwner: aName.! !

!testRun: #CreditCardTest #test01CannotLoadCardWithInvalidNumber stamp: 'cde 11/6/2022 15:17:33'!
FAILURE!

!testRun: #CreditCardTest #test01CannotLoadCardWithInvalidNumber stamp: 'cde 11/6/2022 15:17:33'!
FAILURE!

!testRun: #CreditCardTest #test01CannotLoadCardWithInvalidNumber stamp: 'cde 11/6/2022 15:18:00'!
FAILURE!

!testRun: #CreditCardTest #test01CannotLoadCardWithInvalidNumber stamp: 'cde 11/6/2022 15:18:00'!
FAILURE!

!testRun: #CreditCardTest #test01CannotLoadCardWithInvalidNumber stamp: 'cde 11/6/2022 15:18:28'!
FAILURE!

!testRun: #CreditCardTest #test01CannotLoadCardWithInvalidNumber stamp: 'cde 11/6/2022 15:18:34'!
FAILURE!

!testRun: #CreditCardTest #test01CannotLoadCardWithInvalidNumber stamp: 'cde 11/6/2022 15:18:34'!
FAILURE!

!testRun: #CreditCardTest #test01CannotLoadCardWithInvalidNumber stamp: 'cde 11/6/2022 15:18:52'!
FAILURE!
!CreditCard class methodsFor: 'instance creation' stamp: 'cde 11/6/2022 15:20:16' prior: 50559942!
assertCreditCardNumberIsValid: aCardNumber
	
	(aCardNumber > ((10 ^ 16) -1) or: [aCardNumber <= ((10 ^ 15) -1)])  ifTrue: [self error: self invalidCardNumberErrorDescription ]! !

!testRun: #CreditCardTest #test01CannotLoadCardWithInvalidNumber stamp: 'cde 11/6/2022 15:20:17'!
FAILURE!

!testRun: #CreditCardTest #test01CannotLoadCardWithInvalidNumber stamp: 'cde 11/6/2022 15:20:17'!
FAILURE!

!testRun: #CreditCardTest #test01CannotLoadCardWithInvalidNumber stamp: 'cde 11/6/2022 15:20:21'!
FAILURE!

!testRun: #CreditCardTest #test01CannotLoadCardWithInvalidNumber stamp: 'cde 11/6/2022 15:20:21'!
FAILURE!

!testRun: #CreditCardTest #test01CannotLoadCardWithInvalidNumber stamp: 'cde 11/6/2022 15:20:29'!
FAILURE!

!testRun: #CreditCardTest #test01CannotLoadCardWithInvalidNumber stamp: 'cde 11/6/2022 15:20:29'!
FAILURE!

!testRun: #CreditCardTest #test01CannotLoadCardWithInvalidNumber stamp: 'cde 11/6/2022 15:23:22'!
FAILURE!

!testRun: #CreditCardTest #test01CannotLoadCardWithInvalidNumber stamp: 'cde 11/6/2022 15:23:53'!
FAILURE!

!testRun: #CreditCardTest #test01CannotLoadCardWithInvalidNumber stamp: 'cde 11/6/2022 15:24:07'!
FAILURE!

!testRun: #CreditCardTest #test01CannotLoadCardWithInvalidNumber stamp: 'cde 11/6/2022 15:24:07'!
FAILURE!

!testRun: #CreditCardTest #test01CannotLoadCardWithInvalidNumber stamp: 'cde 11/6/2022 15:25:05'!
FAILURE!

!testRun: #CreditCardTest #test01CannotLoadCardWithInvalidNumber stamp: 'cde 11/6/2022 15:25:20'!
FAILURE!

!testRun: #CreditCardTest #test01CannotLoadCardWithInvalidNumber stamp: 'cde 11/6/2022 15:25:39'!
FAILURE!
!CreditCardTest methodsFor: 'as yet unclassified' stamp: 'cde 11/6/2022 15:28:31' prior: 50559997!
test01CannotLoadCardWithInvalidNumber
	|aCard|
	self 
		should: [aCard := CreditCard initializeExpiringOn: (Month month: 4 year: 2050) withNumber: 123 withOwner: 'Jorge Drexler'.]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = CreditCard invalidCardNumberErrorDescription ]! !

!testRun: #CreditCardTest #test01CannotLoadCardWithInvalidNumber stamp: 'cde 11/6/2022 15:28:35'!
FAILURE!
!CreditCardTest methodsFor: 'as yet unclassified' stamp: 'cde 11/6/2022 15:28:50' prior: 50560111!
test01CannotLoadCardWithInvalidNumber
	|aCard|
	self 
		should: [aCard := CreditCard initializeExpiringOn: (Month month: 4 year: 2050) withNumber: 1 withOwner: 'Jorge Drexler'.]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = CreditCard invalidCardNumberErrorDescription ]! !

!testRun: #CreditCardTest #test01CannotLoadCardWithInvalidNumber stamp: 'cde 11/6/2022 15:28:53'!
FAILURE!
!CreditCard class methodsFor: 'instance creation' stamp: 'cde 11/6/2022 15:34:17' prior: 50560058!
assertCreditCardNumberIsValid: aCardNumber
	
	"(aCardNumber > ((10 ^ 16) -1) or: [aCardNumber <= ((10 ^ 15) -1)])  ifTrue: ["self error: self invalidCardNumberErrorDescription ! !

!testRun: #CreditCardTest #test01CannotLoadCardWithInvalidNumber stamp: 'cde 11/6/2022 15:34:20'!
FAILURE!

!testRun: #CreditCardTest #test01CannotLoadCardWithInvalidNumber stamp: 'cde 11/6/2022 15:34:20'!
FAILURE!

----SNAPSHOT----(6 November 2022 15:35:33) CuisUniversity-5510.image priorSource: 7294895!

----STARTUP---- (6 November 2022 15:38:30) as C:\Users\sarod\Desktop\windows64\CuisUniversity-5510.image!


!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'SR 11/6/2022 15:38:48'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'SR 11/6/2022 15:38:48'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'SR 11/6/2022 15:38:48'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'SR 11/6/2022 15:38:48'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'SR 11/6/2022 15:38:48'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'SR 11/6/2022 15:38:48'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'SR 11/6/2022 15:38:48'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'SR 11/6/2022 15:38:48'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'SR 11/6/2022 15:38:48'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'SR 11/6/2022 15:38:48'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'SR 11/6/2022 15:38:48'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'SR 11/6/2022 15:38:48'!
FAILURE!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'SR 11/6/2022 15:38:48'!
FAILURE!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'SR 11/6/2022 15:38:53'!
FAILURE!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'SR 11/6/2022 15:38:53'!
FAILURE!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'SR 11/6/2022 15:39:03'!
FAILURE!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'SR 11/6/2022 15:39:03'!
FAILURE!
!CreditCard class methodsFor: 'instance creation' stamp: 'SR 11/6/2022 15:39:20' prior: 50560145!
assertCreditCardNumberIsValid: aCardNumber
	
	(aCardNumber > ((10 ^ 16) -1) or: [aCardNumber <= ((10 ^ 15) -1)])  ifTrue: [self error: self invalidCardNumberErrorDescription].! !

!testRun: #CreditCardTest #test01CannotLoadCardWithInvalidNumber stamp: 'SR 11/6/2022 15:39:23'!
FAILURE!

!testRun: #CreditCardTest #test01CannotLoadCardWithInvalidNumber stamp: 'SR 11/6/2022 15:39:23'!
FAILURE!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'SR 11/6/2022 15:39:29'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'SR 11/6/2022 15:39:31'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'SR 11/6/2022 15:39:31'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'SR 11/6/2022 15:39:31'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'SR 11/6/2022 15:39:31'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'SR 11/6/2022 15:39:31'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'SR 11/6/2022 15:39:31'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'SR 11/6/2022 15:39:31'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'SR 11/6/2022 15:39:31'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'SR 11/6/2022 15:39:31'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'SR 11/6/2022 15:39:31'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'SR 11/6/2022 15:39:31'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'SR 11/6/2022 15:39:31'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'SR 11/6/2022 15:39:31'!
FAILURE!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'SR 11/6/2022 15:39:31'!
FAILURE!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'SR 11/6/2022 16:25:16'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'SR 11/6/2022 16:25:17'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'SR 11/6/2022 16:25:19'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'SR 11/6/2022 16:25:20'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'SR 11/6/2022 16:25:21'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'SR 11/6/2022 16:25:22'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'SR 11/6/2022 16:25:23'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'SR 11/6/2022 16:25:24'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'SR 11/6/2022 16:25:26'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'SR 11/6/2022 16:25:27'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'SR 11/6/2022 16:25:29'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'SR 11/6/2022 16:25:31'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'SR 11/6/2022 16:25:32'!
FAILURE!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'SR 11/6/2022 16:25:32'!
FAILURE!
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 16:25:38' prior: 50559962!
test13CheckOutACartWithInvalidNumberedCardRaisesException
	|aDate changoID |
	
	aDate  := Month month: 4 year: 2050.
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 2.
	
	self 
		should: [laInterfaz checkOutCart: changoID withCard: 12345678123 expiringOn: aDate withOwner: 'user']
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cashier canNotChargeAnInvalidCreditCardNumberErrorMessage ]! !
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 16:25:40' prior: 50560349!
test13CheckOutACartWithInvalidNumberedCardRaisesException
	| aDate changoID |
	
	aDate  := Month month: 4 year: 2050.
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 2.
	
	self 
		should: [laInterfaz checkOutCart: changoID withCard: 12345678123 expiringOn: aDate withOwner: 'user']
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cashier canNotChargeAnInvalidCreditCardNumberErrorMessage ]! !
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 16:26:03' prior: 50560369!
test13CheckOutACartWithInvalidNumberedCardRaisesException
	| aDate changoID |
	
	aDate  := Month month: 4 year: 2050.
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 2.
	
	self 
		should: [ laInterfaz checkOutCart: changoID withCard: 12345678123 expiringOn: aDate withOwner: 'user' ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cashier canNotChargeAnInvalidCreditCardNumberErrorMessage ]! !
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 16:26:25' prior: 50560389!
test13CheckOutACartWithInvalidNumberedCardRaisesException
	| aDate changoID |
	
	aDate  := Month month: 4 year: 2050.
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 2.
	
	self 
		should: [ laInterfaz checkOutCart: changoID withCard: 1 expiringOn: aDate withOwner: 'user' ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cashier canNotChargeAnInvalidCreditCardNumberErrorMessage ]! !

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'SR 11/6/2022 16:26:27'!
FAILURE!

testObjectsFactory := StoreTestObjectsFactory new.!

laInterfaz := testObjectsFactory createInterfaz: self.!

aDate  := Month month: 4 year: 2050.!

changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.!

changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.!

changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.!

changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.!

changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.!
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 16:28:53' prior: 50559839!
test12CheckOutACartWithExpiredCardRaisesException
	|aDate changoID |
	
	aDate  := Month month: 4 year: 1998.
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 2.
	
	self 
		should: [laInterfaz checkOutCart: changoID withCard: 1234567812345678 expiringOn: aDate withOwner: 'user']
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cashier canNotChargeAnExpiredCreditCardErrorMessage ]! !

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'SR 11/6/2022 16:28:55'!
PASSED!

aDate  := Month month: 4 year: 1998.!

changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.!

changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'SR 11/6/2022 16:38:40'!
FAILURE!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'SR 11/6/2022 16:38:40'!
FAILURE!
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 16:39:05' prior: 50560409!
test13CheckOutACartWithInvalidNumberedCardRaisesException
	| aDate changoID |
	
	aDate  := Month month: 4 year: 2050.
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 2.
	
	self 
		should: [ laInterfaz checkOutCart: changoID withCard: 1 expiringOn: aDate withOwner: 'user' ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = anError messageText ]! !

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'SR 11/6/2022 16:39:07'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 16:39:19' prior: 50560486!
test13CheckOutACartWithInvalidNumberedCardRaisesException
	| aDate changoID |
	
	aDate  := Month month: 4 year: 2050.
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 2.
	
	self 
		should: [ laInterfaz checkOutCart: changoID withCard: 1 expiringOn: aDate withOwner: 'user' ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cashier canNotChargeAnInvalidCreditCardNumberErrorMessage ]! !

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'SR 11/6/2022 16:40:16'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'SR 11/6/2022 16:40:16'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'SR 11/6/2022 16:40:16'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'SR 11/6/2022 16:40:16'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'SR 11/6/2022 16:40:16'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'SR 11/6/2022 16:40:16'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'SR 11/6/2022 16:40:16'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'SR 11/6/2022 16:40:16'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'SR 11/6/2022 16:40:16'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'SR 11/6/2022 16:40:16'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'SR 11/6/2022 16:40:16'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'SR 11/6/2022 16:40:16'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'SR 11/6/2022 16:40:16'!
FAILURE!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'SR 11/6/2022 16:40:16'!
FAILURE!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'SR 11/6/2022 16:41:08'!
FAILURE!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'SR 11/6/2022 16:44:33'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'SR 11/6/2022 16:44:33'!
ERROR!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'SR 11/6/2022 16:44:33'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'SR 11/6/2022 16:44:33'!
ERROR!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'SR 11/6/2022 16:44:33'!
ERROR!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'SR 11/6/2022 16:44:33'!
ERROR!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'SR 11/6/2022 16:44:36'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'SR 11/6/2022 16:44:36'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'SR 11/6/2022 16:44:36'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'SR 11/6/2022 16:44:36'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'SR 11/6/2022 16:44:36'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'SR 11/6/2022 16:44:36'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'SR 11/6/2022 16:44:36'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'SR 11/6/2022 16:44:36'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'SR 11/6/2022 16:44:39'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'SR 11/6/2022 16:44:39'!
ERROR!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'SR 11/6/2022 16:44:39'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'SR 11/6/2022 16:44:39'!
ERROR!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'SR 11/6/2022 16:44:39'!
ERROR!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'SR 11/6/2022 16:44:39'!
ERROR!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'SR 11/6/2022 16:54:23'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'SR 11/6/2022 16:54:23'!
ERROR!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'SR 11/6/2022 16:54:23'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'SR 11/6/2022 16:54:23'!
ERROR!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'SR 11/6/2022 16:54:23'!
ERROR!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'SR 11/6/2022 16:54:23'!
ERROR!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'SR 11/6/2022 16:54:26'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'SR 11/6/2022 16:54:26'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'SR 11/6/2022 16:54:26'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'SR 11/6/2022 16:54:26'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'SR 11/6/2022 16:54:26'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'SR 11/6/2022 16:54:26'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'SR 11/6/2022 16:54:26'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'SR 11/6/2022 16:54:26'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'SR 11/6/2022 16:54:26'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'SR 11/6/2022 16:54:26'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'SR 11/6/2022 16:54:26'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'SR 11/6/2022 16:54:26'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'SR 11/6/2022 16:54:26'!
FAILURE!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'SR 11/6/2022 16:54:26'!
FAILURE!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'SR 11/6/2022 16:54:30'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'SR 11/6/2022 16:54:30'!
ERROR!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'SR 11/6/2022 16:54:30'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'SR 11/6/2022 16:54:30'!
ERROR!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'SR 11/6/2022 16:54:30'!
ERROR!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'SR 11/6/2022 16:54:30'!
ERROR!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'SR 11/6/2022 16:54:37'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'SR 11/6/2022 16:54:39'!
ERROR!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'SR 11/6/2022 16:54:39'!
ERROR!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'SR 11/6/2022 16:56:17'!
ERROR!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'SR 11/6/2022 16:56:17'!
ERROR!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'SR 11/6/2022 16:56:29'!
ERROR!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'SR 11/6/2022 16:56:29'!
ERROR!
!Cashier methodsFor: 'checkout' stamp: 'SR 11/6/2022 16:57:05' prior: 50559954!
checkOut

	self calculateTotal.
	self debitTotal.
	self registerSale.

	^ total! !

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'SR 11/6/2022 16:57:07'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'SR 11/6/2022 16:57:07'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'SR 11/6/2022 16:57:07'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'SR 11/6/2022 16:57:07'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'SR 11/6/2022 16:57:07'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'SR 11/6/2022 16:57:07'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'SR 11/6/2022 16:57:09'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'SR 11/6/2022 16:57:09'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'SR 11/6/2022 16:57:09'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'SR 11/6/2022 16:57:09'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'SR 11/6/2022 16:57:09'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'SR 11/6/2022 16:57:09'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'SR 11/6/2022 16:57:09'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'SR 11/6/2022 16:57:09'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'SR 11/6/2022 16:57:10'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'SR 11/6/2022 16:57:10'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'SR 11/6/2022 16:57:10'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'SR 11/6/2022 16:57:10'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'SR 11/6/2022 16:57:10'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'SR 11/6/2022 16:57:10'!
PASSED!

!testRun: #CreditCardTest #test01CannotLoadCardWithInvalidNumber stamp: 'SR 11/6/2022 16:57:12'!
FAILURE!

!testRun: #CreditCardTest #test01CannotLoadCardWithInvalidNumber stamp: 'SR 11/6/2022 16:57:12'!
FAILURE!

!testRun: #CreditCardTest #test01CannotLoadCardWithInvalidNumber stamp: 'SR 11/6/2022 16:57:19'!
FAILURE!

!testRun: #CreditCardTest #test01CannotLoadCardWithInvalidNumber stamp: 'SR 11/6/2022 16:57:19'!
FAILURE!

!testRun: #CreditCardTest #test01CannotLoadCardWithInvalidNumber stamp: 'SR 11/6/2022 16:57:27'!
FAILURE!

!testRun: #CreditCardTest #test01CannotLoadCardWithInvalidNumber stamp: 'SR 11/6/2022 16:57:27'!
FAILURE!
!CreditCardTest methodsFor: 'as yet unclassified' stamp: 'SR 11/6/2022 16:57:49'!
test01CannotCreateCardWithInvalidNumber
	|aCard|
	self 
		should: [aCard := CreditCard initializeExpiringOn: (Month month: 4 year: 2050) withNumber: 1 withOwner: 'Jorge Drexler'.]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = CreditCard invalidCardNumberErrorDescription ]! !

!methodRemoval: CreditCardTest #test01CannotLoadCardWithInvalidNumber stamp: 'SR 11/6/2022 16:57:49'!
test01CannotLoadCardWithInvalidNumber
	|aCard|
	self 
		should: [aCard := CreditCard initializeExpiringOn: (Month month: 4 year: 2050) withNumber: 1 withOwner: 'Jorge Drexler'.]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = CreditCard invalidCardNumberErrorDescription ]!
!CreditCardTest methodsFor: 'as yet unclassified' stamp: 'SR 11/6/2022 16:57:57' prior: 50560848!
test01CannotCreateCardWithInvalidNumber
	| aCard |
	
	self 
		should: [aCard := CreditCard initializeExpiringOn: (Month month: 4 year: 2050) withNumber: 1 withOwner: 'Jorge Drexler'.]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = CreditCard invalidCardNumberErrorDescription ]! !

!testRun: #CreditCardTest #test01CannotCreateCardWithInvalidNumber stamp: 'SR 11/6/2022 16:58:00'!
FAILURE!

!testRun: #CreditCardTest #test01CannotCreateCardWithInvalidNumber stamp: 'SR 11/6/2022 16:58:00'!
FAILURE!
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 16:58:35' prior: 50560508!
test13CheckOutACartWithInvalidNumberedCardRaisesException
	| aDate changoID |
	
	aDate  := Month month: 4 year: 2050.
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 2.
	
	self 
		should: [ laInterfaz checkOutCart: changoID withCard: 1 expiringOn: aDate withOwner: 'user' ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = CreditCard invalidCardNumberErrorDescription ]! !

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'SR 11/6/2022 16:58:37'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'SR 11/6/2022 16:58:40'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'SR 11/6/2022 16:58:40'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'SR 11/6/2022 16:58:40'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'SR 11/6/2022 16:58:40'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'SR 11/6/2022 16:58:40'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'SR 11/6/2022 16:58:40'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'SR 11/6/2022 16:58:40'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'SR 11/6/2022 16:58:40'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'SR 11/6/2022 16:58:40'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'SR 11/6/2022 16:58:40'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'SR 11/6/2022 16:58:40'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'SR 11/6/2022 16:58:40'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'SR 11/6/2022 16:58:40'!
PASSED!

!testRun: #CreditCardTest #test01CannotCreateCardWithInvalidNumber stamp: 'SR 11/6/2022 16:58:44'!
FAILURE!

!testRun: #CreditCardTest #test01CannotCreateCardWithInvalidNumber stamp: 'SR 11/6/2022 16:58:44'!
FAILURE!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'SR 11/6/2022 16:58:47'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'SR 11/6/2022 16:58:47'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'SR 11/6/2022 16:58:47'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'SR 11/6/2022 16:58:47'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'SR 11/6/2022 16:58:47'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'SR 11/6/2022 16:58:47'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'SR 11/6/2022 16:58:47'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'SR 11/6/2022 16:58:47'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'SR 11/6/2022 16:58:47'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'SR 11/6/2022 16:58:47'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'SR 11/6/2022 16:58:47'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'SR 11/6/2022 16:58:47'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'SR 11/6/2022 16:58:47'!
PASSED!
!CreditCardTest methodsFor: 'as yet unclassified' stamp: 'SR 11/6/2022 16:59:06' prior: 50560874!
test01CannotCreateCardWithInvalidNumber
	| aCard |
	
	self 
		should: [ aCard := CreditCard initializeExpiringOn: (Month month: 4 year: 2050) withNumber: 1 withOwner: 'Jorge Drexler' ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = CreditCard invalidCardNumberErrorDescription ]! !
!CreditCardTest methodsFor: 'as yet unclassified' stamp: 'SR 11/6/2022 16:59:11' prior: 50561018!
test01CannotCreateCardWithInvalidNumber

	| aCard |
	
	self 
		should: [ aCard := CreditCard initializeExpiringOn: (Month month: 4 year: 2050) withNumber: 1 withOwner: 'Jorge Drexler' ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = CreditCard invalidCardNumberErrorDescription ]! !

!testRun: #CreditCardTest #test01CannotCreateCardWithInvalidNumber stamp: 'SR 11/6/2022 16:59:14'!
FAILURE!
!CreditCardTest methodsFor: 'as yet unclassified' stamp: 'SR 11/6/2022 17:00:01' prior: 50561032!
test01CannotCreateCardWithInvalidNumber

	| aCard |
	
	self 
		should: [ aCard := CreditCard expiringOn: (Month month: 4 year: 2050) withNumber: 1 withOwner: 'Jorge Drexler' ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = CreditCard invalidCardNumberErrorDescription ]! !

!testRun: #CreditCardTest #test01CannotCreateCardWithInvalidNumber stamp: 'SR 11/6/2022 17:00:05'!
PASSED!

!testRun: #CreditCardTest #test01CannotCreateCardWithInvalidNumber stamp: 'SR 11/6/2022 17:00:07'!
PASSED!

!testRun: #CreditCardTest #test01CannotCreateCardWithInvalidNumber stamp: 'SR 11/6/2022 17:00:07'!
PASSED!
!CreditCard methodsFor: 'cardNumber' stamp: 'SR 11/6/2022 17:00:41'!
creditCardOwner
	^ cardNumber! !

!classDefinition: #CreditCard category: 'TusLibros' stamp: 'SR 11/6/2022 17:00:47'!
Object subclass: #CreditCard
	instanceVariableNames: 'expiration owner cardNumber cardOwner'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CreditCard methodsFor: 'cardNumber' stamp: 'SR 11/6/2022 17:00:46' prior: 50561071!
creditCardOwner
	^ cardOwner! !
!CreditCard methodsFor: 'cardNumber' stamp: 'SR 11/6/2022 17:00:59' prior: 50561083!
creditCardOwner
	^ owner! !

Object subclass: #CreditCard
	instanceVariableNames: 'expiration owner cardNumber'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CreditCard category: 'TusLibros' stamp: 'SR 11/6/2022 17:01:02'!
Object subclass: #CreditCard
	instanceVariableNames: 'expiration owner cardNumber'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!testRun: #CreditCardTest #test01CannotCreateCardWithInvalidNumber stamp: 'SR 11/6/2022 17:01:11'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'SR 11/6/2022 17:01:12'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'SR 11/6/2022 17:01:12'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'SR 11/6/2022 17:01:12'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'SR 11/6/2022 17:01:12'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'SR 11/6/2022 17:01:12'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'SR 11/6/2022 17:01:12'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'SR 11/6/2022 17:01:12'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'SR 11/6/2022 17:01:12'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'SR 11/6/2022 17:01:12'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'SR 11/6/2022 17:01:12'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'SR 11/6/2022 17:01:12'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'SR 11/6/2022 17:01:12'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'SR 11/6/2022 17:01:12'!
PASSED!
!CreditCardTest methodsFor: 'as yet unclassified' stamp: 'SR 11/6/2022 17:02:47'!
test02CannotCreateCardWithEmptyOwner

	| aCard |
	
	self 
		should: [ aCard := CreditCard expiringOn: (Month month: 4 year: 2050) withNumber: 1234123412341234 withOwner: '' ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = CreditCard invalidCardNumberErrorDescription ]! !

!testRun: #CreditCardTest #test02CannotCreateCardWithEmptyOwner stamp: 'SR 11/6/2022 17:02:50'!
FAILURE!
!CreditCardTest methodsFor: 'as yet unclassified' stamp: 'SR 11/6/2022 17:02:59' prior: 50561153!
test02CannotCreateCardWithEmptyOwner

	| aCard |
	
	self 
		should: [ aCard := CreditCard expiringOn: (Month month: 4 year: 2050) withNumber: 1234123412341234 withOwner: '' ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = CreditCard invalidCardOwnerErrorDescription ]! !

!testRun: #CreditCardTest #test02CannotCreateCardWithEmptyOwner stamp: 'SR 11/6/2022 17:03:02'!
FAILURE!
!CreditCard class methodsFor: 'instance creation' stamp: 'SR 11/6/2022 17:03:31'!
invalidCardOwnerErrorDescription
	
	^'El owner de la tarjeta es invalido'! !
!CreditCard class methodsFor: 'instance creation' stamp: 'SR 11/6/2022 17:04:08'!
assertCreditCardOwnerIsValid: aCardOwner
	
	(aCardOwner = '') ifTrue: [self error: self invalidCardOwnerErrorDescription ].! !
!CreditCard class methodsFor: 'instance creation' stamp: 'SR 11/6/2022 17:04:14' prior: 50560229!
assertCreditCardNumberIsValid: aCardNumber
	
	(aCardNumber > ((10 ^ 16) -1) or: [aCardNumber <= ((10 ^ 15) -1)]) ifTrue: [self error: self invalidCardNumberErrorDescription].! !
!CreditCard class methodsFor: 'instance creation' stamp: 'SR 11/6/2022 17:04:27' prior: 50560021!
expiringOn: aMonth withNumber: aCardNumber withOwner: aName

	self assertCreditCardNumberIsValid: aCardNumber.
	self assertCreditCardOwnerIsValid: aName.
	
	^self new initializeExpiringOn: aMonth withNumber: aCardNumber withOwner: aName.! !

!testRun: #CreditCardTest #test01CannotCreateCardWithInvalidNumber stamp: 'SR 11/6/2022 17:04:30'!
PASSED!

!testRun: #CreditCardTest #test02CannotCreateCardWithEmptyOwner stamp: 'SR 11/6/2022 17:04:30'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'SR 11/6/2022 17:04:32'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'SR 11/6/2022 17:04:32'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'SR 11/6/2022 17:04:32'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'SR 11/6/2022 17:04:32'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'SR 11/6/2022 17:04:32'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'SR 11/6/2022 17:04:32'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'SR 11/6/2022 17:04:33'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'SR 11/6/2022 17:04:33'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'SR 11/6/2022 17:04:33'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'SR 11/6/2022 17:04:33'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'SR 11/6/2022 17:04:33'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'SR 11/6/2022 17:04:33'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'SR 11/6/2022 17:04:33'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'SR 11/6/2022 17:04:33'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'SR 11/6/2022 17:04:35'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'SR 11/6/2022 17:04:35'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'SR 11/6/2022 17:04:35'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'SR 11/6/2022 17:04:35'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'SR 11/6/2022 17:04:35'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'SR 11/6/2022 17:04:35'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'SR 11/6/2022 17:04:35'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'SR 11/6/2022 17:04:35'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'SR 11/6/2022 17:04:35'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'SR 11/6/2022 17:04:35'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'SR 11/6/2022 17:04:35'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'SR 11/6/2022 17:04:35'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'SR 11/6/2022 17:04:35'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'SR 11/6/2022 17:05:11'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'SR 11/6/2022 17:05:11'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'SR 11/6/2022 17:05:11'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'SR 11/6/2022 17:05:11'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'SR 11/6/2022 17:05:11'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'SR 11/6/2022 17:05:11'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'SR 11/6/2022 17:05:11'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'SR 11/6/2022 17:05:11'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'SR 11/6/2022 17:05:11'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'SR 11/6/2022 17:05:11'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'SR 11/6/2022 17:05:11'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'SR 11/6/2022 17:05:11'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'SR 11/6/2022 17:05:11'!
PASSED!
!CreditCardTest methodsFor: 'as yet unclassified' stamp: 'SR 11/6/2022 17:08:35'!
test03CardCreatedWithValidNumberAndOwnerStoresCorrectInfo

	| aCard |
	
	aCard := CreditCard expiringOn: (Month month: 4 year: 2050) withNumber: 1234123412341234 withOwner: 'John Doe'.
	
	self assert: aCard owner equals: 'John Doe'.
	self assert: aCard creditCardNumber equals: 1234123412341234.! !
!CreditCard methodsFor: 'cardNumber' stamp: 'SR 11/6/2022 17:08:52'!
creditCardExpiration
	^ expiration! !
!CreditCardTest methodsFor: 'as yet unclassified' stamp: 'SR 11/6/2022 17:09:23' prior: 50561364!
test03CardCreatedWithValidNumberAndOwnerStoresCorrectInfo

	| aCard |
	
	aCard := CreditCard expiringOn: (Month month: 4 year: 2050) withNumber: 1234123412341234 withOwner: 'John Doe'.
	
	self assert: aCard owner equals: 'John Doe'.
	self assert: aCard creditCardNumber equals: 1234123412341234.
! !
!CreditCardTest methodsFor: 'as yet unclassified' stamp: 'SR 11/6/2022 17:09:49' prior: 50561381!
test03CardCreatedWithValidNumberAndOwnerStoresCorrectInfo

	| aCard |
	
	aCard := CreditCard expiringOn: (Month month: 4 year: 2050) withNumber: 1234123412341234 withOwner: 'John Doe'.
	
	self assert: aCard owner equals: 'John Doe'.
	self assert: aCard creditCardNumber equals: 1234123412341234.
	self assert: aCard creditCardExpiration equals: (Month month: 4 year: 2050).! !
!CreditCardTest methodsFor: 'as yet unclassified' stamp: 'SR 11/6/2022 17:10:02' prior: 50561394!
test03CardCreatedWithValidNumberAndOwnerStoresCorrectInfo

	| aCard |
	
	aCard := CreditCard expiringOn: (Month month: 4 year: 2050) withNumber: 1234123412341234 withOwner: 'John Doe'.
	
	self assert: aCard creditCardOwner equals: 'John Doe'.
	self assert: aCard creditCardNumber equals: 1234123412341234.
	self assert: aCard creditCardExpiration equals: (Month month: 4 year: 2050).! !

!testRun: #CreditCardTest #test01CannotCreateCardWithInvalidNumber stamp: 'SR 11/6/2022 17:10:07'!
PASSED!

!testRun: #CreditCardTest #test02CannotCreateCardWithEmptyOwner stamp: 'SR 11/6/2022 17:10:07'!
PASSED!

!testRun: #CreditCardTest #test03CardCreatedWithValidNumberAndOwnerStoresCorrectInfo stamp: 'SR 11/6/2022 17:10:07'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'SR 11/6/2022 17:10:12'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'SR 11/6/2022 17:10:12'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'SR 11/6/2022 17:10:12'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'SR 11/6/2022 17:10:12'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'SR 11/6/2022 17:10:12'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'SR 11/6/2022 17:10:12'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'SR 11/6/2022 17:10:12'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'SR 11/6/2022 17:10:12'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'SR 11/6/2022 17:10:12'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'SR 11/6/2022 17:10:12'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'SR 11/6/2022 17:10:12'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'SR 11/6/2022 17:10:12'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'SR 11/6/2022 17:10:12'!
PASSED!

----SNAPSHOT----(6 November 2022 17:10:28) CuisUniversity-5510.image priorSource: 7312299!
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 17:35:01'!
test14CheckOutACartWithOneBookRegistersSaleCorrectly

	| aDate changoID |
	
	aDate  := Month month: 4 year: 2050.
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	
	self 
		should: [ laInterfaz checkOutCart: changoID withCard: 1 expiringOn: aDate withOwner: 'user' ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = CreditCard invalidCardNumberErrorDescription ]! !

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'SR 11/6/2022 17:35:02'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'SR 11/6/2022 17:35:02'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'SR 11/6/2022 17:35:02'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'SR 11/6/2022 17:35:02'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'SR 11/6/2022 17:35:02'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'SR 11/6/2022 17:35:02'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'SR 11/6/2022 17:35:02'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'SR 11/6/2022 17:35:02'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'SR 11/6/2022 17:35:02'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'SR 11/6/2022 17:35:02'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'SR 11/6/2022 17:35:02'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'SR 11/6/2022 17:35:02'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'SR 11/6/2022 17:35:02'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'SR 11/6/2022 17:35:02'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'SR 11/6/2022 17:35:02'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 17:35:13' prior: 50561484!
test14CheckOutACartWithOneBookRegistersSaleCorrectly

	| aDate changoID |
	
	aDate  := Month month: 4 year: 2050.
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	
	self 
		should: [ laInterfaz checkOutCart: changoID withCard: 1234123412341234 expiringOn: aDate withOwner: 'user' ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = CreditCard invalidCardNumberErrorDescription ]! !
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 17:36:45' prior: 50561557!
test14CheckOutACartWithOneBookRegistersSaleCorrectly

	| aDate changoID |
	
	aDate  := Month month: 4 year: 2050.
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	laInterfaz checkOutCart: changoID withCard: 1234123412341234 expiringOn: aDate withOwner: 'user'
! !
!Cashier methodsFor: 'checkout' stamp: 'SR 11/6/2022 17:37:02' prior: 50560757!
checkOut

	self calculateTotal.
	self debitTotal.
	self registerSale.

	^ total! !

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'SR 11/6/2022 17:37:09'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'SR 11/6/2022 17:37:09'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'SR 11/6/2022 17:37:09'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'SR 11/6/2022 17:37:09'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'SR 11/6/2022 17:37:09'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'SR 11/6/2022 17:37:09'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'SR 11/6/2022 17:37:11'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'SR 11/6/2022 17:37:11'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'SR 11/6/2022 17:37:11'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'SR 11/6/2022 17:37:11'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'SR 11/6/2022 17:37:11'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'SR 11/6/2022 17:37:11'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'SR 11/6/2022 17:37:11'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'SR 11/6/2022 17:37:11'!
PASSED!
!CreditCardTest methodsFor: 'as yet unclassified' stamp: 'SR 11/6/2022 17:39:43' prior: 50561049!
test01CannotCreateCardWithInvalidNumber

	| aCard |
	
	self 
		should: [ aCard := CreditCard expiringOn: (Month month: 4 year: 2050) withNumber: 1 withOwner: 'Jorge Drexler' ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = CreditCard invalidCardNumberErrorDescription ]! !

!testRun: #CreditCardTest #test01CannotCreateCardWithInvalidNumber stamp: 'SR 11/6/2022 17:39:47'!
PASSED!

!testRun: #CreditCardTest #test02CannotCreateCardWithEmptyOwner stamp: 'SR 11/6/2022 17:39:47'!
PASSED!

!testRun: #CreditCardTest #test03CardCreatedWithValidNumberAndOwnerStoresCorrectInfo stamp: 'SR 11/6/2022 17:39:47'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'SR 11/6/2022 17:39:48'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'SR 11/6/2022 17:39:48'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'SR 11/6/2022 17:39:48'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'SR 11/6/2022 17:39:48'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'SR 11/6/2022 17:39:48'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'SR 11/6/2022 17:39:48'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'SR 11/6/2022 17:39:49'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'SR 11/6/2022 17:39:49'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'SR 11/6/2022 17:39:49'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'SR 11/6/2022 17:39:49'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'SR 11/6/2022 17:39:49'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'SR 11/6/2022 17:39:49'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'SR 11/6/2022 17:39:49'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'SR 11/6/2022 17:39:49'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'SR 11/6/2022 17:39:51'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'SR 11/6/2022 17:39:51'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'SR 11/6/2022 17:39:51'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'SR 11/6/2022 17:39:51'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'SR 11/6/2022 17:39:51'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'SR 11/6/2022 17:39:51'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'SR 11/6/2022 17:39:51'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'SR 11/6/2022 17:39:51'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'SR 11/6/2022 17:39:51'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'SR 11/6/2022 17:39:51'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'SR 11/6/2022 17:39:51'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'SR 11/6/2022 17:39:51'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'SR 11/6/2022 17:39:51'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'SR 11/6/2022 17:39:51'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 17:40:51' prior: 50561577!
test14CheckOutACartWithOneBookRegistersSaleCorrectly

	| aDate changoID |
	
	aDate  := Month month: 4 year: 2050.
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	laInterfaz checkOutCart: changoID withCard: 1234123412341234 expiringOn: aDate withOwner: 'user'.

	! !
!Interfaz methodsFor: 'operations' stamp: 'SR 11/6/2022 17:46:23' prior: 50559738!
checkOutCart: cartID withCard: cardNumber expiringOn: aDate withOwner: aName

	|aCard aCashier|
	
	self assertValidCart: cartID.
	aCard := CreditCard expiringOn: aDate withNumber: cardNumber withOwner: aName.
	aCashier := Cashier toCheckout: (cartIDtoCart at: cartID) charging: aCard throught: (MerchantProcessorSimulator new) on: (DateAndTime now) registeringOn: (OrderedCollection new).
	
	! !
!Interfaz methodsFor: 'operations' stamp: 'SR 11/6/2022 17:46:26' prior: 50561777!
checkOutCart: cartID withCard: cardNumber expiringOn: aDate withOwner: aName

	|aCard aCashier|
	
	self assertValidCart: cartID.
	
	aCard := CreditCard expiringOn: aDate withNumber: cardNumber withOwner: aName.
	aCashier := Cashier toCheckout: (cartIDtoCart at: cartID) charging: aCard throught: (MerchantProcessorSimulator new) on: (DateAndTime now) registeringOn: (OrderedCollection new).
	
	! !
!Interfaz methodsFor: 'operations' stamp: 'SR 11/6/2022 17:47:52' prior: 50561792!
checkOutCart: cartID withCard: cardNumber expiringOn: aDate withOwner: aName

	|aCard aCashier|
	
	self assertValidCart: cartID.
	
	aCard := CreditCard expiringOn: aDate withNumber: cardNumber withOwner: aName.
	aCashier := Cashier toCheckout: (cartIDtoCart at: cartID) charging: aCard throught: (MerchantProcessorSimulator new) on: (DateAndTime now) registeringOn: (OrderedCollection new).! !
!Interfaz methodsFor: 'operations' stamp: 'SR 11/6/2022 17:48:19'!
checkOutCart: cartID withCard: cardNumber expiringOn: aDate withOwner: aName registeringOn: aSalesRegister

	|aCard aCashier|
	
	self assertValidCart: cartID.
	
	aCard := CreditCard expiringOn: aDate withNumber: cardNumber withOwner: aName.
	aCashier := Cashier toCheckout: (cartIDtoCart at: cartID) charging: aCard throught: (MerchantProcessorSimulator new) on: (DateAndTime now) registeringOn: aSalesRegister.! !

!methodRemoval: Interfaz #checkOutCart:withCard:expiringOn:withOwner: stamp: 'SR 11/6/2022 17:50:43'!
checkOutCart: cartID withCard: cardNumber expiringOn: aDate withOwner: aName

	|aCard aCashier|
	
	self assertValidCart: cartID.
	
	aCard := CreditCard expiringOn: aDate withNumber: cardNumber withOwner: aName.
	aCashier := Cashier toCheckout: (cartIDtoCart at: cartID) charging: aCard throught: (MerchantProcessorSimulator new) on: (DateAndTime now) registeringOn: (OrderedCollection new).!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'SR 11/6/2022 17:50:46'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'SR 11/6/2022 17:50:46'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'SR 11/6/2022 17:50:46'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'SR 11/6/2022 17:50:46'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'SR 11/6/2022 17:50:46'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'SR 11/6/2022 17:50:46'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'SR 11/6/2022 17:50:46'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'SR 11/6/2022 17:50:46'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'SR 11/6/2022 17:50:46'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'SR 11/6/2022 17:50:46'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'SR 11/6/2022 17:50:46'!
FAILURE!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'SR 11/6/2022 17:50:46'!
FAILURE!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'SR 11/6/2022 17:50:46'!
FAILURE!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'SR 11/6/2022 17:50:46'!
ERROR!
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 17:51:10' prior: 50559281!
test11CheckOutACartWithInvalidIDRaisesException
	|aDate|
	aDate  := Month month: 4 year: 2023 .
	self 
		should: [laInterfaz checkOutCart: 0 withCard: 1234567812345678 expiringOn: aDate withOwner: 'Mariano Oca' registeringOn: OrderedCollection new ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidCartIDErrorDescription ]! !

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'SR 11/6/2022 17:51:11'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 17:52:01' prior: 50561905!
test11CheckOutACartWithInvalidIDRaisesException

	|aDate aSalesBook |
	
	aDate  := Month month: 4 year: 2023 .
	aSalesBook := OrderedCollection new.
	
	self 
		should: [laInterfaz checkOutCart: 0 withCard: 1234567812345678 expiringOn: aDate withOwner: 'Mariano Oca' registeringOn: OrderedCollection new ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidCartIDErrorDescription ]! !
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 17:52:11' prior: 50561923!
test11CheckOutACartWithInvalidIDRaisesException

	|aDate aSalesBook |
	
	aDate  := Month month: 4 year: 2023 .
	aSalesBook := OrderedCollection new.
	
	self 
		should: [laInterfaz checkOutCart: 0 withCard: 1234567812345678 expiringOn: aDate withOwner: 'Mariano Oca' registeringOn: aSalesBook ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidCartIDErrorDescription ]! !

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'SR 11/6/2022 17:52:13'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 17:52:33' prior: 50560449!
test12CheckOutACartWithExpiredCardRaisesException

	|aDate changoID aSalesBook |
	
	aDate  := Month month: 4 year: 1998.
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 2.
	aSalesBook := OrderedCollection new.
	
	self 
		should: [laInterfaz checkOutCart: changoID withCard: 1234567812345678 expiringOn: aDate withOwner: 'user']
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cashier canNotChargeAnExpiredCreditCardErrorMessage ]! !
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 17:52:44' prior: 50561960!
test12CheckOutACartWithExpiredCardRaisesException

	|aDate changoID aSalesBook |
	
	aDate  := Month month: 4 year: 1998.
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 2.
	aSalesBook := OrderedCollection new.
	
	self 
		should: [laInterfaz checkOutCart: changoID withCard: 1234567812345678 expiringOn: aDate withOwner: 'user' registeringOn: aSalesBook ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cashier canNotChargeAnExpiredCreditCardErrorMessage ]! !
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 17:52:59' prior: 50560894!
test13CheckOutACartWithInvalidNumberedCardRaisesException
	| aDate changoID aSalesBook |
	
	aDate  := Month month: 4 year: 2050.
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 2.
	aSalesBook := OrderedCollection new.
	
	self 
		should: [ laInterfaz checkOutCart: changoID withCard: 1 expiringOn: aDate withOwner: 'user' registeringOn: aSalesBook ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = CreditCard invalidCardNumberErrorDescription ]! !
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 17:53:30' prior: 50561940!
test11CheckOutACartWithInvalidIDRaisesException

	|aDate aSalesBook |
	
	aDate  := Month month: 4 year: 2023 .
	aSalesBook := OrderedCollection new.
	
	self 
		should: [laInterfaz checkOutCart: 0 withCard: 1234567812345678 expiringOn: aDate withOwner: 'Mariano Oca' registeringOn: aSalesBook ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidCartIDErrorDescription.
			self assert: aSalesBook isEmpty ]! !
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 17:54:38' prior: 50561981!
test12CheckOutACartWithExpiredCardRaisesException

	|aDate changoID aSalesBook |
	
	aDate  := Month month: 4 year: 1998.
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 2.
	aSalesBook := OrderedCollection new.
	
	self 
		should: [laInterfaz checkOutCart: changoID withCard: 1234567812345678 expiringOn: aDate withOwner: 'user' registeringOn: aSalesBook ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cashier canNotChargeAnExpiredCreditCardErrorMessage.
			self assert: aSalesBook isEmpty. ]! !

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'SR 11/6/2022 17:54:39'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 17:54:49' prior: 50562003!
test13CheckOutACartWithInvalidNumberedCardRaisesException
	| aDate changoID aSalesBook |
	
	aDate  := Month month: 4 year: 2050.
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 2.
	aSalesBook := OrderedCollection new.
	
	self 
		should: [ laInterfaz checkOutCart: changoID withCard: 1 expiringOn: aDate withOwner: 'user' registeringOn: aSalesBook ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = CreditCard invalidCardNumberErrorDescription.
			self assert: aSalesBook isEmpty. ]! !

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'SR 11/6/2022 17:54:51'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'SR 11/6/2022 17:54:53'!
ERROR!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'SR 11/6/2022 17:54:53'!
ERROR!
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 17:55:23' prior: 50561762!
test14CheckOutACartWithOneBookRegistersSaleCorrectly

	| aDate changoID aSalesBook |
	
	aDate  := Month month: 4 year: 2050.
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	aSalesBook := OrderedCollection new.
	
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	laInterfaz checkOutCart: changoID withCard: 1234123412341234 expiringOn: aDate withOwner: 'user' registeringOn: aSalesBook.

	! !
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 17:56:31' prior: 50562103!
test14CheckOutACartWithOneBookRegistersSaleCorrectly

	| aDate changoID aSalesBook |
	
	aDate  := Month month: 4 year: 2050.
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	aSalesBook := OrderedCollection new.
	
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	laInterfaz checkOutCart: changoID withCard: 1234123412341234 expiringOn: aDate withOwner: 'user' registeringOn: aSalesBook.
	
	self assert: aSalesBook size equals: 1.
	self assert: aSalesBook first equals: testObjectsFactory itemSellByTheStorePrice.

	! !

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'SR 11/6/2022 17:56:32'!
FAILURE!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'SR 11/6/2022 17:56:32'!
FAILURE!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'SR 11/6/2022 17:56:48'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 17:57:04' prior: 50562120!
test14CheckOutACartWithOneBookRegistersSaleCorrectly

	| aDate changoID aSalesBook |
	
	aDate  := Month month: 4 year: 2050.
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	aSalesBook := OrderedCollection new.
	
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	laInterfaz checkOutCart: changoID withCard: 1234123412341234 expiringOn: aDate withOwner: 'user' registeringOn: aSalesBook.
	
	self assert: aSalesBook size equals: 1.
	self assert: aSalesBook first equals: (testObjectsFactory itemSellByTheStorePrice).

	! !

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'SR 11/6/2022 17:57:05'!
FAILURE!
!Interfaz methodsFor: 'operations' stamp: 'SR 11/6/2022 17:58:55' prior: 50561823!
checkOutCart: cartID withCard: cardNumber expiringOn: aDate withOwner: aName registeringOn: aSalesRegister

	|aCard aCashier|
	
	self assertValidCart: cartID.
	
	aCard := CreditCard expiringOn: aDate withNumber: cardNumber withOwner: aName.
	aCashier := Cashier toCheckout: (cartIDtoCart at: cartID) charging: aCard throught: (MerchantProcessorSimulator new) on: (DateAndTime now) registeringOn: aSalesRegister.
	
	^aCashier checkOut.! !

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'SR 11/6/2022 17:58:58'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'SR 11/6/2022 17:58:58'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'SR 11/6/2022 17:58:58'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'SR 11/6/2022 17:58:58'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'SR 11/6/2022 17:58:58'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'SR 11/6/2022 17:58:58'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'SR 11/6/2022 17:58:58'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'SR 11/6/2022 17:58:58'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'SR 11/6/2022 17:58:58'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'SR 11/6/2022 17:58:58'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'SR 11/6/2022 17:58:58'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'SR 11/6/2022 17:58:58'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'SR 11/6/2022 17:58:58'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'SR 11/6/2022 17:58:58'!
FAILURE!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'SR 11/6/2022 17:58:58'!
FAILURE!
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 17:59:27' prior: 50562153!
test14CheckOutACartWithOneBookRegistersSaleCorrectly

	| aDate changoID aSalesBook |
	
	aDate  := Month month: 4 year: 2050.
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	aSalesBook := OrderedCollection new.
	
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	laInterfaz checkOutCart: changoID withCard: 1234123412341234 expiringOn: aDate withOwner: 'user' registeringOn: aSalesBook.
	
	self assert: aSalesBook size equals: 1.
	self assert: (aSalesBook first) total equals: (testObjectsFactory itemSellByTheStorePrice).

	! !

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'SR 11/6/2022 17:59:29'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'SR 11/6/2022 17:59:31'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'SR 11/6/2022 17:59:32'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 18:00:57'!
test15CannotListPurchasesIfAuthenticationFails

	
	! !
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 18:01:13' prior: 50562281!
test15CannotListPurchasesIfAuthenticationFails

	| aUser aPassword |
	
	aUser := 'La invalida'.
	aPassword := 'contraseña valida'.
	authenticatorBehavior := [ :anUser :anPassword | false ].
	
	self 
		should: [ laInterfaz createCartForUser: aUser withPassword: aPassword ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidLogInErrorDescription ]! !
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 18:02:40' prior: 50562286!
test15CannotListPurchasesIfAuthenticationFails

	| aUser aPassword |
	
	aUser := 'La invalida'.
	aPassword := 'contraseña valida'.
	authenticatorBehavior := [ :anUser :anPassword | false ].
	
	self 
		should: [ laInterfaz listPurchases: aUser withPassword: aPassword ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidLogInErrorDescription ]! !

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'SR 11/6/2022 18:02:50'!
FAILURE!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'SR 11/6/2022 18:02:50'!
FAILURE!
!Interfaz methodsFor: 'operations' stamp: 'SR 11/6/2022 18:04:12'!
listPurchasesOf: aUserID withPassword: aPassword
	
	self error: self class invalidLogInErrorDescription.! !

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'SR 11/6/2022 18:04:14'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'SR 11/6/2022 18:04:14'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'SR 11/6/2022 18:04:14'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'SR 11/6/2022 18:04:14'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'SR 11/6/2022 18:04:14'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'SR 11/6/2022 18:04:14'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'SR 11/6/2022 18:04:14'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'SR 11/6/2022 18:04:14'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'SR 11/6/2022 18:04:14'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'SR 11/6/2022 18:04:14'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'SR 11/6/2022 18:04:14'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'SR 11/6/2022 18:04:14'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'SR 11/6/2022 18:04:14'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'SR 11/6/2022 18:04:14'!
PASSED!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'SR 11/6/2022 18:04:14'!
FAILURE!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'SR 11/6/2022 18:04:14'!
FAILURE!
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 18:04:23' prior: 50562302!
test15CannotListPurchasesIfAuthenticationFails

	| aUser aPassword |
	
	aUser := 'La invalida'.
	aPassword := 'contraseña valida'.
	authenticatorBehavior := [ :anUser :anPassword | false ].
	
	self 
		should: [ laInterfaz listPurchasesOf: aUser withPassword: aPassword ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidLogInErrorDescription ]! !

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'SR 11/6/2022 18:04:24'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 18:05:30'!
test16ListPurchasesWihtoutSalesReturnsEmptyCollection

	| aUser aPassword |
	
	aUser := 'La invalida'.
	aPassword := 'contraseña valida'.
	authenticatorBehavior := [ :anUser :anPassword | false ].
	
	self 
		should: [ laInterfaz listPurchasesOf: aUser withPassword: aPassword ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidLogInErrorDescription ]! !
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 18:05:40' prior: 50562407!
test16ListPurchasesWihtoutSalesReturnsEmptyCollection

	| aUser aPassword |
	
	aUser := 'La invalida'.
	aPassword := 'contraseña valida'.
	
	self 
		should: [ laInterfaz listPurchasesOf: aUser withPassword: aPassword ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidLogInErrorDescription ]! !

----SNAPSHOT----(6 November 2022 18:34:38) CuisUniversity-5510.image priorSource: 7354570!

----STARTUP---- (6 November 2022 22:19:07) as C:\Users\sarod\Desktop\windows64\CuisUniversity-5510.image!


!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'SR 11/6/2022 22:19:51'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'SR 11/6/2022 22:19:51'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'SR 11/6/2022 22:19:51'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'SR 11/6/2022 22:19:51'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'SR 11/6/2022 22:19:51'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'SR 11/6/2022 22:19:51'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'SR 11/6/2022 22:19:51'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'SR 11/6/2022 22:19:51'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'SR 11/6/2022 22:19:51'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'SR 11/6/2022 22:19:51'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'SR 11/6/2022 22:19:51'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'SR 11/6/2022 22:19:51'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'SR 11/6/2022 22:19:51'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'SR 11/6/2022 22:19:51'!
PASSED!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'SR 11/6/2022 22:19:51'!
PASSED!

!testRun: #InterfazTest #test16ListPurchasesWihtoutSalesReturnsEmptyCollection stamp: 'SR 11/6/2022 22:19:51'!
PASSED!

!testRun: #InterfazTest #test16ListPurchasesWihtoutSalesReturnsEmptyCollection stamp: 'SR 11/6/2022 22:22:01'!
PASSED!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'SR 11/6/2022 22:22:08'!
PASSED!

!testRun: #InterfazTest #test16ListPurchasesWihtoutSalesReturnsEmptyCollection stamp: 'SR 11/6/2022 22:22:10'!
PASSED!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'SR 11/6/2022 22:22:35'!
PASSED!

!testRun: #InterfazTest #test16ListPurchasesWihtoutSalesReturnsEmptyCollection stamp: 'SR 11/6/2022 22:22:36'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 22:22:56' prior: 50562423!
test16ListPurchasesWihtoutSalesReturnsEmptyCollection

	| aUser aPassword |
	
	aUser := 'La invalida'.
	aPassword := 'contraseña valida'.
	
	laInterfaz listPurchasesOf: aUser withPassword: aPassword! !
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 22:23:30' prior: 50562519!
test16ListPurchasesWihtoutSalesReturnsEmptyCollection

	| aUser aPassword purchases |
	
	aUser := 'La invalida'.
	aPassword := 'contraseña valida'.
	
	purchases := laInterfaz listPurchasesOf: aUser withPassword: aPassword.
	
	self assert: purchases isEmpty.! !

!testRun: #InterfazTest #test16ListPurchasesWihtoutSalesReturnsEmptyCollection stamp: 'SR 11/6/2022 22:23:31'!
ERROR!
!Interfaz methodsFor: 'operations' stamp: 'SR 11/6/2022 22:25:36' prior: 50562324!
listPurchasesOf: aUserID withPassword: aPassword
	
	self assertValid: aUserID with: aPassword.
	
	^OrderedCollection new.! !

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'SR 11/6/2022 22:25:39'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'SR 11/6/2022 22:25:39'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'SR 11/6/2022 22:25:39'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'SR 11/6/2022 22:25:39'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'SR 11/6/2022 22:25:39'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'SR 11/6/2022 22:25:39'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'SR 11/6/2022 22:25:39'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'SR 11/6/2022 22:25:39'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'SR 11/6/2022 22:25:39'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'SR 11/6/2022 22:25:39'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'SR 11/6/2022 22:25:39'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'SR 11/6/2022 22:25:39'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'SR 11/6/2022 22:25:39'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'SR 11/6/2022 22:25:39'!
PASSED!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'SR 11/6/2022 22:25:39'!
PASSED!

!testRun: #InterfazTest #test16ListPurchasesWihtoutSalesReturnsEmptyCollection stamp: 'SR 11/6/2022 22:25:39'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 22:26:04'!
test16ListPurchasesWithoutSalesReturnsEmptyCollection

	| aUser aPassword purchases |
	
	aUser := 'La invalida'.
	aPassword := 'contraseña valida'.
	
	purchases := laInterfaz listPurchasesOf: aUser withPassword: aPassword.
	
	self assert: purchases isEmpty.! !

!methodRemoval: InterfazTest #test16ListPurchasesWihtoutSalesReturnsEmptyCollection stamp: 'SR 11/6/2022 22:26:04'!
test16ListPurchasesWihtoutSalesReturnsEmptyCollection

	| aUser aPassword purchases |
	
	aUser := 'La invalida'.
	aPassword := 'contraseña valida'.
	
	purchases := laInterfaz listPurchasesOf: aUser withPassword: aPassword.
	
	self assert: purchases isEmpty.!
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 22:26:39'!
test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale

	| aUser aPassword purchases |
	
	aUser := 'La invalida'.
	aPassword := 'contraseña valida'.
	
	purchases := laInterfaz listPurchasesOf: aUser withPassword: aPassword.
	
	self assert: purchases isEmpty.! !
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 22:29:26' prior: 50562629!
test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale

	| aUser aPassword purchases aDate changoID aSalesBook |
	
	aUser := 'user'.
	aPassword := 'pass'.
	
	aDate  := Month month: 4 year: 2050.
	changoID := laInterfaz createCartForUser: aUser withPassword: aPassword.
	aSalesBook := OrderedCollection new.
	
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	laInterfaz checkOutCart: changoID withCard: 1234123412341234 expiringOn: aDate withOwner: 'Owner' registeringOn: aSalesBook.
	
	purchases := laInterfaz listPurchasesOf: aUser withPassword: aPassword.
	
	self assert: purchases isEmpty.! !

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'SR 11/6/2022 22:50:35'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 22:53:39' prior: 50562640!
test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale

	| aUser aPassword purchases aDate changoID aSalesBook aSaleTotal |
	
	aUser := 'user'.
	aPassword := 'pass'.
	
	aDate  := Month month: 4 year: 2050.
	aSalesBook := OrderedCollection new.
	
	changoID := laInterfaz createCartForUser: aUser withPassword: aPassword.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	aSaleTotal := laInterfaz checkOutCart: changoID withCard: 1234123412341234 expiringOn: aDate withOwner: 'Owner' registeringOn: aSalesBook.
	
	purchases := laInterfaz listPurchasesOf: aUser withPassword: aPassword.
	
	self assert: purchases isEmpty.! !

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'SR 11/6/2022 23:01:22'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'SR 11/6/2022 23:01:25'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'SR 11/6/2022 23:01:25'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'SR 11/6/2022 23:01:25'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'SR 11/6/2022 23:01:25'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'SR 11/6/2022 23:01:25'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'SR 11/6/2022 23:01:25'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'SR 11/6/2022 23:01:25'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'SR 11/6/2022 23:01:25'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'SR 11/6/2022 23:01:25'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'SR 11/6/2022 23:01:25'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'SR 11/6/2022 23:01:25'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'SR 11/6/2022 23:01:25'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'SR 11/6/2022 23:01:25'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'SR 11/6/2022 23:01:25'!
PASSED!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'SR 11/6/2022 23:01:25'!
PASSED!

!testRun: #InterfazTest #test16ListPurchasesWithoutSalesReturnsEmptyCollection stamp: 'SR 11/6/2022 23:01:25'!
PASSED!

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'SR 11/6/2022 23:01:25'!
PASSED!

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'SR 11/6/2022 23:02:06'!
PASSED!
!Interfaz methodsFor: 'operations' stamp: 'SR 11/6/2022 23:24:53' prior: 50562178!
checkOutCart: cartID withCard: cardNumber expiringOn: aDate withOwner: aName registeringOn: aSalesRegister

	|aCard aCashier|
	
	self assertValidCart: cartID.
	
	aCard := CreditCard expiringOn: aDate withNumber: cardNumber withOwner: aName.
	aCashier := Cashier toCheckout: (cartIDtoCart at: cartID) charging: aCard throught: (MerchantProcessorSimulator new) on: (DateAndTime now) registeringOn: aSalesRegister.
	
	^aCashier checkOut.! !
!Cashier methodsFor: 'nil' stamp: 'SR 11/6/2022 23:25:59'!
saleSummary

	| saleSummary |
	
	saleSummary := OrderedCollection new.
	! !
!Cart methodsFor: 'queries' stamp: 'SR 11/6/2022 23:27:05'!
catalog

	^catalog! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'SR 11/6/2022 23:27:37' prior: 50562777!
saleSummary

	| saleSummary |
	
	saleSummary := OrderedCollection new.
	cart catalog ! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'SR 11/6/2022 23:27:41' prior: 50562786!
saleSummary

	| saleSummary |
	
	saleSummary := OrderedCollection new.
	cart catalog.! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'SR 11/6/2022 23:29:43' prior: 50562792!
saleSummary

	| saleSummary |
	
	saleSummary := OrderedCollection new.
	cart catalog keysDo: [ :book |
		saleSummary add: book.
		saleSummary add: (cart items occurrencesOf: book).
		].
	saleSummary add: total.! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'SR 11/6/2022 23:30:07' prior: 50562798!
saleSummary

	| saleSummary |
	
	saleSummary := OrderedCollection new.
	cart catalog keysDo: [ :book |
		saleSummary add: book.
		saleSummary add: (cart items occurrencesOf: book).
		].
	saleSummary add: total.
	^saleSummary.! !

!classDefinition: #Interfaz category: 'TusLibros' stamp: 'SR 11/6/2022 23:32:01'!
Object subclass: #Interfaz
	instanceVariableNames: 'authenticator catalog cartIDtoCart cartIDManager merchantProcessor saleSummary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Interfaz methodsFor: 'operations' stamp: 'SR 11/6/2022 23:32:00' prior: 50562761!
checkOutCart: cartID withCard: cardNumber expiringOn: aDate withOwner: aName registeringOn: aSalesRegister

	| aCard aCashier |
	
	self assertValidCart: cartID.
	
	aCard := CreditCard expiringOn: aDate withNumber: cardNumber withOwner: aName.
	aCashier := Cashier toCheckout: (cartIDtoCart at: cartID) charging: aCard throught: (MerchantProcessorSimulator new) on: (DateAndTime now) registeringOn: aSalesRegister.
	saleSummary := aCashier saleSummary.
	
	^aCashier checkOut.! !

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'SR 11/6/2022 23:32:34'!
PASSED!
!Interfaz methodsFor: 'operations' stamp: 'SR 11/6/2022 23:33:07' prior: 50562543!
listPurchasesOf: aUserID withPassword: aPassword
	
	self assertValid: aUserID with: aPassword.
	
	^saleSummary.! !

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'SR 11/6/2022 23:33:14'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'SR 11/6/2022 23:33:14'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'SR 11/6/2022 23:33:14'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'SR 11/6/2022 23:33:14'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'SR 11/6/2022 23:33:14'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'SR 11/6/2022 23:33:14'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'SR 11/6/2022 23:33:14'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'SR 11/6/2022 23:33:14'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'SR 11/6/2022 23:33:14'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'SR 11/6/2022 23:33:14'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'SR 11/6/2022 23:33:14'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'SR 11/6/2022 23:33:14'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'SR 11/6/2022 23:33:14'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'SR 11/6/2022 23:33:14'!
PASSED!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'SR 11/6/2022 23:33:14'!
PASSED!

!testRun: #InterfazTest #test16ListPurchasesWithoutSalesReturnsEmptyCollection stamp: 'SR 11/6/2022 23:33:14'!
ERROR!

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'SR 11/6/2022 23:33:14'!
FAILURE!
!Interfaz methodsFor: 'initialization' stamp: 'SR 11/6/2022 23:39:04' prior: 50553824!
initializeWith: anAuthenticator with: aCatalog 

	authenticator := anAuthenticator.
	catalog  := aCatalog.
	cartIDtoCart := Dictionary new.
	cartIDManager := 0.
	saleSummary := OrderedCollection new.! !

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'SR 11/6/2022 23:39:07'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'SR 11/6/2022 23:39:07'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'SR 11/6/2022 23:39:07'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'SR 11/6/2022 23:39:07'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'SR 11/6/2022 23:39:07'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'SR 11/6/2022 23:39:07'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'SR 11/6/2022 23:39:08'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'SR 11/6/2022 23:39:08'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'SR 11/6/2022 23:39:08'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'SR 11/6/2022 23:39:08'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'SR 11/6/2022 23:39:08'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'SR 11/6/2022 23:39:08'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'SR 11/6/2022 23:39:08'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'SR 11/6/2022 23:39:08'!
PASSED!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'SR 11/6/2022 23:39:08'!
PASSED!

!testRun: #InterfazTest #test16ListPurchasesWithoutSalesReturnsEmptyCollection stamp: 'SR 11/6/2022 23:39:08'!
PASSED!

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'SR 11/6/2022 23:39:08'!
FAILURE!

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'SR 11/6/2022 23:39:08'!
FAILURE!

!testRun: #InterfazTest #test16ListPurchasesWithoutSalesReturnsEmptyCollection stamp: 'SR 11/6/2022 23:39:11'!
PASSED!

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'SR 11/6/2022 23:39:13'!
FAILURE!

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'SR 11/6/2022 23:39:13'!
FAILURE!

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'SR 11/6/2022 23:39:45'!
FAILURE!

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'SR 11/6/2022 23:39:45'!
FAILURE!
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 23:41:01' prior: 50562667!
test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale

	| aUser aPassword purchases aDate changoID aSalesBook aSaleTotal |
	
	aUser := 'user'.
	aPassword := 'pass'.
	
	aDate  := Month month: 4 year: 2050.
	aSalesBook := OrderedCollection new.
	
	changoID := laInterfaz createCartForUser: aUser withPassword: aPassword.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	aSaleTotal := laInterfaz checkOutCart: changoID withCard: 1234123412341234 expiringOn: aDate withOwner: 'Owner' registeringOn: aSalesBook.
	
	purchases := laInterfaz listPurchasesOf: aUser withPassword: aPassword.
	
	self assert: purchases size > 0.! !

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'SR 11/6/2022 23:41:04'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'SR 11/6/2022 23:41:04'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'SR 11/6/2022 23:41:04'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'SR 11/6/2022 23:41:04'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'SR 11/6/2022 23:41:04'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'SR 11/6/2022 23:41:04'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'SR 11/6/2022 23:41:04'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'SR 11/6/2022 23:41:04'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'SR 11/6/2022 23:41:04'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'SR 11/6/2022 23:41:04'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'SR 11/6/2022 23:41:04'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'SR 11/6/2022 23:41:04'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'SR 11/6/2022 23:41:04'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'SR 11/6/2022 23:41:04'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'SR 11/6/2022 23:41:04'!
PASSED!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'SR 11/6/2022 23:41:04'!
PASSED!

!testRun: #InterfazTest #test16ListPurchasesWithoutSalesReturnsEmptyCollection stamp: 'SR 11/6/2022 23:41:04'!
PASSED!

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'SR 11/6/2022 23:41:04'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 23:42:41' prior: 50563013!
test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale

	| aUser aPassword purchases aDate changoID aSalesBook aSaleTotal |
	
	aUser := 'user'.
	aPassword := 'pass'.
	
	aDate  := Month month: 4 year: 2050.
	aSalesBook := OrderedCollection new.
	
	changoID := laInterfaz createCartForUser: aUser withPassword: aPassword.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	aSaleTotal := laInterfaz checkOutCart: changoID withCard: 1234123412341234 expiringOn: aDate withOwner: 'Owner' registeringOn: aSalesBook.
	
	purchases := laInterfaz listPurchasesOf: aUser withPassword: aPassword.
	
	self assert: purchases size > 0.
	self assert: purchases first = testObjectsFactory itemSellByTheStore.
	self assert: purchases second = 1.
	self assert: purchases last = testObjectsFactory itemSellByTheStorePrice.! !

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'SR 11/6/2022 23:42:44'!
FAILURE!

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'SR 11/6/2022 23:43:08'!
FAILURE!
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 23:46:12' prior: 50563103!
test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale

	| aUser aPassword purchases aDate changoID aSalesBook aSaleTotal |
	
	aUser := 'user'.
	aPassword := 'pass'.
	
	aDate  := Month month: 4 year: 2050.
	aSalesBook := OrderedCollection new.
	
	changoID := laInterfaz createCartForUser: aUser withPassword: aPassword.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	aSaleTotal := laInterfaz checkOutCart: changoID withCard: 1234123412341234 expiringOn: aDate withOwner: 'Owner' registeringOn: aSalesBook.
	
	purchases := laInterfaz listPurchasesOf: aUser withPassword: aPassword.
	
	self assert: purchases size > 0.
	self assert: purchases first = testObjectsFactory otherItemSellByTheStore.
	self assert: purchases second = 0.
	self assert: purchases first = testObjectsFactory itemNotSellByTheStore.
	self assert: purchases second = 1.
	self assert: purchases last = testObjectsFactory itemSellByTheStorePrice.! !
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 23:46:26' prior: 50563141!
test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale

	| aUser aPassword purchases aDate changoID aSalesBook aSaleTotal |
	
	aUser := 'user'.
	aPassword := 'pass'.
	
	aDate  := Month month: 4 year: 2050.
	aSalesBook := OrderedCollection new.
	
	changoID := laInterfaz createCartForUser: aUser withPassword: aPassword.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	aSaleTotal := laInterfaz checkOutCart: changoID withCard: 1234123412341234 expiringOn: aDate withOwner: 'Owner' registeringOn: aSalesBook.
	
	purchases := laInterfaz listPurchasesOf: aUser withPassword: aPassword.
	
	self assert: purchases size > 0.
	self assert: purchases first = testObjectsFactory otherItemSellByTheStore.
	self assert: purchases second = 0.
	self assert: purchases third = testObjectsFactory itemNotSellByTheStore.
	self assert: purchases fourth = 1.
	self assert: purchases last = testObjectsFactory itemSellByTheStorePrice.! !

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'SR 11/6/2022 23:46:28'!
FAILURE!
!Cashier methodsFor: 'checkout' stamp: 'SR 11/6/2022 23:47:05' prior: 50562808!
saleSummary

	| saleSummary |
	
	saleSummary := OrderedCollection new.
	cart catalog keysDo: [ :book |
		saleSummary add: book.
		saleSummary add: (cart items occurrencesOf: book).
		].
	saleSummary add: cart total.
	^saleSummary.! !

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'SR 11/6/2022 23:47:08'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'SR 11/6/2022 23:47:08'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'SR 11/6/2022 23:47:08'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'SR 11/6/2022 23:47:08'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'SR 11/6/2022 23:47:08'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'SR 11/6/2022 23:47:08'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'SR 11/6/2022 23:47:08'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'SR 11/6/2022 23:47:08'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'SR 11/6/2022 23:47:08'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'SR 11/6/2022 23:47:08'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'SR 11/6/2022 23:47:08'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'SR 11/6/2022 23:47:08'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'SR 11/6/2022 23:47:08'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'SR 11/6/2022 23:47:08'!
PASSED!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'SR 11/6/2022 23:47:08'!
PASSED!

!testRun: #InterfazTest #test16ListPurchasesWithoutSalesReturnsEmptyCollection stamp: 'SR 11/6/2022 23:47:08'!
PASSED!

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'SR 11/6/2022 23:47:08'!
FAILURE!

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'SR 11/6/2022 23:47:08'!
FAILURE!

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'SR 11/6/2022 23:47:11'!
FAILURE!

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'SR 11/6/2022 23:47:11'!
FAILURE!
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 23:47:51' prior: 50563174!
test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale

	| aUser aPassword purchases aDate changoID aSalesBook aSaleTotal |
	
	aUser := 'user'.
	aPassword := 'pass'.
	
	aDate  := Month month: 4 year: 2050.
	aSalesBook := OrderedCollection new.
	
	changoID := laInterfaz createCartForUser: aUser withPassword: aPassword.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	aSaleTotal := laInterfaz checkOutCart: changoID withCard: 1234123412341234 expiringOn: aDate withOwner: 'Owner' registeringOn: aSalesBook.
	
	purchases := laInterfaz listPurchasesOf: aUser withPassword: aPassword.
	
	self assert: purchases size > 0.
	self assert: purchases first = testObjectsFactory otherItemSellByTheStore.
	self assert: purchases second = 0.
	self assert: purchases third = testObjectsFactory itemNotSellByTheStore.
	self assert: purchases fourth = 1.
	self assert: purchases last = testObjectsFactory itemSellByTheStorePrice.! !
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 23:48:07' prior: 50563295!
test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale

	| aUser aPassword purchases aDate changoID aSalesBook aSaleTotal |
	
	aUser := 'user'.
	aPassword := 'pass'.
	
	aDate  := Month month: 4 year: 2050.
	aSalesBook := OrderedCollection new.
	
	changoID := laInterfaz createCartForUser: aUser withPassword: aPassword.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	aSaleTotal := laInterfaz checkOutCart: changoID withCard: 1234123412341234 expiringOn: aDate withOwner: 'Owner' registeringOn: aSalesBook.
	
	purchases := laInterfaz listPurchasesOf: aUser withPassword: aPassword.
	
	self assert: purchases size > 0.
	self assert: purchases first = testObjectsFactory otherItemSellByTheStore.
	self assert: purchases second = 0.
	self assert: purchases third = testObjectsFactory itemSellByTheStore .
	self assert: purchases fourth = 1.
	self assert: purchases last = testObjectsFactory itemSellByTheStorePrice.! !

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'SR 11/6/2022 23:48:12'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'SR 11/6/2022 23:50:06' prior: 50563328!
test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale

	| aUser aPassword purchases aDate changoID aSalesBook aSaleTotal |
	
	aUser := 'user'.
	aPassword := 'pass'.
	
	aDate  := Month month: 4 year: 2050.
	aSalesBook := OrderedCollection new.
	
	changoID := laInterfaz createCartForUser: aUser withPassword: aPassword.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	aSaleTotal := laInterfaz checkOutCart: changoID withCard: 1234123412341234 expiringOn: aDate withOwner: 'Owner' registeringOn: aSalesBook.
	
	purchases := laInterfaz listPurchasesOf: aUser withPassword: aPassword.
	
	self assert: purchases size > 0.
	self assert: purchases first = testObjectsFactory otherItemSellByTheStore.
	self assert: purchases second = 0.
	self assert: purchases third = testObjectsFactory itemSellByTheStore.
	self assert: purchases fourth = 1.
	self assert: purchases last = testObjectsFactory itemSellByTheStorePrice.! !

Object subclass: #Interfaz
	instanceVariableNames: 'authenticator catalog cartIDtoCart cartIDManager merchantProcessor saleSummary salesBook'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Interfaz category: 'TusLibros' stamp: 'SR 11/7/2022 00:30:20'!
Object subclass: #Interfaz
	instanceVariableNames: 'authenticator catalog cartIDtoCart cartIDManager merchantProcessor saleSummary salesBook'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

Object subclass: #Interfaz
	instanceVariableNames: 'authenticator catalog cartIDtoCart cartIDManager merchantProcessor saleSummary salesBook cartIDtoUser'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Interfaz category: 'TusLibros' stamp: 'SR 11/7/2022 00:30:40'!
Object subclass: #Interfaz
	instanceVariableNames: 'authenticator catalog cartIDtoCart cartIDManager merchantProcessor saleSummary salesBook cartIDtoUser'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Interfaz methodsFor: 'operations' stamp: 'SR 11/7/2022 00:31:21' prior: 50554032!
createCartForUser: aUserID withPassword: aPassword
	
	self assertValid: aUserID with: aPassword.
	
	cartIDtoCart at: cartIDManager put: (Cart acceptingItemsOf: catalog).
	cartIDtoUser at: cartIDManager put: aUserID.
	
	cartIDManager := cartIDManager + 1.
	
	^ cartIDManager - 1! !
!Interfaz methodsFor: 'operations' stamp: 'SR 11/7/2022 00:33:44' prior: 50563431!
createCartForUser: aUserID withPassword: aPassword
	
	self assertValid: aUserID with: aPassword.
	
	cartIDtoCart at: cartIDManager put: (Cart acceptingItemsOf: catalog).
	
	cartIDManager := cartIDManager + 1.
	
	^ cartIDManager - 1! !

Object subclass: #Interfaz
	instanceVariableNames: 'authenticator catalog cartIDtoCart cartIDManager merchantProcessor saleSummary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Interfaz category: 'TusLibros' stamp: 'SR 11/7/2022 00:33:53'!
Object subclass: #Interfaz
	instanceVariableNames: 'authenticator catalog cartIDtoCart cartIDManager merchantProcessor saleSummary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'SR 11/7/2022 00:33:55'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'SR 11/7/2022 00:33:55'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'SR 11/7/2022 00:33:55'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'SR 11/7/2022 00:33:55'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'SR 11/7/2022 00:33:55'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'SR 11/7/2022 00:33:55'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'SR 11/7/2022 00:33:55'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'SR 11/7/2022 00:33:55'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'SR 11/7/2022 00:33:55'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'SR 11/7/2022 00:33:55'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'SR 11/7/2022 00:33:55'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'SR 11/7/2022 00:33:55'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'SR 11/7/2022 00:33:55'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'SR 11/7/2022 00:33:55'!
PASSED!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'SR 11/7/2022 00:33:55'!
PASSED!

!testRun: #InterfazTest #test16ListPurchasesWithoutSalesReturnsEmptyCollection stamp: 'SR 11/7/2022 00:33:55'!
PASSED!

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'SR 11/7/2022 00:33:55'!
PASSED!

!testRun: #CreditCardTest #test01CannotCreateCardWithInvalidNumber stamp: 'SR 11/7/2022 00:33:56'!
PASSED!

!testRun: #CreditCardTest #test02CannotCreateCardWithEmptyOwner stamp: 'SR 11/7/2022 00:33:56'!
PASSED!

!testRun: #CreditCardTest #test03CardCreatedWithValidNumberAndOwnerStoresCorrectInfo stamp: 'SR 11/7/2022 00:33:56'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'SR 11/7/2022 00:33:57'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'SR 11/7/2022 00:33:57'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'SR 11/7/2022 00:33:57'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'SR 11/7/2022 00:33:57'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'SR 11/7/2022 00:33:57'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'SR 11/7/2022 00:33:57'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'SR 11/7/2022 00:33:58'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'SR 11/7/2022 00:33:58'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'SR 11/7/2022 00:33:58'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'SR 11/7/2022 00:33:58'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'SR 11/7/2022 00:33:58'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'SR 11/7/2022 00:33:58'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'SR 11/7/2022 00:33:58'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'SR 11/7/2022 00:33:58'!
PASSED!

----SNAPSHOT----(7 November 2022 00:34:05) CuisUniversity-5510.image priorSource: 7385146!

----STARTUP---- (7 November 2022 11:30:32) as C:\Users\maria\Desktop\Facultad\Taller\Inge1\CuisUniversity-windows64\CuisUniversity-5510.image!


!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/7/2022 11:35:13'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/7/2022 11:35:13'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/7/2022 11:35:13'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'MO 11/7/2022 11:35:13'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'MO 11/7/2022 11:35:13'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'MO 11/7/2022 11:35:13'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'MO 11/7/2022 11:35:13'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'MO 11/7/2022 11:35:13'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'MO 11/7/2022 11:35:13'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'MO 11/7/2022 11:35:13'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'MO 11/7/2022 11:35:13'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'MO 11/7/2022 11:35:13'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'MO 11/7/2022 11:35:13'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'MO 11/7/2022 11:35:13'!
PASSED!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'MO 11/7/2022 11:35:13'!
PASSED!

!testRun: #InterfazTest #test16ListPurchasesWithoutSalesReturnsEmptyCollection stamp: 'MO 11/7/2022 11:35:14'!
PASSED!

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'MO 11/7/2022 11:35:14'!
PASSED!

!testRun: #CreditCardTest #test01CannotCreateCardWithInvalidNumber stamp: 'MO 11/7/2022 11:35:16'!
PASSED!

!testRun: #CreditCardTest #test02CannotCreateCardWithEmptyOwner stamp: 'MO 11/7/2022 11:35:17'!
PASSED!

!testRun: #CreditCardTest #test03CardCreatedWithValidNumberAndOwnerStoresCorrectInfo stamp: 'MO 11/7/2022 11:35:17'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'MO 11/7/2022 11:35:19'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'MO 11/7/2022 11:35:19'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'MO 11/7/2022 11:35:19'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'MO 11/7/2022 11:35:19'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'MO 11/7/2022 11:35:19'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'MO 11/7/2022 11:35:19'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'MO 11/7/2022 11:35:21'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'MO 11/7/2022 11:35:21'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'MO 11/7/2022 11:35:21'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'MO 11/7/2022 11:35:21'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'MO 11/7/2022 11:35:21'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'MO 11/7/2022 11:35:21'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'MO 11/7/2022 11:35:21'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'MO 11/7/2022 11:35:21'!
PASSED!

Object subclass: #Interfaz
	instanceVariableNames: 'authenticator catalog merchantProcessor clock cartIDtoCart cartIDManager saleSummary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Interfaz category: 'TusLibros' stamp: 'MO 11/7/2022 11:47:41'!
Object subclass: #Interfaz
	instanceVariableNames: 'authenticator catalog merchantProcessor clock cartIDtoCart cartIDManager saleSummary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Interfaz methodsFor: 'operations' stamp: 'MO 11/7/2022 11:50:17' prior: 50562827!
checkOutCart: cartID withCard: cardNumber expiringOn: aDate withOwner: aName registeringOn: aSalesRegister

	| aCard aCashier |
	
	self assertValidCart: cartID.
	
	aCard := CreditCard expiringOn: aDate withNumber: cardNumber withOwner: aName.
	aCashier := Cashier toCheckout: (cartIDtoCart at: cartID) charging: aCard throught: merchantProcessor on: (DateAndTime now) registeringOn: aSalesRegister.
	saleSummary := aCashier saleSummary.
	
	^aCashier checkOut.! !
!Interfaz methodsFor: 'initialization' stamp: 'MO 11/7/2022 11:51:04'!
initializeWith: anAuthenticator with: aCatalog with: aMerchantProcesor

	authenticator := anAuthenticator.
	catalog  := aCatalog.
	merchantProcessor := aMerchantProcesor.
	cartIDtoCart := Dictionary new.
	cartIDManager := 0.
	saleSummary := OrderedCollection new.! !

!methodRemoval: Interfaz #initializeWith:with: stamp: 'MO 11/7/2022 11:51:11'!
initializeWith: anAuthenticator with: aCatalog 

	authenticator := anAuthenticator.
	catalog  := aCatalog.
	cartIDtoCart := Dictionary new.
	cartIDManager := 0.
	saleSummary := OrderedCollection new.!
!Interfaz class methodsFor: 'instance creation' stamp: 'MO 11/7/2022 11:51:47'!
withAuthenticator: anAuthenticator withCatalog: aCatalog withMerchantProcessor: aMerchantProcessor
	
	^ self new initializeWith: anAuthenticator with: aCatalog with: aMerchantProcessor
	! !

!methodRemoval: Interfaz class #withAuthenticator:withCatalog: stamp: 'MO 11/7/2022 11:51:51'!
withAuthenticator: anAuthenticator withCatalog: aCatalog 
	
	^ self new initializeWith: anAuthenticator with: aCatalog
	!
!StoreTestObjectsFactory methodsFor: 'interfaz' stamp: 'MO 11/7/2022 11:53:04' prior: 50553776!
createInterfaz: anAuthenticator
	
	^ Interfaz withAuthenticator: anAuthenticator withCatalog: self defaultCatalog withMerchantProcessor: (MerchantProcessorSimulator new)! !

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/7/2022 11:53:23'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/7/2022 11:53:23'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/7/2022 11:53:23'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'MO 11/7/2022 11:53:23'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'MO 11/7/2022 11:53:23'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'MO 11/7/2022 11:53:23'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'MO 11/7/2022 11:53:23'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'MO 11/7/2022 11:53:23'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'MO 11/7/2022 11:53:24'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'MO 11/7/2022 11:53:24'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'MO 11/7/2022 11:53:24'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'MO 11/7/2022 11:53:24'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'MO 11/7/2022 11:53:24'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'MO 11/7/2022 11:53:24'!
PASSED!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'MO 11/7/2022 11:53:24'!
PASSED!

!testRun: #InterfazTest #test16ListPurchasesWithoutSalesReturnsEmptyCollection stamp: 'MO 11/7/2022 11:53:24'!
PASSED!

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'MO 11/7/2022 11:53:24'!
PASSED!
!Interfaz methodsFor: 'operations' stamp: 'MO 11/7/2022 11:55:09' prior: 50563727!
checkOutCart: cartID withCard: cardNumber expiringOn: aDate withOwner: aName registeringOn: aSalesRegister

	| aCard aCashier |
	
	self assertValidCart: cartID.
	
	aCard := CreditCard expiringOn: aDate withNumber: cardNumber withOwner: aName.
	aCashier := Cashier toCheckout: (cartIDtoCart at: cartID) charging: aCard throught: merchantProcessor on: clock registeringOn: aSalesRegister.
	saleSummary := aCashier saleSummary.
	
	^aCashier checkOut.! !
!Interfaz methodsFor: 'initialization' stamp: 'MO 11/7/2022 11:55:33' prior: 50563744!
initializeWith: anAuthenticator with: aCatalog with: aMerchantProcesor

	authenticator := anAuthenticator.
	catalog  := aCatalog.
	merchantProcessor := aMerchantProcesor.
	clock := DateAndTime now.
	cartIDtoCart := Dictionary new.
	cartIDManager := 0.
	saleSummary := OrderedCollection new.! !

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/7/2022 11:56:04'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/7/2022 11:56:04'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/7/2022 11:56:04'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'MO 11/7/2022 11:56:04'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'MO 11/7/2022 11:56:04'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'MO 11/7/2022 11:56:04'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'MO 11/7/2022 11:56:04'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'MO 11/7/2022 11:56:04'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'MO 11/7/2022 11:56:04'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'MO 11/7/2022 11:56:04'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'MO 11/7/2022 11:56:04'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'MO 11/7/2022 11:56:04'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'MO 11/7/2022 11:56:04'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'MO 11/7/2022 11:56:04'!
PASSED!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'MO 11/7/2022 11:56:04'!
PASSED!

!testRun: #InterfazTest #test16ListPurchasesWithoutSalesReturnsEmptyCollection stamp: 'MO 11/7/2022 11:56:05'!
PASSED!

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'MO 11/7/2022 11:56:05'!
PASSED!

!classDefinition: #InterfazTest category: 'TusLibros' stamp: 'MO 11/7/2022 12:04:12'!
TestCase subclass: #InterfazTest
	instanceVariableNames: 'testObjectsFactory authenticatorBehavior laInterfaz debitBehavior'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!InterfazTest methodsFor: 'setUp' stamp: 'MO 11/7/2022 12:04:04' prior: 50553954 overrides: 16961394!
setUp 

	testObjectsFactory := StoreTestObjectsFactory new.
	authenticatorBehavior := [ :aUser :aPassword | true ].
	debitBehavior := [ :anAmount :aCreditCard | ].
	
	laInterfaz := testObjectsFactory createInterfaz: self.! !
!InterfazTest methodsFor: 'merchant processor protocol' stamp: 'MO 11/7/2022 12:04:41'!
debit: anAmount from: aCreditCard 

	^debitBehavior value: anAmount value: aCreditCard ! !
!StoreTestObjectsFactory methodsFor: 'interfaz' stamp: 'MO 11/7/2022 12:05:42' prior: 50563780!
createInterfaz: aSimulator
	
	^ Interfaz withAuthenticator: aSimulator withCatalog: self defaultCatalog withMerchantProcessor: aSimulator! !

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/7/2022 12:05:48'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/7/2022 12:05:48'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/7/2022 12:05:48'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'MO 11/7/2022 12:05:48'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'MO 11/7/2022 12:05:48'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'MO 11/7/2022 12:05:48'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'MO 11/7/2022 12:05:48'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'MO 11/7/2022 12:05:48'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'MO 11/7/2022 12:05:48'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'MO 11/7/2022 12:05:48'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'MO 11/7/2022 12:05:48'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'MO 11/7/2022 12:05:48'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'MO 11/7/2022 12:05:48'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'MO 11/7/2022 12:05:48'!
PASSED!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'MO 11/7/2022 12:05:48'!
PASSED!

!testRun: #InterfazTest #test16ListPurchasesWithoutSalesReturnsEmptyCollection stamp: 'MO 11/7/2022 12:05:48'!
PASSED!

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'MO 11/7/2022 12:05:48'!
PASSED!

!classRemoval: #MerchantProcessorSimulator stamp: 'MO 11/7/2022 12:06:08'!
Object subclass: #MerchantProcessorSimulator
	instanceVariableNames: 'debitBehavior'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!testRun: #CreditCardTest #test01CannotCreateCardWithInvalidNumber stamp: 'MO 11/7/2022 12:06:12'!
PASSED!

!testRun: #CreditCardTest #test02CannotCreateCardWithEmptyOwner stamp: 'MO 11/7/2022 12:06:12'!
PASSED!

!testRun: #CreditCardTest #test03CardCreatedWithValidNumberAndOwnerStoresCorrectInfo stamp: 'MO 11/7/2022 12:06:12'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/7/2022 12:06:15'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/7/2022 12:06:15'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/7/2022 12:06:15'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'MO 11/7/2022 12:06:15'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'MO 11/7/2022 12:06:15'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'MO 11/7/2022 12:06:15'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'MO 11/7/2022 12:06:15'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'MO 11/7/2022 12:06:15'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'MO 11/7/2022 12:06:15'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'MO 11/7/2022 12:06:15'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'MO 11/7/2022 12:06:15'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'MO 11/7/2022 12:06:15'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'MO 11/7/2022 12:06:15'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'MO 11/7/2022 12:06:15'!
PASSED!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'MO 11/7/2022 12:06:15'!
PASSED!

!testRun: #InterfazTest #test16ListPurchasesWithoutSalesReturnsEmptyCollection stamp: 'MO 11/7/2022 12:06:15'!
PASSED!

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'MO 11/7/2022 12:06:15'!
PASSED!
!CreditCard class methodsFor: 'instance creation' stamp: 'MO 11/7/2022 12:11:38' prior: 50561191!
assertCreditCardOwnerIsValid: aCardOwner
	
	(aCardOwner isEmpty) ifTrue: [self error: self invalidCardOwnerErrorDescription ].! !

!testRun: #CreditCardTest #test01CannotCreateCardWithInvalidNumber stamp: 'MO 11/7/2022 12:11:41'!
PASSED!

!testRun: #CreditCardTest #test02CannotCreateCardWithEmptyOwner stamp: 'MO 11/7/2022 12:11:41'!
PASSED!

!testRun: #CreditCardTest #test03CardCreatedWithValidNumberAndOwnerStoresCorrectInfo stamp: 'MO 11/7/2022 12:11:41'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/7/2022 12:11:43'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/7/2022 12:11:43'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/7/2022 12:11:43'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'MO 11/7/2022 12:11:43'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'MO 11/7/2022 12:11:43'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'MO 11/7/2022 12:11:43'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'MO 11/7/2022 12:11:44'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'MO 11/7/2022 12:11:44'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'MO 11/7/2022 12:11:44'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'MO 11/7/2022 12:11:44'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'MO 11/7/2022 12:11:44'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'MO 11/7/2022 12:11:44'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'MO 11/7/2022 12:11:44'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'MO 11/7/2022 12:11:44'!
PASSED!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'MO 11/7/2022 12:11:44'!
PASSED!

!testRun: #InterfazTest #test16ListPurchasesWithoutSalesReturnsEmptyCollection stamp: 'MO 11/7/2022 12:11:44'!
PASSED!

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'MO 11/7/2022 12:11:44'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'MO 11/7/2022 12:11:47'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'MO 11/7/2022 12:11:47'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'MO 11/7/2022 12:11:47'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'MO 11/7/2022 12:11:47'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'MO 11/7/2022 12:11:47'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'MO 11/7/2022 12:11:47'!
PASSED!

!testRun: #CreditCardTest #test01CannotCreateCardWithInvalidNumber stamp: 'MO 11/7/2022 12:11:49'!
PASSED!

!testRun: #CreditCardTest #test02CannotCreateCardWithEmptyOwner stamp: 'MO 11/7/2022 12:11:49'!
PASSED!

!testRun: #CreditCardTest #test03CardCreatedWithValidNumberAndOwnerStoresCorrectInfo stamp: 'MO 11/7/2022 12:11:49'!
PASSED!

TestCase subclass: #InterfazTestSuite
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #InterfazTestSuite category: 'TusLibros' stamp: 'MO 11/7/2022 12:12:40'!
TestCase subclass: #InterfazTestSuite
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

InterfazTestSuite subclass: #InterfazTest
	instanceVariableNames: 'testObjectsFactory authenticatorBehavior laInterfaz debitBehavior'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #InterfazTest category: 'TusLibros' stamp: 'MO 11/7/2022 12:12:49'!
InterfazTestSuite subclass: #InterfazTest
	instanceVariableNames: 'testObjectsFactory authenticatorBehavior laInterfaz debitBehavior'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

InterfazTestSuite subclass: #CreditCardTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CreditCardTest category: 'TusLibros' stamp: 'MO 11/7/2022 12:12:57'!
InterfazTestSuite subclass: #CreditCardTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

InterfazTestSuite subclass: #CashierTest
	instanceVariableNames: 'testObjectsFactory debitBehavior'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CashierTest category: 'TusLibros' stamp: 'MO 11/7/2022 12:13:02'!
InterfazTestSuite subclass: #CashierTest
	instanceVariableNames: 'testObjectsFactory debitBehavior'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

InterfazTestSuite subclass: #CartTest
	instanceVariableNames: 'testObjectsFactory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CartTest category: 'TusLibros' stamp: 'MO 11/7/2022 12:13:10'!
InterfazTestSuite subclass: #CartTest
	instanceVariableNames: 'testObjectsFactory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'MO 11/7/2022 12:13:26'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'MO 11/7/2022 12:13:26'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'MO 11/7/2022 12:13:26'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'MO 11/7/2022 12:13:26'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'MO 11/7/2022 12:13:26'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'MO 11/7/2022 12:13:26'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'MO 11/7/2022 12:13:26'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'MO 11/7/2022 12:13:26'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'MO 11/7/2022 12:13:28'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'MO 11/7/2022 12:13:28'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'MO 11/7/2022 12:13:28'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'MO 11/7/2022 12:13:28'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'MO 11/7/2022 12:13:28'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'MO 11/7/2022 12:13:28'!
PASSED!

!testRun: #CreditCardTest #test01CannotCreateCardWithInvalidNumber stamp: 'MO 11/7/2022 12:13:30'!
PASSED!

!testRun: #CreditCardTest #test02CannotCreateCardWithEmptyOwner stamp: 'MO 11/7/2022 12:13:30'!
PASSED!

!testRun: #CreditCardTest #test03CardCreatedWithValidNumberAndOwnerStoresCorrectInfo stamp: 'MO 11/7/2022 12:13:30'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/7/2022 12:13:31'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/7/2022 12:13:31'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/7/2022 12:13:31'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'MO 11/7/2022 12:13:31'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'MO 11/7/2022 12:13:31'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'MO 11/7/2022 12:13:31'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'MO 11/7/2022 12:13:31'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'MO 11/7/2022 12:13:31'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'MO 11/7/2022 12:13:31'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'MO 11/7/2022 12:13:31'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'MO 11/7/2022 12:13:31'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'MO 11/7/2022 12:13:32'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'MO 11/7/2022 12:13:32'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'MO 11/7/2022 12:13:32'!
PASSED!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'MO 11/7/2022 12:13:32'!
PASSED!

!testRun: #InterfazTest #test16ListPurchasesWithoutSalesReturnsEmptyCollection stamp: 'MO 11/7/2022 12:13:32'!
PASSED!

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'MO 11/7/2022 12:13:32'!
PASSED!
!Interfaz methodsFor: 'initialization' stamp: 'MO 11/7/2022 12:18:35'!
initializeWith: anAuthenticator with: aCatalog with: aMerchantProcesor with: aClock

	authenticator := anAuthenticator.
	catalog  := aCatalog.
	merchantProcessor := aMerchantProcesor.
	clock := DateAndTime now.
	cartIDtoCart := Dictionary new.
	cartIDManager := 0.
	saleSummary := OrderedCollection new.! !
!Interfaz methodsFor: 'initialization' stamp: 'MO 11/7/2022 12:18:44' prior: 50564406!
initializeWith: anAuthenticator with: aCatalog with: aMerchantProcesor with: aClock

	authenticator := anAuthenticator.
	catalog  := aCatalog.
	merchantProcessor := aMerchantProcesor.
	clock := aClock.
	cartIDtoCart := Dictionary new.
	cartIDManager := 0.
	saleSummary := OrderedCollection new.! !
!Interfaz class methodsFor: 'instance creation' stamp: 'MO 11/7/2022 12:19:01'!
withAuthenticator: anAuthenticator withCatalog: aCatalog withMerchantProcessor: aMerchantProcessor withClock: aClock
	
	^ self new initializeWith: anAuthenticator with: aCatalog with: aMerchantProcessor
	! !
!Interfaz class methodsFor: 'instance creation' stamp: 'MO 11/7/2022 12:19:13' prior: 50564431!
withAuthenticator: anAuthenticator withCatalog: aCatalog withMerchantProcessor: aMerchantProcessor withClock: aClock
	
	^ self new initializeWith: anAuthenticator with: aCatalog with: aMerchantProcessor with: 	aClock
	! !

!methodRemoval: Interfaz class #withAuthenticator:withCatalog:withMerchantProcessor: stamp: 'MO 11/7/2022 12:19:15'!
withAuthenticator: anAuthenticator withCatalog: aCatalog withMerchantProcessor: aMerchantProcessor
	
	^ self new initializeWith: anAuthenticator with: aCatalog with: aMerchantProcessor
	!

!methodRemoval: Interfaz #initializeWith:with:with: stamp: 'MO 11/7/2022 12:19:22'!
initializeWith: anAuthenticator with: aCatalog with: aMerchantProcesor

	authenticator := anAuthenticator.
	catalog  := aCatalog.
	merchantProcessor := aMerchantProcesor.
	clock := DateAndTime now.
	cartIDtoCart := Dictionary new.
	cartIDManager := 0.
	saleSummary := OrderedCollection new.!
!StoreTestObjectsFactory methodsFor: 'interfaz' stamp: 'MO 11/7/2022 12:20:18' prior: 50563966!
createInterfaz: aSimulator
	
	^ Interfaz withAuthenticator: aSimulator withCatalog: self defaultCatalog withMerchantProcessor: aSimulator withClock: today! !

InterfazTestSuite subclass: #InterfazTest
	instanceVariableNames: 'testObjectsFactory laInterfaz authenticatorBehavior debitBehavior clockBehavior'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #InterfazTest category: 'TusLibros' stamp: 'MO 11/7/2022 12:22:33'!
InterfazTestSuite subclass: #InterfazTest
	instanceVariableNames: 'testObjectsFactory laInterfaz authenticatorBehavior debitBehavior clockBehavior'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 12:24:08' prior: 50562388!
test15CannotListPurchasesIfAuthenticationFails

	authenticatorBehavior := [ :anUser :anPassword | false ].
	
	self 
		should: [ laInterfaz listPurchasesOf: 'user' withPassword: 'pass']
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidLogInErrorDescription ]! !

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'MO 11/7/2022 12:24:10'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/7/2022 12:24:10'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/7/2022 12:24:10'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/7/2022 12:24:10'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'MO 11/7/2022 12:24:10'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'MO 11/7/2022 12:24:10'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'MO 11/7/2022 12:24:10'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'MO 11/7/2022 12:24:10'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'MO 11/7/2022 12:24:10'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'MO 11/7/2022 12:24:10'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'MO 11/7/2022 12:24:10'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'MO 11/7/2022 12:24:10'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'MO 11/7/2022 12:24:10'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'MO 11/7/2022 12:24:10'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'MO 11/7/2022 12:24:10'!
PASSED!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'MO 11/7/2022 12:24:10'!
PASSED!

!testRun: #InterfazTest #test16ListPurchasesWithoutSalesReturnsEmptyCollection stamp: 'MO 11/7/2022 12:24:11'!
PASSED!

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'MO 11/7/2022 12:24:11'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 12:24:30' prior: 50562607!
test16ListPurchasesWithoutSalesReturnsEmptyCollection

	| purchases |
	
	purchases := laInterfaz listPurchasesOf: 'user' withPassword: 'pass'.
	
	self assert: purchases isEmpty.! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 12:24:58' prior: 50563365!
test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale

	| purchases aDate changoID aSalesBook aSaleTotal |

	aDate  := Month month: 4 year: 2050.
	aSalesBook := OrderedCollection new.

	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	aSaleTotal := laInterfaz checkOutCart: changoID withCard: 1234123412341234 expiringOn: aDate withOwner: 'Owner' registeringOn: aSalesBook.

	purchases := laInterfaz listPurchasesOf: 'user' withPassword: 'pass'.

	self assert: purchases size > 0.
	self assert: purchases first = testObjectsFactory otherItemSellByTheStore.
	self assert: purchases second = 0.
	self assert: purchases third = testObjectsFactory itemSellByTheStore.
	self assert: purchases fourth = 1.
	self assert: purchases last = testObjectsFactory itemSellByTheStorePrice.! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 12:26:34' prior: 50564584!
test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale

	| purchases aDate changoID aSalesBook |

	aDate  := Month month: 4 year: 2050.
	aSalesBook := OrderedCollection new.

	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	laInterfaz checkOutCart: changoID withCard: 1234123412341234 expiringOn: aDate withOwner: 'Owner' registeringOn: aSalesBook.

	purchases := laInterfaz listPurchasesOf: 'user' withPassword: 'pass'.

	self assert: purchases size > 0.
	self assert: purchases first = testObjectsFactory otherItemSellByTheStore.
	self assert: purchases second = 0.
	self assert: purchases third = testObjectsFactory itemSellByTheStore.
	self assert: purchases fourth = 1.
	self assert: purchases last = testObjectsFactory itemSellByTheStorePrice.! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 12:26:46' prior: 50564615!
test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale

	| purchases aMonth changoID aSalesBook |

	aMonth  := Month month: 4 year: 2050.
	aSalesBook := OrderedCollection new.

	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	laInterfaz checkOutCart: changoID withCard: 1234123412341234 expiringOn: aMonth withOwner: 'Owner' registeringOn: aSalesBook.

	purchases := laInterfaz listPurchasesOf: 'user' withPassword: 'pass'.

	self assert: purchases size > 0.
	self assert: purchases first = testObjectsFactory otherItemSellByTheStore.
	self assert: purchases second = 0.
	self assert: purchases third = testObjectsFactory itemSellByTheStore.
	self assert: purchases fourth = 1.
	self assert: purchases last = testObjectsFactory itemSellByTheStorePrice.! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 12:27:05' prior: 50562069!
test13CheckOutACartWithInvalidNumberedCardRaisesException
	| aMonth changoID aSalesBook |
	
	aMonth  := Month month: 4 year: 2050.
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 2.
	aSalesBook := OrderedCollection new.
	
	self 
		should: [ laInterfaz checkOutCart: changoID withCard: 1 expiringOn: aMonth withOwner: 'user' registeringOn: aSalesBook ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = CreditCard invalidCardNumberErrorDescription.
			self assert: aSalesBook isEmpty. ]! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 12:27:08' prior: 50564676!
test13CheckOutACartWithInvalidNumberedCardRaisesException
	
	| aMonth changoID aSalesBook |
	
	aMonth  := Month month: 4 year: 2050.
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 2.
	aSalesBook := OrderedCollection new.
	
	self 
		should: [ laInterfaz checkOutCart: changoID withCard: 1 expiringOn: aMonth withOwner: 'user' registeringOn: aSalesBook ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = CreditCard invalidCardNumberErrorDescription.
			self assert: aSalesBook isEmpty. ]! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 12:27:22' prior: 50562025!
test11CheckOutACartWithInvalidIDRaisesException

	|aMonth aSalesBook |
	
	aMonth  := Month month: 4 year: 2023 .
	aSalesBook := OrderedCollection new.
	
	self 
		should: [laInterfaz checkOutCart: 0 withCard: 1234567812345678 expiringOn: aMonth withOwner: 'Mariano Oca' registeringOn: aSalesBook ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidCartIDErrorDescription.
			self assert: aSalesBook isEmpty ]! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 12:27:31' prior: 50564722!
test11CheckOutACartWithInvalidIDRaisesException

	| aMonth aSalesBook |
	
	aMonth  := Month month: 4 year: 2023.
	aSalesBook := OrderedCollection new.
	
	self 
		should: [laInterfaz checkOutCart: 0 withCard: 1234567812345678 expiringOn: aMonth withOwner: 'Mariano Oca' registeringOn: aSalesBook ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidCartIDErrorDescription.
			self assert: aSalesBook isEmpty ]! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 12:27:41' prior: 50562042!
test12CheckOutACartWithExpiredCardRaisesException

	|aMonth changoID aSalesBook |
	
	aMonth  := Month month: 4 year: 1998.
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 2.
	aSalesBook := OrderedCollection new.
	
	self 
		should: [laInterfaz checkOutCart: changoID withCard: 1234567812345678 expiringOn: aMonth withOwner: 'user' registeringOn: aSalesBook ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cashier canNotChargeAnExpiredCreditCardErrorMessage.
			self assert: aSalesBook isEmpty. ]! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 12:27:44' prior: 50564756!
test12CheckOutACartWithExpiredCardRaisesException

	| aMonth changoID aSalesBook |
	
	aMonth  := Month month: 4 year: 1998.
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 2.
	aSalesBook := OrderedCollection new.
	
	self 
		should: [laInterfaz checkOutCart: changoID withCard: 1234567812345678 expiringOn: aMonth withOwner: 'user' registeringOn: aSalesBook ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cashier canNotChargeAnExpiredCreditCardErrorMessage.
			self assert: aSalesBook isEmpty. ]! !

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'MO 11/7/2022 12:28:06'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/7/2022 12:28:09'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/7/2022 12:28:09'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/7/2022 12:28:09'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'MO 11/7/2022 12:28:09'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'MO 11/7/2022 12:28:09'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'MO 11/7/2022 12:28:09'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'MO 11/7/2022 12:28:09'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'MO 11/7/2022 12:28:09'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'MO 11/7/2022 12:28:09'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'MO 11/7/2022 12:28:09'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'MO 11/7/2022 12:28:09'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'MO 11/7/2022 12:28:09'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'MO 11/7/2022 12:28:09'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'MO 11/7/2022 12:28:10'!
PASSED!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'MO 11/7/2022 12:28:10'!
PASSED!

!testRun: #InterfazTest #test16ListPurchasesWithoutSalesReturnsEmptyCollection stamp: 'MO 11/7/2022 12:28:10'!
PASSED!

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'MO 11/7/2022 12:28:10'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 12:32:14' prior: 50564645!
test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale

	| purchases aMonth changoID aSalesBook |

	aMonth  := Month month: 4 year: 2050.
	aSalesBook := OrderedCollection new.

	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	laInterfaz checkOutCart: changoID withCard: 1234123412341234 expiringOn: aMonth withOwner: 'Owner' registeringOn: aSalesBook.

	purchases := laInterfaz listPurchasesOf: 'user' withPassword: 'pass'.

	self assert: purchases size equals: 5.
	self assert: purchases first = testObjectsFactory otherItemSellByTheStore.
	self assert: purchases second = 0.
	self assert: purchases third = testObjectsFactory itemSellByTheStore.
	self assert: purchases fourth = 1.
	self assert: purchases last = testObjectsFactory itemSellByTheStorePrice.! !

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'MO 11/7/2022 12:32:15'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/7/2022 12:32:15'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/7/2022 12:32:15'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/7/2022 12:32:15'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'MO 11/7/2022 12:32:15'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'MO 11/7/2022 12:32:15'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'MO 11/7/2022 12:32:15'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'MO 11/7/2022 12:32:15'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'MO 11/7/2022 12:32:15'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'MO 11/7/2022 12:32:15'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'MO 11/7/2022 12:32:15'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'MO 11/7/2022 12:32:15'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'MO 11/7/2022 12:32:15'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'MO 11/7/2022 12:32:15'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'MO 11/7/2022 12:32:15'!
PASSED!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'MO 11/7/2022 12:32:15'!
PASSED!

!testRun: #InterfazTest #test16ListPurchasesWithoutSalesReturnsEmptyCollection stamp: 'MO 11/7/2022 12:32:15'!
PASSED!

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'MO 11/7/2022 12:32:15'!
PASSED!
!Interfaz methodsFor: 'assertions' stamp: 'MO 11/7/2022 12:33:49' prior: 50557103!
assertValidCart: aChangoID

	(cartIDtoCart includesKey: aChangoID) ifFalse: [ self error: self class invalidCartIDErrorDescription ].
	
	"acá voy a chequear el tiempo, pero todavía no jijiji"! !
!Cart methodsFor: 'initialization' stamp: 'MO 11/7/2022 12:41:51' prior: 50552308!
initializeAcceptingItemsOf: aCatalog

	catalog := aCatalog.
	items := Bag new.! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'MO 11/7/2022 12:41:53'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'MO 11/7/2022 12:41:53'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'MO 11/7/2022 12:41:53'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'MO 11/7/2022 12:41:53'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'MO 11/7/2022 12:41:53'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'MO 11/7/2022 12:41:53'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'MO 11/7/2022 12:41:53'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'MO 11/7/2022 12:41:54'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'MO 11/7/2022 12:41:56'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'MO 11/7/2022 12:41:56'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'MO 11/7/2022 12:41:56'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'MO 11/7/2022 12:41:57'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'MO 11/7/2022 12:41:57'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'MO 11/7/2022 12:41:57'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'MO 11/7/2022 12:41:57'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'MO 11/7/2022 12:41:57'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'MO 11/7/2022 12:41:58'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'MO 11/7/2022 12:41:58'!
ERROR!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'MO 11/7/2022 12:41:58'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'MO 11/7/2022 12:41:58'!
ERROR!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'MO 11/7/2022 12:41:58'!
ERROR!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'MO 11/7/2022 12:41:58'!
FAILURE!
!Cart methodsFor: 'initialization' stamp: 'HernanWilkinson 6/17/2013 17:48' prior: 50564974!
initializeAcceptingItemsOf: aCatalog

	catalog := aCatalog.
	items := OrderedCollection new.! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'MO 11/7/2022 12:42:26'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'MO 11/7/2022 12:42:26'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'MO 11/7/2022 12:42:26'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'MO 11/7/2022 12:42:26'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'MO 11/7/2022 12:42:26'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'MO 11/7/2022 12:42:26'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'MO 11/7/2022 12:42:26'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'MO 11/7/2022 12:42:26'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'MO 11/7/2022 12:42:28'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'MO 11/7/2022 12:42:28'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'MO 11/7/2022 12:42:28'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'MO 11/7/2022 12:42:28'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'MO 11/7/2022 12:42:28'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'MO 11/7/2022 12:42:28'!
PASSED!

!testRun: #CreditCardTest #test01CannotCreateCardWithInvalidNumber stamp: 'MO 11/7/2022 12:42:30'!
PASSED!

!testRun: #CreditCardTest #test02CannotCreateCardWithEmptyOwner stamp: 'MO 11/7/2022 12:42:30'!
PASSED!

!testRun: #CreditCardTest #test03CardCreatedWithValidNumberAndOwnerStoresCorrectInfo stamp: 'MO 11/7/2022 12:42:30'!
PASSED!
!Cashier methodsFor: 'checkout' stamp: 'MO 11/7/2022 12:43:07' prior: 50563211!
saleSummary

	| saleSummary |
	
	saleSummary := OrderedCollection new.
	cart catalog keysDo: [ :book |
		(cart includes: book) ifTrue: [
			saleSummary add: book.
			saleSummary add: (cart items occurrencesOf: book)]
		].
	saleSummary add: cart total.
	^saleSummary.! !
!Cashier methodsFor: 'checkout' stamp: 'MO 11/7/2022 12:45:19' prior: 50565112!
saleSummary

	| saleSummary |
	
	saleSummary := OrderedCollection new.
	
	self collectBoksAndOcurrencesOn saleSummary.
	saleSummary add: cart total.
	
	^ saleSummary.! !
!Cashier methodsFor: 'checkout - private' stamp: 'MO 11/7/2022 12:47:30'!
collectBoksAndOcurrencesOn: aSaleSummary

	cart catalog keysDo: [ :book |
		(cart includes: book) ifTrue: [
			aSaleSummary add: book.
			aSaleSummary add: (cart items occurrencesOf: book)]
		].! !
!Cashier methodsFor: 'checkout - private' stamp: 'MO 11/7/2022 12:47:44'!
collectBooksAndOcurrencesOn: aSaleSummary

	cart catalog keysDo: [ :book |
		(cart includes: book) ifTrue: [
			aSaleSummary add: book.
			aSaleSummary add: (cart items occurrencesOf: book)]
		].! !

!methodRemoval: Cashier #collectBoksAndOcurrencesOn: stamp: 'MO 11/7/2022 12:47:44'!
collectBoksAndOcurrencesOn: aSaleSummary

	cart catalog keysDo: [ :book |
		(cart includes: book) ifTrue: [
			aSaleSummary add: book.
			aSaleSummary add: (cart items occurrencesOf: book)]
		].!
!Cashier methodsFor: 'checkout - private' stamp: 'MO 11/7/2022 12:48:24' prior: 50565140!
collectBooksAndOcurrencesOn: aSaleSummary

	cart catalog keysDo: [ :book |
		(cart includes: book) ifTrue: [
			aSaleSummary add: book.
			aSaleSummary add: (cart items occurrencesOf: book)]
		]! !
!Cashier methodsFor: 'checkout' stamp: 'MO 11/7/2022 12:48:46' prior: 50565123!
saleSummary

	| saleSummary |
	
	saleSummary := OrderedCollection new.
	
	self collectBooksAndOcurrencesOn: saleSummary.
	saleSummary add: cart total.
	
	^ saleSummary.! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 12:49:15' prior: 50564868!
test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale

	| purchases aMonth changoID aSalesBook |

	aMonth  := Month month: 4 year: 2050.
	aSalesBook := OrderedCollection new.

	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	laInterfaz checkOutCart: changoID withCard: 1234123412341234 expiringOn: aMonth withOwner: 'Owner' registeringOn: aSalesBook.

	purchases := laInterfaz listPurchasesOf: 'user' withPassword: 'pass'.

	self assert: purchases size equals: 3.
	self assert: purchases third = testObjectsFactory itemSellByTheStore.
	self assert: purchases fourth = 1.
	self assert: purchases last = testObjectsFactory itemSellByTheStorePrice.! !

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'MO 11/7/2022 12:49:16'!
FAILURE!

!testRun: #InterfazTest #test16ListPurchasesWithoutSalesReturnsEmptyCollection stamp: 'MO 11/7/2022 12:49:33'!
PASSED!

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'MO 11/7/2022 12:49:35'!
FAILURE!

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'MO 11/7/2022 12:49:35'!
FAILURE!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 12:49:46' prior: 50565175!
test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale

	| purchases aMonth changoID aSalesBook |

	aMonth  := Month month: 4 year: 2050.
	aSalesBook := OrderedCollection new.

	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	laInterfaz checkOutCart: changoID withCard: 1234123412341234 expiringOn: aMonth withOwner: 'Owner' registeringOn: aSalesBook.

	purchases := laInterfaz listPurchasesOf: 'user' withPassword: 'pass'.

	"self assert: purchases size equals: 3.
	self assert: purchases third = testObjectsFactory itemSellByTheStore.
	self assert: purchases fourth = 1.
	self assert: purchases last = testObjectsFactory itemSellByTheStorePrice."! !

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'MO 11/7/2022 12:49:49'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/7/2022 12:49:49'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/7/2022 12:49:49'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/7/2022 12:49:50'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'MO 11/7/2022 12:49:50'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'MO 11/7/2022 12:49:50'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'MO 11/7/2022 12:49:50'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'MO 11/7/2022 12:49:50'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'MO 11/7/2022 12:49:50'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'MO 11/7/2022 12:49:50'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'MO 11/7/2022 12:49:50'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'MO 11/7/2022 12:49:50'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'MO 11/7/2022 12:49:50'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'MO 11/7/2022 12:49:50'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'MO 11/7/2022 12:49:50'!
PASSED!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'MO 11/7/2022 12:49:50'!
PASSED!

!testRun: #InterfazTest #test16ListPurchasesWithoutSalesReturnsEmptyCollection stamp: 'MO 11/7/2022 12:49:50'!
PASSED!

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'MO 11/7/2022 12:49:50'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 12:49:59' prior: 50565218!
test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale

	| purchases aMonth changoID aSalesBook |

	aMonth  := Month month: 4 year: 2050.
	aSalesBook := OrderedCollection new.

	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	laInterfaz checkOutCart: changoID withCard: 1234123412341234 expiringOn: aMonth withOwner: 'Owner' registeringOn: aSalesBook.

	purchases := laInterfaz listPurchasesOf: 'user' withPassword: 'pass'.

	self assert: purchases size equals: 3.
	self assert: purchases third = testObjectsFactory itemSellByTheStore.
	self assert: purchases fourth = 1.
	self assert: purchases last = testObjectsFactory itemSellByTheStorePrice.! !

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'MO 11/7/2022 12:50:00'!
FAILURE!

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'MO 11/7/2022 12:50:03'!
FAILURE!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 12:50:19' prior: 50565311!
test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale

	| purchases aMonth changoID aSalesBook |

	aMonth  := Month month: 4 year: 2050.
	aSalesBook := OrderedCollection new.

	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	laInterfaz checkOutCart: changoID withCard: 1234123412341234 expiringOn: aMonth withOwner: 'Owner' registeringOn: aSalesBook.

	purchases := laInterfaz listPurchasesOf: 'user' withPassword: 'pass'.

	self assert: purchases size equals: 3.
	self assert: purchases third equals: testObjectsFactory itemSellByTheStore.
	self assert: purchases fourth equals: 1.
	self assert: purchases last equals: testObjectsFactory itemSellByTheStorePrice.! !

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'MO 11/7/2022 12:50:20'!
FAILURE!

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'MO 11/7/2022 12:50:34'!
FAILURE!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 12:51:04' prior: 50565346!
test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale

	| purchases aMonth changoID aSalesBook |

	aMonth  := Month month: 4 year: 2050.
	aSalesBook := OrderedCollection new.

	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	laInterfaz checkOutCart: changoID withCard: 1234123412341234 expiringOn: aMonth withOwner: 'Owner' registeringOn: aSalesBook.

	purchases := laInterfaz listPurchasesOf: 'user' withPassword: 'pass'.

	self assert: purchases size equals: 3.
	self assert: purchases first equals: testObjectsFactory itemSellByTheStore.
	self assert: purchases second equals: 1.
	self assert: purchases third equals: testObjectsFactory itemSellByTheStorePrice.! !

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'MO 11/7/2022 12:51:06'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/7/2022 12:51:06'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/7/2022 12:51:06'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/7/2022 12:51:06'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'MO 11/7/2022 12:51:06'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'MO 11/7/2022 12:51:06'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'MO 11/7/2022 12:51:06'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'MO 11/7/2022 12:51:06'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'MO 11/7/2022 12:51:06'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'MO 11/7/2022 12:51:06'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'MO 11/7/2022 12:51:06'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'MO 11/7/2022 12:51:06'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'MO 11/7/2022 12:51:06'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'MO 11/7/2022 12:51:06'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'MO 11/7/2022 12:51:06'!
PASSED!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'MO 11/7/2022 12:51:06'!
PASSED!

!testRun: #InterfazTest #test16ListPurchasesWithoutSalesReturnsEmptyCollection stamp: 'MO 11/7/2022 12:51:06'!
PASSED!

!testRun: #InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'MO 11/7/2022 12:51:06'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 12:51:51'!
test17ListPurchasesWithOneSaleReturnsACollectionWithThatSale

	| purchases aMonth changoID aSalesBook |

	aMonth  := Month month: 4 year: 2050.
	aSalesBook := OrderedCollection new.

	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	laInterfaz checkOutCart: changoID withCard: 1234123412341234 expiringOn: aMonth withOwner: 'Owner' registeringOn: aSalesBook.

	purchases := laInterfaz listPurchasesOf: 'user' withPassword: 'pass'.

	self assert: purchases size equals: 3.
	self assert: purchases first equals: testObjectsFactory itemSellByTheStore.
	self assert: purchases second equals: 1.
	self assert: purchases third equals: testObjectsFactory itemSellByTheStorePrice.! !

!methodRemoval: InterfazTest #test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale stamp: 'MO 11/7/2022 12:51:52'!
test17ListPurchasesWithoutOneSaleReturnsACollectionWithThatSale

	| purchases aMonth changoID aSalesBook |

	aMonth  := Month month: 4 year: 2050.
	aSalesBook := OrderedCollection new.

	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	laInterfaz checkOutCart: changoID withCard: 1234123412341234 expiringOn: aMonth withOwner: 'Owner' registeringOn: aSalesBook.

	purchases := laInterfaz listPurchasesOf: 'user' withPassword: 'pass'.

	self assert: purchases size equals: 3.
	self assert: purchases first equals: testObjectsFactory itemSellByTheStore.
	self assert: purchases second equals: 1.
	self assert: purchases third equals: testObjectsFactory itemSellByTheStorePrice.!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 13:06:09'!
test18ListPurchasesWithVaroiuosItemsReturnsACollectionCorrectly

	| purchases aMonth changoID aSalesBook |

	aMonth  := Month month: 4 year: 2050.
	aSalesBook := OrderedCollection new.

	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	laInterfaz addToCart: changoID book: (testObjectsFactory otherItemSellByTheStore) quantity: 2.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 3.
	laInterfaz checkOutCart: changoID withCard: 1234123412341234 expiringOn: aMonth withOwner: 'Owner' registeringOn: aSalesBook.

	purchases := laInterfaz listPurchasesOf: 'user' withPassword: 'pass'.

	self assert: purchases size equals: 5.
	self assert: purchases first equals: testObjectsFactory otherItemSellByTheStore.
	self assert: purchases second equals: 2.
	self assert: purchases third equals: testObjectsFactory itemSellByTheStore.
	self assert: purchases fourth equals: 4.
	self assert: purchases fifth equals: testObjectsFactory itemSellByTheStorePrice.! !

!testRun: #InterfazTest #test18ListPurchasesWithVaroiuosItemsReturnsACollectionCorrectly stamp: 'MO 11/7/2022 13:06:12'!
FAILURE!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 13:08:00' prior: 50565531!
test18ListPurchasesWithVaroiuosItemsReturnsACollectionCorrectly

	| purchases aMonth changoID aSalesBook totalSpended |

	aMonth  := Month month: 4 year: 2050.
	aSalesBook := OrderedCollection new.

	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	laInterfaz addToCart: changoID book: (testObjectsFactory otherItemSellByTheStore) quantity: 2.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 3.
	totalSpended := laInterfaz checkOutCart: changoID withCard: 1234123412341234 expiringOn: aMonth withOwner: 'Owner' registeringOn: aSalesBook.

	purchases := laInterfaz listPurchasesOf: 'user' withPassword: 'pass'.

	self assert: purchases size equals: 5.
	self assert: purchases first equals: testObjectsFactory otherItemSellByTheStore.
	self assert: purchases second equals: 2.
	self assert: purchases third equals: testObjectsFactory itemSellByTheStore.
	self assert: purchases fourth equals: 4.
	self assert: purchases fifth equals: totalSpended.! !

!testRun: #InterfazTest #test18ListPurchasesWithVaroiuosItemsReturnsACollectionCorrectly stamp: 'MO 11/7/2022 13:08:36'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/7/2022 13:08:37'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/7/2022 13:08:37'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/7/2022 13:08:37'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'MO 11/7/2022 13:08:37'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'MO 11/7/2022 13:08:37'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'MO 11/7/2022 13:08:37'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'MO 11/7/2022 13:08:37'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'MO 11/7/2022 13:08:37'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'MO 11/7/2022 13:08:37'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'MO 11/7/2022 13:08:37'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'MO 11/7/2022 13:08:37'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'MO 11/7/2022 13:08:37'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'MO 11/7/2022 13:08:37'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'MO 11/7/2022 13:08:37'!
PASSED!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'MO 11/7/2022 13:08:37'!
PASSED!

!testRun: #InterfazTest #test16ListPurchasesWithoutSalesReturnsEmptyCollection stamp: 'MO 11/7/2022 13:08:37'!
PASSED!

!testRun: #InterfazTest #test17ListPurchasesWithOneSaleReturnsACollectionWithThatSale stamp: 'MO 11/7/2022 13:08:37'!
PASSED!

!testRun: #InterfazTest #test18ListPurchasesWithVaroiuosItemsReturnsACollectionCorrectly stamp: 'MO 11/7/2022 13:08:37'!
PASSED!

|x|
x := Time dateAndTimeNow.
x!

x!

|x|
x := Time dateAndTimeNow.
x minute!

|x|
x := Time dateAndTimeNow.
x minute!

DateAndTime!

Time!

x minute!

|x|
x := DateAndTime now.
x minute!

|x|
x := DateAndTime now.
x !

|x|
x := DateAndTime now.
x  second!

|x|
x := DateAndTime now.
x hour!

|x|
x := DateAndTime now.
x + x hour!

|x|
x := DateAndTime now.
x + (x hour)!

|x|
x := DateAndTime now + 30 * minute.
x!

|x|
x := 30 * minute.
x!

minute!

minute!

day!

day!

|x|
x := 30 * minute + 30 * minute.
x!

|x|
x := (30 * minute) + (30 * minute).
x!

|x|
x := (30 * minute) + (30 * minute).
x = 1 *hour!

|x|
x := (30 * minute) + (30 * minute).
x = (1 * hour)!

|x|
x := Time now + (30 * minute).
x  !

x := (Time dateAndTimeNow) + (30 * minute).!

|x|
x := (Time dateAndTimeNow) + (30 * minute).
x  !

|x|
x := (Time now) + (30 * minute).
x  !

|x|
x := (DateAndTime now) + (30 * minute).
x  !

|x|
x := (DateAndTime now) + (30 * minute).
x  !

|x|
x := (DateAndTime now) + (30 * minute).
x  !

!classDefinition: #InterfazTest category: 'TusLibros' stamp: 'MO 11/7/2022 14:18:14'!
InterfazTestSuite subclass: #InterfazTest
	instanceVariableNames: 'testObjectsFactory laInterfaz authenticatorBehavior debitBehavior clockBehavior clock'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!InterfazTest methodsFor: 'clock protocol' stamp: 'MO 11/7/2022 14:18:11'!
clock

	^ clock! !

InterfazTestSuite subclass: #InterfazTest
	instanceVariableNames: 'testObjectsFactory laInterfaz authenticatorBehavior debitBehavior clock'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #InterfazTest category: 'TusLibros' stamp: 'MO 11/7/2022 14:18:27'!
InterfazTestSuite subclass: #InterfazTest
	instanceVariableNames: 'testObjectsFactory laInterfaz authenticatorBehavior debitBehavior clock'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!InterfazTest methodsFor: 'setUp' stamp: 'MO 11/7/2022 14:19:06' prior: 50563950 overrides: 16961394!
setUp 

	testObjectsFactory := StoreTestObjectsFactory new.
	authenticatorBehavior := [ :aUser :aPassword | true ].
	debitBehavior := [ :anAmount :aCreditCard | ].
	clock := DateAndTime now.
	
	laInterfaz := testObjectsFactory createInterfaz: self.! !

|x|
x := DateAndTime now.
x  time!

|x|
x := DateAndTime now.
(x time) + (30 minute)!

|x|
x := DateAndTime now.
(x time) + (30 * minute)!

|x|
x := DateAndTime now.
(x time) + (30 * minute).
x!

x time!

DateAndTime!

|x|
x := DateAndTime now.
(x time) + (30 * second)!

|x|
x := DateAndTime now + Duration minutes: 30!

DateAndTime now + (Duration minutes: 30)!

DateAndTime now!

DateAndTime now !

DateAndTime now + (Duration minutes: 30)!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 14:40:11'!
test20CanNotAddToCartIfExpired

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	clock := DateAndTime now + (Duration minutes: 30).
	
	self 
		should: [ laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 69 ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz cartExpiredErrorDescription.
			self assert: (laInterfaz listCart: changoID) isEmpty ]! !
!StoreTestObjectsFactory methodsFor: 'interfaz' stamp: 'MO 11/7/2022 14:42:00' prior: 50564473!
createInterfaz: aSimulator
	
	^ Interfaz withAuthenticator: aSimulator withCatalog: self defaultCatalog withMerchantProcessor: aSimulator withClock: aSimulator clock! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 14:45:41' prior: 50565765!
test20CanNotAddToCartIfExpired

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	clock := DateAndTime now + (Duration minutes: 31).
	
	self 
		should: [ laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 69 ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz cartExpiredErrorDescription.
			self assert: (laInterfaz listCart: changoID) isEmpty ]! !

!testRun: #InterfazTest #test20CanNotAddToCartIfExpired stamp: 'MO 11/7/2022 14:45:47'!
FAILURE!

Object subclass: #Cart
	instanceVariableNames: 'catalog items lastModificationTime'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Cart category: 'TusLibros' stamp: 'MO 11/7/2022 14:47:46'!
Object subclass: #Cart
	instanceVariableNames: 'catalog items lastModificationTime'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Cart methodsFor: 'initialization' stamp: 'MO 11/7/2022 14:50:32'!
initializeAcceptingItemsOf: aCatalog on: aTime

	catalog := aCatalog.
	items := OrderedCollection new.
	lastModificationTime := aTime copy.! !
!Cart class methodsFor: 'instance creation' stamp: 'MO 11/7/2022 14:50:47'!
acceptingItemsOf: aCatalog on: aTime

	^self new initializeAcceptingItemsOf: aCatalog on: aTime! !
!Cart methodsFor: 'adding' stamp: 'MO 11/7/2022 14:52:44'!
add: aQuantity of: anItem on: aTime

	self assertIsValidQuantity: aQuantity.
	self assertIsValidItem: anItem.
	lastModificationTime := aTime copy.

	1 to: aQuantity do: [ :aNumber | items add: anItem ]! !
!Cart methodsFor: 'queries' stamp: 'MO 11/7/2022 14:53:10'!
lastModificationTime

	^ lastModificationTime copy! !

|x y|
x := DateAndTime now.
y := DateAndTime now + (Duration minutes: 30).
x - y!

|x y|
x := DateAndTime now.
y := DateAndTime now + (Duration minutes: 30).
(x - y) < (Duration minutes: 30)!

|x y|
x := DateAndTime now.
y := DateAndTime now + (Duration minutes: 30).
(x - y) > (Duration minutes: 30)!

|x y|
x := DateAndTime now.
y := DateAndTime now + (Duration minutes: 30).
(y - x) < (Duration minutes: 30)!

|x y|
x := DateAndTime now.
y := DateAndTime now + (Duration minutes: 29).
(y - x) < (Duration minutes: 30) !

|x y|
x := DateAndTime now.
y := DateAndTime now + (Duration minutes: 30).
(y - x) < (Duration minutes: 30) !
!Interfaz methodsFor: 'assertions' stamp: 'MO 11/7/2022 15:01:05' prior: 50564965!
assertValidCart: aChangoID

	(cartIDtoCart includesKey: aChangoID) ifFalse: [ self error: self class invalidCartIDErrorDescription ].
	
	((clock - ((cartIDtoCart at: aChangoID) lastModificationTime)) < (Duration minutes: 30)) ifFalse: [ self error: self class cartExpiredErrorDescription ].! !
!Interfaz class methodsFor: 'error descriptions' stamp: 'MO 11/7/2022 15:01:40'!
cartExpiredErrorDescription

	^ 'estas hace una banda con el changuito abandonado, ya lo regalamos'! !

!testRun: #InterfazTest #test20CanNotAddToCartIfExpired stamp: 'MO 11/7/2022 15:01:48'!
FAILURE!

!testRun: #InterfazTest #test18ListPurchasesWithVaroiuosItemsReturnsACollectionCorrectly stamp: 'MO 11/7/2022 15:02:07'!
ERROR!

!testRun: #InterfazTest #test18ListPurchasesWithVaroiuosItemsReturnsACollectionCorrectly stamp: 'MO 11/7/2022 15:02:07'!
ERROR!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/7/2022 15:02:43'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/7/2022 15:02:45'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/7/2022 15:02:47'!
ERROR!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/7/2022 15:02:47'!
ERROR!
!Interfaz methodsFor: 'operations' stamp: 'MO 11/7/2022 15:04:00' prior: 50563443!
createCartForUser: aUserID withPassword: aPassword
	
	self assertValid: aUserID with: aPassword.
	
	cartIDtoCart at: cartIDManager put: (Cart acceptingItemsOf: catalog on: clock).
	
	cartIDManager := cartIDManager + 1.
	
	^ cartIDManager - 1! !

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/7/2022 15:04:13'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/7/2022 15:04:14'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'MO 11/7/2022 15:04:16'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/7/2022 15:04:19'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/7/2022 15:04:19'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/7/2022 15:04:19'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'MO 11/7/2022 15:04:19'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'MO 11/7/2022 15:04:19'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'MO 11/7/2022 15:04:19'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'MO 11/7/2022 15:04:19'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'MO 11/7/2022 15:04:19'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'MO 11/7/2022 15:04:19'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'MO 11/7/2022 15:04:19'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'MO 11/7/2022 15:04:19'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'MO 11/7/2022 15:04:19'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'MO 11/7/2022 15:04:19'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'MO 11/7/2022 15:04:19'!
PASSED!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'MO 11/7/2022 15:04:19'!
PASSED!

!testRun: #InterfazTest #test16ListPurchasesWithoutSalesReturnsEmptyCollection stamp: 'MO 11/7/2022 15:04:19'!
PASSED!

!testRun: #InterfazTest #test17ListPurchasesWithOneSaleReturnsACollectionWithThatSale stamp: 'MO 11/7/2022 15:04:19'!
PASSED!

!testRun: #InterfazTest #test18ListPurchasesWithVaroiuosItemsReturnsACollectionCorrectly stamp: 'MO 11/7/2022 15:04:19'!
PASSED!

!testRun: #InterfazTest #test20CanNotAddToCartIfExpired stamp: 'MO 11/7/2022 15:04:19'!
FAILURE!

!testRun: #InterfazTest #test20CanNotAddToCartIfExpired stamp: 'MO 11/7/2022 15:04:19'!
FAILURE!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'MO 11/7/2022 15:04:26'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'MO 11/7/2022 15:04:28'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'MO 11/7/2022 15:04:30'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'MO 11/7/2022 15:04:32'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'MO 11/7/2022 15:04:34'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'MO 11/7/2022 15:04:35'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 15:04:46' prior: 50565791!
test20CanNotAddToCartIfExpired

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	clock := DateAndTime now + (Duration minutes: 31).
	
	"self 
		should: [ laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 69 ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz cartExpiredErrorDescription.
			self assert: (laInterfaz listCart: changoID) isEmpty ]"! !

!testRun: #InterfazTest #test20CanNotAddToCartIfExpired stamp: 'MO 11/7/2022 15:04:49'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/7/2022 15:04:49'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/7/2022 15:04:49'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/7/2022 15:04:49'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'MO 11/7/2022 15:04:49'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'MO 11/7/2022 15:04:49'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'MO 11/7/2022 15:04:49'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'MO 11/7/2022 15:04:50'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'MO 11/7/2022 15:04:50'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'MO 11/7/2022 15:04:50'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'MO 11/7/2022 15:04:50'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'MO 11/7/2022 15:04:50'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'MO 11/7/2022 15:04:50'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'MO 11/7/2022 15:04:50'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'MO 11/7/2022 15:04:50'!
PASSED!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'MO 11/7/2022 15:04:50'!
PASSED!

!testRun: #InterfazTest #test16ListPurchasesWithoutSalesReturnsEmptyCollection stamp: 'MO 11/7/2022 15:04:50'!
PASSED!

!testRun: #InterfazTest #test17ListPurchasesWithOneSaleReturnsACollectionWithThatSale stamp: 'MO 11/7/2022 15:04:50'!
PASSED!

!testRun: #InterfazTest #test18ListPurchasesWithVaroiuosItemsReturnsACollectionCorrectly stamp: 'MO 11/7/2022 15:04:50'!
PASSED!

!testRun: #InterfazTest #test20CanNotAddToCartIfExpired stamp: 'MO 11/7/2022 15:04:50'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 15:05:01' prior: 50566028!
test20CanNotAddToCartIfExpired

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	clock := DateAndTime now + (Duration minutes: 31).
	
	self 
		should: [ laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 69 ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz cartExpiredErrorDescription.
			self assert: (laInterfaz listCart: changoID) isEmpty ]! !

!testRun: #InterfazTest #test20CanNotAddToCartIfExpired stamp: 'MO 11/7/2022 15:05:02'!
FAILURE!

!testRun: #InterfazTest #test20CanNotAddToCartIfExpired stamp: 'MO 11/7/2022 15:06:52'!
FAILURE!

!testRun: #InterfazTest #test20CanNotAddToCartIfExpired stamp: 'MO 11/7/2022 15:07:08'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/7/2022 15:07:22'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/7/2022 15:07:22'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/7/2022 15:07:22'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'MO 11/7/2022 15:07:22'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'MO 11/7/2022 15:07:22'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'MO 11/7/2022 15:07:22'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'MO 11/7/2022 15:07:22'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'MO 11/7/2022 15:07:22'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'MO 11/7/2022 15:07:22'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'MO 11/7/2022 15:07:22'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'MO 11/7/2022 15:07:22'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'MO 11/7/2022 15:07:22'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'MO 11/7/2022 15:07:23'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'MO 11/7/2022 15:07:23'!
PASSED!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'MO 11/7/2022 15:07:23'!
PASSED!

!testRun: #InterfazTest #test16ListPurchasesWithoutSalesReturnsEmptyCollection stamp: 'MO 11/7/2022 15:07:23'!
PASSED!

!testRun: #InterfazTest #test17ListPurchasesWithOneSaleReturnsACollectionWithThatSale stamp: 'MO 11/7/2022 15:07:23'!
PASSED!

!testRun: #InterfazTest #test18ListPurchasesWithVaroiuosItemsReturnsACollectionCorrectly stamp: 'MO 11/7/2022 15:07:23'!
PASSED!

!testRun: #InterfazTest #test20CanNotAddToCartIfExpired stamp: 'MO 11/7/2022 15:07:23'!
FAILURE!

!testRun: #InterfazTest #test20CanNotAddToCartIfExpired stamp: 'MO 11/7/2022 15:07:23'!
FAILURE!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 15:08:01' prior: 50566118!
test20CanNotAddToCartIfExpired

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	clock := DateAndTime now + (Duration minutes: 31).
	
	self 
		should: [ laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1 ]
		raise: Error
		withExceptionDo: [ :anError |
			"self assert: anError messageText = Interfaz cartExpiredErrorDescription."
			self assert: (laInterfaz listCart: changoID) isEmpty ]! !

!testRun: #InterfazTest #test20CanNotAddToCartIfExpired stamp: 'MO 11/7/2022 15:08:01'!
FAILURE!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 15:08:21' prior: 50566217!
test20CanNotAddToCartIfExpired

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	clock := DateAndTime now + (Duration minutes: 31).
	
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.! !

!testRun: #InterfazTest #test20CanNotAddToCartIfExpired stamp: 'MO 11/7/2022 15:08:22'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/7/2022 15:08:22'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/7/2022 15:08:22'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/7/2022 15:08:22'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'MO 11/7/2022 15:08:22'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'MO 11/7/2022 15:08:22'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'MO 11/7/2022 15:08:22'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'MO 11/7/2022 15:08:22'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'MO 11/7/2022 15:08:22'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'MO 11/7/2022 15:08:22'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'MO 11/7/2022 15:08:22'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'MO 11/7/2022 15:08:22'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'MO 11/7/2022 15:08:22'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'MO 11/7/2022 15:08:22'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'MO 11/7/2022 15:08:22'!
PASSED!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'MO 11/7/2022 15:08:22'!
PASSED!

!testRun: #InterfazTest #test16ListPurchasesWithoutSalesReturnsEmptyCollection stamp: 'MO 11/7/2022 15:08:22'!
PASSED!

!testRun: #InterfazTest #test17ListPurchasesWithOneSaleReturnsACollectionWithThatSale stamp: 'MO 11/7/2022 15:08:22'!
PASSED!

!testRun: #InterfazTest #test18ListPurchasesWithVaroiuosItemsReturnsACollectionCorrectly stamp: 'MO 11/7/2022 15:08:22'!
PASSED!

!testRun: #InterfazTest #test20CanNotAddToCartIfExpired stamp: 'MO 11/7/2022 15:08:23'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 15:08:48' prior: 50566238!
test20CanNotAddToCartIfExpired

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	clock := DateAndTime now + (Duration minutes: 31).
	
	self 
		should: [ laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1 ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz cartExpiredErrorDescription.
			self assert: (laInterfaz listCart: changoID) isEmpty ]! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 15:09:52' prior: 50566321!
test20CanNotAddToCartIfExpired

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	clock := DateAndTime now + (Duration minutes: 31).
	
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1 .
	
	
	self 
		should: [ laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1 ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz cartExpiredErrorDescription.
			self assert: (laInterfaz listCart: changoID) isEmpty ]! !

!testRun: #InterfazTest #test20CanNotAddToCartIfExpired stamp: 'MO 11/7/2022 15:09:52'!
FAILURE!
!Interfaz methodsFor: 'assertions' stamp: 'MO 11/7/2022 15:11:41' prior: 50565869!
assertValidCart: aChangoID

	|xxx|

	(cartIDtoCart includesKey: aChangoID) ifFalse: [ self error: self class invalidCartIDErrorDescription ].
	
	xxx := ((cartIDtoCart at: aChangoID) lastModificationTime).
	
	((clock - xxx) < (Duration minutes: 30)) ifFalse: [ self error: self class cartExpiredErrorDescription ].! !
!Cart methodsFor: 'adding' stamp: 'MO 11/7/2022 15:14:08' prior: 50565835!
add: aQuantity of: anItem on: aTime

	self assertIsValidQuantity: aQuantity.
	self assertIsValidItem: anItem.
	lastModificationTime := aTime.

	1 to: aQuantity do: [ :aNumber | items add: anItem ]! !
!InterfazTest methodsFor: 'clock protocol' stamp: 'MO 11/7/2022 15:14:30' prior: 50565721!
clock

	^ clock copy! !

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/7/2022 15:14:41'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/7/2022 15:14:41'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/7/2022 15:14:41'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'MO 11/7/2022 15:14:41'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'MO 11/7/2022 15:14:41'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'MO 11/7/2022 15:14:41'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'MO 11/7/2022 15:14:41'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'MO 11/7/2022 15:14:41'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'MO 11/7/2022 15:14:41'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'MO 11/7/2022 15:14:42'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'MO 11/7/2022 15:14:42'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'MO 11/7/2022 15:14:42'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'MO 11/7/2022 15:14:42'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'MO 11/7/2022 15:14:42'!
PASSED!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'MO 11/7/2022 15:14:42'!
PASSED!

!testRun: #InterfazTest #test16ListPurchasesWithoutSalesReturnsEmptyCollection stamp: 'MO 11/7/2022 15:14:42'!
PASSED!

!testRun: #InterfazTest #test17ListPurchasesWithOneSaleReturnsACollectionWithThatSale stamp: 'MO 11/7/2022 15:14:42'!
PASSED!

!testRun: #InterfazTest #test18ListPurchasesWithVaroiuosItemsReturnsACollectionCorrectly stamp: 'MO 11/7/2022 15:14:42'!
PASSED!

!testRun: #InterfazTest #test20CanNotAddToCartIfExpired stamp: 'MO 11/7/2022 15:14:42'!
FAILURE!

!testRun: #InterfazTest #test20CanNotAddToCartIfExpired stamp: 'MO 11/7/2022 15:14:42'!
FAILURE!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 15:14:51' prior: 50566339!
test20CanNotAddToCartIfExpired

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	clock := DateAndTime now + (Duration minutes: 31).
	
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1 .
	
	self 
		should: [ laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1 ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz cartExpiredErrorDescription.
			self assert: (laInterfaz listCart: changoID) isEmpty ]! !

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/7/2022 15:14:52'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/7/2022 15:14:53'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/7/2022 15:14:53'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'MO 11/7/2022 15:14:53'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'MO 11/7/2022 15:14:53'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'MO 11/7/2022 15:14:53'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'MO 11/7/2022 15:14:53'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'MO 11/7/2022 15:14:53'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'MO 11/7/2022 15:14:53'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'MO 11/7/2022 15:14:53'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'MO 11/7/2022 15:14:53'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'MO 11/7/2022 15:14:53'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'MO 11/7/2022 15:14:53'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'MO 11/7/2022 15:14:53'!
PASSED!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'MO 11/7/2022 15:14:53'!
PASSED!

!testRun: #InterfazTest #test16ListPurchasesWithoutSalesReturnsEmptyCollection stamp: 'MO 11/7/2022 15:14:53'!
PASSED!

!testRun: #InterfazTest #test17ListPurchasesWithOneSaleReturnsACollectionWithThatSale stamp: 'MO 11/7/2022 15:14:53'!
PASSED!

!testRun: #InterfazTest #test18ListPurchasesWithVaroiuosItemsReturnsACollectionCorrectly stamp: 'MO 11/7/2022 15:14:53'!
PASSED!

!testRun: #InterfazTest #test20CanNotAddToCartIfExpired stamp: 'MO 11/7/2022 15:14:53'!
FAILURE!

!testRun: #InterfazTest #test20CanNotAddToCartIfExpired stamp: 'MO 11/7/2022 15:14:54'!
FAILURE!
!InterfazTest methodsFor: 'clock protocol' stamp: 'MO 11/7/2022 15:21:02' prior: 50566386!
clock

	^ clock! !

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/7/2022 15:22:25'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/7/2022 15:22:25'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/7/2022 15:22:25'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'MO 11/7/2022 15:22:25'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'MO 11/7/2022 15:22:25'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'MO 11/7/2022 15:22:25'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'MO 11/7/2022 15:22:25'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'MO 11/7/2022 15:22:25'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'MO 11/7/2022 15:22:25'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'MO 11/7/2022 15:22:25'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'MO 11/7/2022 15:22:25'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'MO 11/7/2022 15:22:25'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'MO 11/7/2022 15:22:26'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'MO 11/7/2022 15:22:26'!
PASSED!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'MO 11/7/2022 15:22:26'!
PASSED!

!testRun: #InterfazTest #test16ListPurchasesWithoutSalesReturnsEmptyCollection stamp: 'MO 11/7/2022 15:22:26'!
PASSED!

!testRun: #InterfazTest #test17ListPurchasesWithOneSaleReturnsACollectionWithThatSale stamp: 'MO 11/7/2022 15:22:26'!
PASSED!

!testRun: #InterfazTest #test18ListPurchasesWithVaroiuosItemsReturnsACollectionCorrectly stamp: 'MO 11/7/2022 15:22:26'!
PASSED!

!testRun: #InterfazTest #test20CanNotAddToCartIfExpired stamp: 'MO 11/7/2022 15:22:26'!
FAILURE!

!testRun: #InterfazTest #test20CanNotAddToCartIfExpired stamp: 'MO 11/7/2022 15:22:26'!
FAILURE!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 15:30:48' prior: 50566462!
test20CanNotAddToCartIfExpired

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	clock add: (Duration minutes: 31).
	
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1 .
	
	self 
		should: [ laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1 ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz cartExpiredErrorDescription.
			self assert: (laInterfaz listCart: changoID) isEmpty ]! !

!testRun: #InterfazTest #test20CanNotAddToCartIfExpired stamp: 'MO 11/7/2022 15:30:50'!
ERROR!
!Interfaz methodsFor: 'operations' stamp: 'MO 11/7/2022 15:35:33'!
setClock: aTime
	
	clock := aTime! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 15:14:51' prior: 50566630!
test20CanNotAddToCartIfExpired

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	clock := DateAndTime now + (Duration minutes: 31).
	
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1 .
	
	self 
		should: [ laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1 ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz cartExpiredErrorDescription.
			self assert: (laInterfaz listCart: changoID) isEmpty ]! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 15:36:58' prior: 50566657!
test20CanNotAddToCartIfExpired

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	"clock := DateAndTime now + (Duration minutes: 31). esto no anda así que lo voy a implementar por las malas"
	laInterfaz setClock: DateAndTime now + (Duration minutes: 31).
	
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1 .
	
	self 
		should: [ laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1 ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz cartExpiredErrorDescription.
			self assert: (laInterfaz listCart: changoID) isEmpty ]! !

!testRun: #InterfazTest #test20CanNotAddToCartIfExpired stamp: 'MO 11/7/2022 15:37:00'!
ERROR!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 15:37:24' prior: 50566678!
test20CanNotAddToCartIfExpired

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	"clock := DateAndTime now + (Duration minutes: 31). esto no anda así que lo voy a implementar por las malas"
	laInterfaz setClock: DateAndTime now + (Duration minutes: 31).
	
	self 
		should: [ laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1 ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz cartExpiredErrorDescription.
			self assert: (laInterfaz listCart: changoID) isEmpty ]! !

!testRun: #InterfazTest #test20CanNotAddToCartIfExpired stamp: 'MO 11/7/2022 15:37:25'!
ERROR!

!testRun: #InterfazTest #test20CanNotAddToCartIfExpired stamp: 'MO 11/7/2022 15:37:40'!
ERROR!

!testRun: #InterfazTest #test20CanNotAddToCartIfExpired stamp: 'MO 11/7/2022 15:38:26'!
ERROR!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 15:39:05' prior: 50566705!
test20CanNotAddToCartIfExpired

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	"clock := DateAndTime now + (Duration minutes: 31). esto no anda así que lo voy a implementar por las malas"
	laInterfaz setClock: (DateAndTime now + (Duration minutes: 31)).
	
	"self 
		should: [ laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1 ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz cartExpiredErrorDescription.
			self assert: (laInterfaz listCart: changoID) isEmpty ]"! !

!testRun: #InterfazTest #test20CanNotAddToCartIfExpired stamp: 'MO 11/7/2022 15:39:08'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/7/2022 15:39:08'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/7/2022 15:39:08'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/7/2022 15:39:08'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'MO 11/7/2022 15:39:08'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'MO 11/7/2022 15:39:08'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'MO 11/7/2022 15:39:08'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'MO 11/7/2022 15:39:08'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'MO 11/7/2022 15:39:08'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'MO 11/7/2022 15:39:08'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'MO 11/7/2022 15:39:08'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'MO 11/7/2022 15:39:08'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'MO 11/7/2022 15:39:08'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'MO 11/7/2022 15:39:08'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'MO 11/7/2022 15:39:08'!
PASSED!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'MO 11/7/2022 15:39:08'!
PASSED!

!testRun: #InterfazTest #test16ListPurchasesWithoutSalesReturnsEmptyCollection stamp: 'MO 11/7/2022 15:39:08'!
PASSED!

!testRun: #InterfazTest #test17ListPurchasesWithOneSaleReturnsACollectionWithThatSale stamp: 'MO 11/7/2022 15:39:08'!
PASSED!

!testRun: #InterfazTest #test18ListPurchasesWithVaroiuosItemsReturnsACollectionCorrectly stamp: 'MO 11/7/2022 15:39:08'!
PASSED!

!testRun: #InterfazTest #test20CanNotAddToCartIfExpired stamp: 'MO 11/7/2022 15:39:08'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 15:39:13' prior: 50566736!
test20CanNotAddToCartIfExpired

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	"clock := DateAndTime now + (Duration minutes: 31). esto no anda así que lo voy a implementar por las malas"
	laInterfaz setClock: (DateAndTime now + (Duration minutes: 31)).
	
	self 
		should: [ laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1 ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz cartExpiredErrorDescription.
			self assert: (laInterfaz listCart: changoID) isEmpty ]! !

!testRun: #InterfazTest #test20CanNotAddToCartIfExpired stamp: 'MO 11/7/2022 15:39:13'!
ERROR!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 15:39:41' prior: 50566829!
test20CanNotAddToCartIfExpired

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	"clock := DateAndTime now + (Duration minutes: 31). esto no anda así que lo voy a implementar por las malas"
	laInterfaz setClock: (DateAndTime now + (Duration minutes: 31)).
	
	self 
		should: [ laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1 ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz cartExpiredErrorDescription ]! !

!testRun: #InterfazTest #test20CanNotAddToCartIfExpired stamp: 'MO 11/7/2022 15:39:42'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/7/2022 15:39:42'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/7/2022 15:39:42'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/7/2022 15:39:42'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'MO 11/7/2022 15:39:42'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'MO 11/7/2022 15:39:42'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'MO 11/7/2022 15:39:42'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'MO 11/7/2022 15:39:42'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'MO 11/7/2022 15:39:42'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'MO 11/7/2022 15:39:42'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'MO 11/7/2022 15:39:43'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'MO 11/7/2022 15:39:43'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'MO 11/7/2022 15:39:43'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'MO 11/7/2022 15:39:43'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'MO 11/7/2022 15:39:43'!
PASSED!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'MO 11/7/2022 15:39:43'!
PASSED!

!testRun: #InterfazTest #test16ListPurchasesWithoutSalesReturnsEmptyCollection stamp: 'MO 11/7/2022 15:39:43'!
PASSED!

!testRun: #InterfazTest #test17ListPurchasesWithOneSaleReturnsACollectionWithThatSale stamp: 'MO 11/7/2022 15:39:43'!
PASSED!

!testRun: #InterfazTest #test18ListPurchasesWithVaroiuosItemsReturnsACollectionCorrectly stamp: 'MO 11/7/2022 15:39:43'!
PASSED!

!testRun: #InterfazTest #test20CanNotAddToCartIfExpired stamp: 'MO 11/7/2022 15:39:43'!
PASSED!
!Cart methodsFor: 'adding' stamp: 'MO 11/7/2022 15:41:41' prior: 50566376!
add: aQuantity of: anItem on: aTime

	self assertIsValidQuantity: aQuantity.
	self assertIsValidItem: anItem.
	lastModificationTime := aTime copy.

	1 to: aQuantity do: [ :aNumber | items add: anItem ]! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 15:43:08'!
test21CanNotListCartIfExpired

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	laInterfaz setClock: (DateAndTime now + (Duration minutes: 31)).
	
	self 
		should: [ laInterfaz listCart: changoID ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz cartExpiredErrorDescription ]! !

!testRun: #InterfazTest #test21CanNotListCartIfExpired stamp: 'MO 11/7/2022 15:43:09'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/7/2022 15:43:09'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/7/2022 15:43:09'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/7/2022 15:43:09'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'MO 11/7/2022 15:43:09'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'MO 11/7/2022 15:43:09'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'MO 11/7/2022 15:43:09'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'MO 11/7/2022 15:43:09'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'MO 11/7/2022 15:43:09'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'MO 11/7/2022 15:43:09'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'MO 11/7/2022 15:43:09'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'MO 11/7/2022 15:43:09'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'MO 11/7/2022 15:43:10'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'MO 11/7/2022 15:43:10'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'MO 11/7/2022 15:43:10'!
PASSED!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'MO 11/7/2022 15:43:10'!
PASSED!

!testRun: #InterfazTest #test16ListPurchasesWithoutSalesReturnsEmptyCollection stamp: 'MO 11/7/2022 15:43:10'!
PASSED!

!testRun: #InterfazTest #test17ListPurchasesWithOneSaleReturnsACollectionWithThatSale stamp: 'MO 11/7/2022 15:43:10'!
PASSED!

!testRun: #InterfazTest #test18ListPurchasesWithVaroiuosItemsReturnsACollectionCorrectly stamp: 'MO 11/7/2022 15:43:10'!
PASSED!

!testRun: #InterfazTest #test20CanNotAddToCartIfExpired stamp: 'MO 11/7/2022 15:43:10'!
PASSED!

!testRun: #InterfazTest #test21CanNotListCartIfExpired stamp: 'MO 11/7/2022 15:43:10'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 15:44:13'!
test21CanNotCheckOutCartIfExpired

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	laInterfaz setClock: (DateAndTime now + (Duration minutes: 31)).
	
	self 
		should: [ laInterfaz listCart: changoID ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz cartExpiredErrorDescription ]! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 15:44:20'!
test20CanNotListCartIfExpired

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	laInterfaz setClock: (DateAndTime now + (Duration minutes: 31)).
	
	self 
		should: [ laInterfaz listCart: changoID ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz cartExpiredErrorDescription ]! !

!methodRemoval: InterfazTest #test21CanNotListCartIfExpired stamp: 'MO 11/7/2022 15:44:23'!
test21CanNotListCartIfExpired

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	laInterfaz setClock: (DateAndTime now + (Duration minutes: 31)).
	
	self 
		should: [ laInterfaz listCart: changoID ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz cartExpiredErrorDescription ]!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 15:44:30'!
test19CanNotAddToCartIfExpired

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	"clock := DateAndTime now + (Duration minutes: 31). esto no anda así que lo voy a implementar por las malas"
	laInterfaz setClock: (DateAndTime now + (Duration minutes: 31)).
	
	self 
		should: [ laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1 ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz cartExpiredErrorDescription ]! !

!methodRemoval: InterfazTest #test20CanNotAddToCartIfExpired stamp: 'MO 11/7/2022 15:44:34'!
test20CanNotAddToCartIfExpired

	| changoID |
	
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	
	"clock := DateAndTime now + (Duration minutes: 31). esto no anda así que lo voy a implementar por las malas"
	laInterfaz setClock: (DateAndTime now + (Duration minutes: 31)).
	
	self 
		should: [ laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1 ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz cartExpiredErrorDescription ]!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 15:46:46' prior: 50567043!
test21CanNotCheckOutCartIfExpired

	| aDate changoID aSalesBook |
	
	aDate  := Month month: 4 year: 2050.
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	aSalesBook := OrderedCollection new.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	
	laInterfaz setClock: (DateAndTime now + (Duration minutes: 31)).
	
	self 
		should: [ laInterfaz checkOutCart: changoID withCard: 1234123412341234 expiringOn: aDate withOwner: 'user' registeringOn: aSalesBook. ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz cartExpiredErrorDescription ]! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 15:48:10' prior: 50562249!
test14CheckOutACartWithOneBookRegistersSaleCorrectly

	| aDate changoID aSalesBook |
	
	aDate  := (Month month: testObjectsFactory today monthIndex year: testObjectsFactory today yearNumber + 1).
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	aSalesBook := OrderedCollection new.
	
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	laInterfaz checkOutCart: changoID withCard: 1234123412341234 expiringOn: aDate withOwner: 'user' registeringOn: aSalesBook.
	
	self assert: aSalesBook size equals: 1.
	self assert: (aSalesBook first) total equals: (testObjectsFactory itemSellByTheStorePrice).

	! !

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'MO 11/7/2022 15:48:21'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/7/2022 15:48:21'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/7/2022 15:48:21'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/7/2022 15:48:21'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'MO 11/7/2022 15:48:21'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'MO 11/7/2022 15:48:21'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'MO 11/7/2022 15:48:21'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'MO 11/7/2022 15:48:21'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'MO 11/7/2022 15:48:21'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'MO 11/7/2022 15:48:21'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'MO 11/7/2022 15:48:21'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'MO 11/7/2022 15:48:21'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'MO 11/7/2022 15:48:21'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'MO 11/7/2022 15:48:21'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'MO 11/7/2022 15:48:21'!
PASSED!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'MO 11/7/2022 15:48:21'!
PASSED!

!testRun: #InterfazTest #test16ListPurchasesWithoutSalesReturnsEmptyCollection stamp: 'MO 11/7/2022 15:48:21'!
PASSED!

!testRun: #InterfazTest #test17ListPurchasesWithOneSaleReturnsACollectionWithThatSale stamp: 'MO 11/7/2022 15:48:21'!
PASSED!

!testRun: #InterfazTest #test18ListPurchasesWithVaroiuosItemsReturnsACollectionCorrectly stamp: 'MO 11/7/2022 15:48:21'!
PASSED!

!testRun: #InterfazTest #test19CanNotAddToCartIfExpired stamp: 'MO 11/7/2022 15:48:21'!
PASSED!

!testRun: #InterfazTest #test20CanNotListCartIfExpired stamp: 'MO 11/7/2022 15:48:21'!
PASSED!

!testRun: #InterfazTest #test21CanNotCheckOutCartIfExpired stamp: 'MO 11/7/2022 15:48:21'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 15:48:37' prior: 50567147!
test14CheckOutACartWithOneBookRegistersSaleCorrectly

	| aMonth changoID aSalesBook |
	
	aMonth  := (Month month: testObjectsFactory today monthIndex year: testObjectsFactory today yearNumber + 1).
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	aSalesBook := OrderedCollection new.
	
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	laInterfaz checkOutCart: changoID withCard: 1234123412341234 expiringOn: aMonth withOwner: 'user' registeringOn: aSalesBook.
	
	self assert: aSalesBook size equals: 1.
	self assert: (aSalesBook first) total equals: (testObjectsFactory itemSellByTheStorePrice).

	! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 15:48:57' prior: 50564699!
test13CheckOutACartWithInvalidNumberedCardRaisesException
	
	| aMonth changoID aSalesBook |
	
	aMonth  := (Month month: testObjectsFactory today monthIndex year: testObjectsFactory today yearNumber + 1).
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 2.
	aSalesBook := OrderedCollection new.
	
	self 
		should: [ laInterfaz checkOutCart: changoID withCard: 1 expiringOn: aMonth withOwner: 'user' registeringOn: aSalesBook ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = CreditCard invalidCardNumberErrorDescription.
			self assert: aSalesBook isEmpty. ]! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 15:49:11' prior: 50564779!
test12CheckOutACartWithExpiredCardRaisesException

	| aMonth changoID aSalesBook |
	
	aMonth  := (Month month: testObjectsFactory today monthIndex year: testObjectsFactory today yearNumber - 1).
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 2.
	aSalesBook := OrderedCollection new.
	
	self 
		should: [laInterfaz checkOutCart: changoID withCard: 1234567812345678 expiringOn: aMonth withOwner: 'user' registeringOn: aSalesBook ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cashier canNotChargeAnExpiredCreditCardErrorMessage.
			self assert: aSalesBook isEmpty. ]! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 15:49:19' prior: 50564739!
test11CheckOutACartWithInvalidIDRaisesException

	| aMonth aSalesBook |
	
	aMonth  := (Month month: testObjectsFactory today monthIndex year: testObjectsFactory today yearNumber + 1).
	aSalesBook := OrderedCollection new.
	
	self 
		should: [laInterfaz checkOutCart: 0 withCard: 1234567812345678 expiringOn: aMonth withOwner: 'Mariano Oca' registeringOn: aSalesBook ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz invalidCartIDErrorDescription.
			self assert: aSalesBook isEmpty ]! !

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'MO 11/7/2022 15:49:23'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/7/2022 15:49:27'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/7/2022 15:49:27'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/7/2022 15:49:27'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'MO 11/7/2022 15:49:27'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'MO 11/7/2022 15:49:27'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'MO 11/7/2022 15:49:27'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'MO 11/7/2022 15:49:27'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'MO 11/7/2022 15:49:27'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'MO 11/7/2022 15:49:27'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'MO 11/7/2022 15:49:27'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'MO 11/7/2022 15:49:27'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'MO 11/7/2022 15:49:27'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'MO 11/7/2022 15:49:27'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'MO 11/7/2022 15:49:27'!
PASSED!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'MO 11/7/2022 15:49:27'!
PASSED!

!testRun: #InterfazTest #test16ListPurchasesWithoutSalesReturnsEmptyCollection stamp: 'MO 11/7/2022 15:49:27'!
PASSED!

!testRun: #InterfazTest #test17ListPurchasesWithOneSaleReturnsACollectionWithThatSale stamp: 'MO 11/7/2022 15:49:28'!
PASSED!

!testRun: #InterfazTest #test18ListPurchasesWithVaroiuosItemsReturnsACollectionCorrectly stamp: 'MO 11/7/2022 15:49:28'!
PASSED!

!testRun: #InterfazTest #test19CanNotAddToCartIfExpired stamp: 'MO 11/7/2022 15:49:28'!
PASSED!

!testRun: #InterfazTest #test20CanNotListCartIfExpired stamp: 'MO 11/7/2022 15:49:28'!
PASSED!

!testRun: #InterfazTest #test21CanNotCheckOutCartIfExpired stamp: 'MO 11/7/2022 15:49:28'!
PASSED!
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 15:49:35' prior: 50565573!
test18ListPurchasesWithVaroiuosItemsReturnsACollectionCorrectly

	| purchases aMonth changoID aSalesBook totalSpended |

	aMonth  := (Month month: testObjectsFactory today monthIndex year: testObjectsFactory today yearNumber + 1).
	aSalesBook := OrderedCollection new.

	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	laInterfaz addToCart: changoID book: (testObjectsFactory otherItemSellByTheStore) quantity: 2.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 3.
	totalSpended := laInterfaz checkOutCart: changoID withCard: 1234123412341234 expiringOn: aMonth withOwner: 'Owner' registeringOn: aSalesBook.

	purchases := laInterfaz listPurchasesOf: 'user' withPassword: 'pass'.

	self assert: purchases size equals: 5.
	self assert: purchases first equals: testObjectsFactory otherItemSellByTheStore.
	self assert: purchases second equals: 2.
	self assert: purchases third equals: testObjectsFactory itemSellByTheStore.
	self assert: purchases fourth equals: 4.
	self assert: purchases fifth equals: totalSpended.! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 15:50:01' prior: 50565475!
test17ListPurchasesWithOneSaleReturnsACollectionWithThatSale

	| purchases aMonth changoID aSalesBook |

	aMonth  := (Month month: testObjectsFactory today monthIndex year: testObjectsFactory today yearNumber + 1).
	aSalesBook := OrderedCollection new.

	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	laInterfaz checkOutCart: changoID withCard: 1234123412341234 expiringOn: aMonth withOwner: 'Owner' registeringOn: aSalesBook.

	purchases := laInterfaz listPurchasesOf: 'user' withPassword: 'pass'.

	self assert: purchases size equals: 3.
	self assert: purchases first equals: testObjectsFactory itemSellByTheStore.
	self assert: purchases second equals: 1.
	self assert: purchases third equals: testObjectsFactory itemSellByTheStorePrice.! !
!InterfazTest methodsFor: 'test' stamp: 'MO 11/7/2022 15:50:21' prior: 50567124!
test21CanNotCheckOutCartIfExpired

	| aMonth changoID aSalesBook |
	
	aMonth  := (Month month: testObjectsFactory today monthIndex year: testObjectsFactory today yearNumber + 1).
	changoID := laInterfaz createCartForUser: 'user' withPassword: 'pass'.
	aSalesBook := OrderedCollection new.
	laInterfaz addToCart: changoID book: (testObjectsFactory itemSellByTheStore) quantity: 1.
	
	laInterfaz setClock: (DateAndTime now + (Duration minutes: 31)).
	
	self 
		should: [ laInterfaz checkOutCart: changoID withCard: 1234123412341234 expiringOn: aMonth withOwner: 'user' registeringOn: aSalesBook. ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = Interfaz cartExpiredErrorDescription ]! !

!testRun: #InterfazTest #test21CanNotCheckOutCartIfExpired stamp: 'MO 11/7/2022 15:50:33'!
PASSED!

!testRun: #InterfazTest #test01createCartDaErrorConUsuarioInvalido stamp: 'MO 11/7/2022 15:50:33'!
PASSED!

!testRun: #InterfazTest #test02createCartDaErrorConContraseniaInvalida stamp: 'MO 11/7/2022 15:50:33'!
PASSED!

!testRun: #InterfazTest #test03createCartFuncionaConUnUsuarioYContraseniaValidos stamp: 'MO 11/7/2022 15:50:33'!
PASSED!

!testRun: #InterfazTest #test04addCartNoFuncionaConUnIDInvalido stamp: 'MO 11/7/2022 15:50:33'!
PASSED!

!testRun: #InterfazTest #test05addCartNoFuncionaConUnLibroInvalido stamp: 'MO 11/7/2022 15:50:33'!
PASSED!

!testRun: #InterfazTest #test06addCartNoFuncionaConUnaCantidadInvalida stamp: 'MO 11/7/2022 15:50:33'!
PASSED!

!testRun: #InterfazTest #test07AddToCartAgregaUnLibroCorrectamente stamp: 'MO 11/7/2022 15:50:33'!
PASSED!

!testRun: #InterfazTest #test08ListCartNoFuncionaConCartIDInvalida stamp: 'MO 11/7/2022 15:50:33'!
PASSED!

!testRun: #InterfazTest #test09ListCartACartConUnLibroRetornaColeccionConEseLibro stamp: 'MO 11/7/2022 15:50:34'!
PASSED!

!testRun: #InterfazTest #test10ListCartACartConMultiplesLibrosRetornaColeccionConEsosLibros stamp: 'MO 11/7/2022 15:50:34'!
PASSED!

!testRun: #InterfazTest #test11CheckOutACartWithInvalidIDRaisesException stamp: 'MO 11/7/2022 15:50:34'!
PASSED!

!testRun: #InterfazTest #test12CheckOutACartWithExpiredCardRaisesException stamp: 'MO 11/7/2022 15:50:34'!
PASSED!

!testRun: #InterfazTest #test13CheckOutACartWithInvalidNumberedCardRaisesException stamp: 'MO 11/7/2022 15:50:34'!
PASSED!

!testRun: #InterfazTest #test14CheckOutACartWithOneBookRegistersSaleCorrectly stamp: 'MO 11/7/2022 15:50:34'!
PASSED!

!testRun: #InterfazTest #test15CannotListPurchasesIfAuthenticationFails stamp: 'MO 11/7/2022 15:50:34'!
PASSED!

!testRun: #InterfazTest #test16ListPurchasesWithoutSalesReturnsEmptyCollection stamp: 'MO 11/7/2022 15:50:34'!
PASSED!

!testRun: #InterfazTest #test17ListPurchasesWithOneSaleReturnsACollectionWithThatSale stamp: 'MO 11/7/2022 15:50:34'!
PASSED!

!testRun: #InterfazTest #test18ListPurchasesWithVaroiuosItemsReturnsACollectionCorrectly stamp: 'MO 11/7/2022 15:50:34'!
PASSED!

!testRun: #InterfazTest #test19CanNotAddToCartIfExpired stamp: 'MO 11/7/2022 15:50:34'!
PASSED!

!testRun: #InterfazTest #test20CanNotListCartIfExpired stamp: 'MO 11/7/2022 15:50:34'!
PASSED!

!testRun: #InterfazTest #test21CanNotCheckOutCartIfExpired stamp: 'MO 11/7/2022 15:50:34'!
PASSED!

----QUIT----(7 November 2022 15:51:23) CuisUniversity-5510.image priorSource: 7421919!