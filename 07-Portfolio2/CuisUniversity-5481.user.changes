

----SNAPSHOT----(18 October 2022 19:55:01) CuisUniversity-cambiosConSanti.image priorSource: 7289700!

----STARTUP---- (20 October 2022 17:19:58) as /home/clinux01/Descargas/linux64/CuisUniversity-5481.image!


!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'cde 10/20/2022 17:20:28'!
PASSED!
!Transfer methodsFor: 'as yet unclassified' stamp: 'cde 10/20/2022 19:46:22' prior: 50560830!
register: aValue from: aSendingAccount to: aReceptiveAccount
	
	value := aValue.
	sendingAccount := aSendingAccount.
	receivingAccount := aReceptiveAccount.
	
	
	
	aSendingAccount registerTransference: self.
	aReceptiveAccount registerTransference: self.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'cde 10/20/2022 19:46:48'!
transferTo: anAccount 

	^anAccount balance + value ! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'cde 10/20/2022 19:47:20'!
transferFrom: anAccount 

	^anAccount balance - value ! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'cde 10/20/2022 19:48:28' prior: 50561103!
register: aValue from: aSendingAccount to: aReceptiveAccount
	
	value := aValue.
	sendingAccount := aSendingAccount.
	receivingAccount := aReceptiveAccount.
	
	self transferTo: aReceptiveAccount.
	self transferFrom: aSendingAccount.
	
	aSendingAccount registerTransference: self.
	aReceptiveAccount registerTransference: self.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'cde 10/18/2022 19:41:40' prior: 50561124!
register: aValue from: aSendingAccount to: aReceptiveAccount
	
	value := aValue.
	sendingAccount := aSendingAccount.
	receivingAccount := aReceptiveAccount.
	
	Withdraw register: aValue on: aSendingAccount.
	Deposit register: aValue on: aReceptiveAccount.
	
	aSendingAccount registerTransference: self.
	aReceptiveAccount registerTransference: self.! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'cde 10/20/2022 19:50:25'!
registerTransferenceTo: aTransference

	transferences add: aTransference 
! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'cde 10/20/2022 19:50:32'!
registerTransferenceFrom: aTransference

	transferences add: aTransference 
! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'cde 10/20/2022 19:51:02' prior: 50561138!
register: aValue from: aSendingAccount to: aReceptiveAccount
	
	value := aValue.
	sendingAccount := aSendingAccount.
	receivingAccount := aReceptiveAccount.
	
	Withdraw register: aValue on: aSendingAccount.
	Deposit register: aValue on: aReceptiveAccount.
	
	aSendingAccount registerTransferenceFrom: self.
	aReceptiveAccount registerTransferenceTo: self.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'cde 10/20/2022 19:53:18'!
with: aValue
	^ value := aValue! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'cde 10/20/2022 19:54:30' prior: 50561163!
register: aValue from: aSendingAccount to: aReceptiveAccount
	
	value := aValue.
	sendingAccount := aSendingAccount.
	receivingAccount := aReceptiveAccount.
	
	Withdraw register: aValue on: aSendingAccount.
	Deposit register: aValue on: aReceptiveAccount.
	
	aSendingAccount registerTransference: self.
	aReceptiveAccount registerTransference: self.! !

!methodRemoval: ReceptiveAccount #registerTransferenceTo: stamp: 'cde 10/20/2022 19:54:50'!
registerTransferenceTo: aTransference

	transferences add: aTransference 
!

!methodRemoval: ReceptiveAccount #registerTransferenceFrom: stamp: 'cde 10/20/2022 19:54:51'!
registerTransferenceFrom: aTransference

	transferences add: aTransference 
!

!methodRemoval: Transfer #with: stamp: 'cde 10/20/2022 19:55:13'!
with: aValue
	^ value := aValue!

!methodRemoval: Transfer #transferTo: stamp: 'cde 10/20/2022 19:55:14'!
transferTo: anAccount 

	^anAccount balance + value !

!methodRemoval: Transfer #transferFrom: stamp: 'cde 10/20/2022 19:55:15'!
transferFrom: anAccount 

	^anAccount balance - value !
!Transfer methodsFor: 'as yet unclassified' stamp: 'cde 10/20/2022 19:56:51' prior: 50561182!
register: aValue from: aSendingAccount to: aReceptiveAccount
	
	value := aValue.
	sendingAccount := aSendingAccount.
	receivingAccount := aReceptiveAccount.
	
	aSendingAccount registerTransference: self.
	aReceptiveAccount registerTransference: self.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'cde 10/20/2022 19:57:00' prior: 50561218!
register: aValue from: aSendingAccount to: aReceptiveAccount
	
	value := aValue.
	sendingAccount := aSendingAccount.
	receivingAccount := aReceptiveAccount.
	
	Withdraw register: aValue on: aSendingAccount.
	Deposit register: aValue on: aReceptiveAccount.
	
	aSendingAccount registerTransference: self.
	aReceptiveAccount registerTransference: self.! !
!PortfolioTest methodsFor: 'tests' stamp: 'cde 10/20/2022 20:01:58'!
test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements

	| anAccount |
	
	anAccount := ReceptiveAccount new.
	
	self assert: (anAccount accountSummary at: 1) equals: 'Balance = 0'.! !

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'cde 10/20/2022 20:02:05'!
ERROR!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'cde 10/20/2022 20:02:06'!
ERROR!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'cde 10/20/2022 20:02:19'!
ERROR!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'cde 10/20/2022 20:02:19'!
ERROR!
!ReceptiveAccount methodsFor: 'reports' stamp: 'cde 10/20/2022 20:02:43'!
accountSummary
	self shouldBeImplemented.! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'cde 10/20/2022 20:03:19' prior: 50561269!
accountSummary
	^ 'Balance = 0'! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'cde 10/20/2022 20:05:14' prior: 50561274!
accountSummary
	|summary|
	
	summary := OrderedCollection new.
	summary add: 'Balance = 0' .
	
	^ summary.
	! !

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'cde 10/20/2022 20:05:19'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'cde 10/20/2022 20:05:42'!
test20AccountSummaryReturnsListWithOneDeposit

	| anAccount |
	
	anAccount := ReceptiveAccount new.
	
	self assert: (anAccount accountSummary at: 1) equals: 'Balance = 0'.! !
!PortfolioTest methodsFor: 'tests' stamp: 'cde 10/20/2022 20:06:18'!
test21AccountSummaryReturnsListWithOneDeposit

	| anAccount |
	
	anAccount := ReceptiveAccount new.
	
	
	
	self assert: (anAccount accountSummary at: 1) equals: 'Balance = 0'.! !

!methodRemoval: PortfolioTest #test20AccountSummaryReturnsListWithOneDeposit stamp: 'cde 10/20/2022 20:06:19'!
test20AccountSummaryReturnsListWithOneDeposit

	| anAccount |
	
	anAccount := ReceptiveAccount new.
	
	self assert: (anAccount accountSummary at: 1) equals: 'Balance = 0'.!
!PortfolioTest methodsFor: 'tests' stamp: 'cde 10/20/2022 20:08:48' prior: 50561296!
test21AccountSummaryReturnsListWithOneDeposit

	| anAccount |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 50 on: anAccount. 
	
	self assert: (anAccount accountSummary at: 1) equals: 'Depósito por 50.'.
	self assert: (anAccount accountSummary at: 2) equals: 'Balance = 50.'.! !

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'cde 10/20/2022 20:08:51'!
FAILURE!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'cde 10/20/2022 20:08:51'!
FAILURE!
!ReceptiveAccount methodsFor: 'reports' stamp: 'cde 10/20/2022 20:10:14' prior: 50561278!
accountSummary
	|summary|
	
	summary := OrderedCollection new.
	summary add: 'Depósito por 50.'.
	summary add: 'Balance = ', self balance.
	
	^ summary.
	! !

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'cde 10/20/2022 20:10:20'!
ERROR!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'cde 10/20/2022 20:10:20'!
ERROR!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'cde 10/20/2022 20:11:15'!
ERROR!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'cde 10/20/2022 20:11:15'!
ERROR!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'cde 10/20/2022 20:11:18'!
ERROR!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'cde 10/20/2022 20:11:29'!
ERROR!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'cde 10/20/2022 20:11:29'!
ERROR!
!ReceptiveAccount methodsFor: 'reports' stamp: 'cde 10/20/2022 20:11:58' prior: 50561334!
accountSummary
	|summary|
	
	summary := OrderedCollection new.
	summary add: 'Depósito por 50.'.
	summary add: 'Balance = ', (self balance) asString.
	
	^ summary.
	! !

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'cde 10/20/2022 20:12:03'!
FAILURE!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'cde 10/20/2022 20:12:03'!
FAILURE!
!ReceptiveAccount methodsFor: 'reports' stamp: 'cde 10/20/2022 20:12:43' prior: 50561367!
accountSummary
	|summary|
	
	summary := OrderedCollection new.
	summary add: 'Depósito por 50.'.
	summary add: 'Balance = ', (self balance) asString, '.'.
	
	^ summary.
	! !

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'cde 10/20/2022 20:12:48'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'cde 10/20/2022 20:16:16'!
test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal

	| anAccount |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	Withdraw register: 25 on: anAccount. 
	
	self assert: (anAccount accountSummary at: 1) equals: 'Deposito por 100.'.
	self assert: (anAccount accountSummary at: 2) equals: 'Extraccion por 25.'.
	self assert: (anAccount accountSummary at: 3) equals: 'Balance = 75.'.! !
!PortfolioTest methodsFor: 'tests' stamp: 'cde 10/20/2022 20:16:22' prior: 50561314!
test21AccountSummaryReturnsListWithOneDeposit

	| anAccount |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 50 on: anAccount. 
	
	self assert: (anAccount accountSummary at: 1) equals: 'Deposito por 50.'.
	self assert: (anAccount accountSummary at: 2) equals: 'Balance = 50.'.! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'cde 10/20/2022 20:16:49' prior: 50561383!
accountSummary
	|summary|
	
	summary := OrderedCollection new.
	summary add: 'Deposito por 50.'.
	summary add: 'Extraccion por 25.'.
	summary add: 'Balance = ', (self balance) asString, '.'.
	
	^ summary.
	! !

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'cde 10/20/2022 20:16:54'!
FAILURE!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'cde 10/20/2022 20:16:54'!
FAILURE!
!ReceptiveAccount methodsFor: 'balance' stamp: 'cde 10/20/2022 20:17:53' prior: 50560157 overrides: 50559962!
balance

	^transactions 
		inject: 0
		into: [ :currentBalance :transaction | transaction affectBalance: currentBalance ]! !

Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions transferences depositValue withdrawalValue'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Solucion' stamp: 'cde 10/20/2022 20:18:44'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions transferences depositValue withdrawalValue'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions transferences'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Solucion' stamp: 'cde 10/20/2022 20:19:41'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions transferences'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReceptiveAccount methodsFor: 'reports' stamp: 'cde 10/20/2022 20:21:38' prior: 50561423!
accountSummary
	|summary depositValue withdrawalValue|
	
	summary := OrderedCollection new.
	summary add: 'Deposito por 50.'.
	summary add: 'Extraccion por 25.'.
	summary add: 'Balance = ', (self balance) asString, '.'.
	
	^ summary.
	! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'cde 10/20/2022 20:11:58' prior: 50561478!
accountSummary
	|summary|
	
	summary := OrderedCollection new.
	summary add: 'Depósito por 50.'.
	summary add: 'Balance = ', (self balance) asString.
	
	^ summary.
	! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'cde 10/20/2022 20:10:14' prior: 50561489!
accountSummary
	|summary|
	
	summary := OrderedCollection new.
	summary add: 'Depósito por 50.'.
	summary add: 'Balance = ', self balance.
	
	^ summary.
	! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'cde 10/20/2022 20:26:20' prior: 50561498!
accountSummary
	|summary |
	
	summary := OrderedCollection new.

	summary add: 'Deposito por 50.'.
	summary add: 'Extraccion por 25.'.
	summary add: 'Balance = ', (self balance) asString, '.'.
	
	^ summary.
	! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'cde 10/20/2022 20:28:04' prior: 50561506!
accountSummary
	|summary |
	
	summary := OrderedCollection new.
	
	transactions do: [:aTransaction | ].
	
	summary add: 'Balance = ', (self balance) asString, '.'.
	
	^ summary.
	! !
!Deposit methodsFor: 'value' stamp: 'cde 10/20/2022 20:29:44' overrides: 16901837!
asString

	^ 'Extracion por ', value asString , '.'. ! !
!Withdraw methodsFor: 'value' stamp: 'cde 10/20/2022 20:30:18' overrides: 16901837!
asString

	^ 'Deposito por ', value asString , '.'. ! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'cde 10/20/2022 20:30:58' prior: 50561516!
accountSummary
	|summary |
	
	summary := OrderedCollection new.
	
	transactions do: [:aTransaction | summary add: aTransaction asString].
	
	summary add: 'Balance = ', (self balance) asString, '.'.
	
	^ summary.
	! !

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'cde 10/20/2022 20:31:14'!
FAILURE!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'cde 10/20/2022 20:31:14'!
FAILURE!
!PortfolioTest methodsFor: 'tests' stamp: 'cde 10/20/2022 20:31:26' prior: 50561243!
test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements

	| anAccount |
	
	anAccount := ReceptiveAccount new.
	
	self assert: (anAccount accountSummary at: 1) equals: 'Balance = 0.'.! !

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'cde 10/20/2022 20:31:26'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'cde 10/20/2022 20:31:26'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'cde 10/20/2022 20:31:26'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'cde 10/20/2022 20:31:26'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'cde 10/20/2022 20:31:26'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'cde 10/20/2022 20:31:26'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'cde 10/20/2022 20:31:26'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'cde 10/20/2022 20:31:26'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'cde 10/20/2022 20:31:26'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'cde 10/20/2022 20:31:26'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'cde 10/20/2022 20:31:26'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'cde 10/20/2022 20:31:26'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'cde 10/20/2022 20:31:26'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'cde 10/20/2022 20:31:26'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'cde 10/20/2022 20:31:26'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'cde 10/20/2022 20:31:26'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'cde 10/20/2022 20:31:26'!
PASSED!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'cde 10/20/2022 20:31:26'!
PASSED!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'cde 10/20/2022 20:31:26'!
PASSED!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'cde 10/20/2022 20:31:26'!
PASSED!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'cde 10/20/2022 20:31:26'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'cde 10/20/2022 20:31:26'!
FAILURE!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'cde 10/20/2022 20:31:26'!
FAILURE!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'cde 10/20/2022 20:31:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'cde 10/20/2022 20:31:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'cde 10/20/2022 20:31:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'cde 10/20/2022 20:31:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'cde 10/20/2022 20:31:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'cde 10/20/2022 20:31:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'cde 10/20/2022 20:31:26'!
PASSED!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'cde 10/20/2022 20:31:30'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'cde 10/20/2022 20:31:30'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'cde 10/20/2022 20:31:30'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'cde 10/20/2022 20:31:30'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'cde 10/20/2022 20:31:30'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'cde 10/20/2022 20:31:30'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'cde 10/20/2022 20:31:30'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'cde 10/20/2022 20:31:30'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'cde 10/20/2022 20:31:30'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'cde 10/20/2022 20:31:30'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'cde 10/20/2022 20:31:30'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'cde 10/20/2022 20:31:30'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'cde 10/20/2022 20:31:30'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'cde 10/20/2022 20:31:30'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'cde 10/20/2022 20:31:30'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'cde 10/20/2022 20:31:30'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'cde 10/20/2022 20:31:30'!
PASSED!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'cde 10/20/2022 20:31:30'!
PASSED!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'cde 10/20/2022 20:31:30'!
PASSED!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'cde 10/20/2022 20:31:30'!
PASSED!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'cde 10/20/2022 20:31:30'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'cde 10/20/2022 20:31:30'!
FAILURE!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'cde 10/20/2022 20:31:30'!
FAILURE!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'cde 10/20/2022 20:31:34'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'cde 10/20/2022 20:31:37'!
FAILURE!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'cde 10/20/2022 20:31:37'!
FAILURE!
!Withdraw methodsFor: 'value' stamp: 'cde 10/20/2022 20:32:06' prior: 50561530 overrides: 16901837!
asString

	^ 'Extraccion por ', value asString , '.'. ! !
!Deposit methodsFor: 'value' stamp: 'cde 10/20/2022 20:32:11' prior: 50561525 overrides: 16901837!
asString

	^ 'Deposito por ', value asString , '.'. ! !

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'cde 10/20/2022 20:32:16'!
PASSED!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'cde 10/20/2022 20:32:19'!
PASSED!

----SNAPSHOT----(20 October 2022 20:38:12) CuisUniversity-5481.image priorSource: 7342120!
!ReceptiveAccount methodsFor: 'balance' stamp: 'cde 10/20/2022 20:40:45' prior: 50561442 overrides: 50559962!
balance

	! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'cde 10/20/2022 20:41:00'!
balanceOfTransactions
	^transactions 
			inject: 0
			into: [ :currentBalance :transaction | transaction affectBalance: currentBalance ]

	! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'cde 10/20/2022 20:42:50' prior: 50561805 overrides: 50559962!
balance
	|transactionsBalance transferencesBalance|
	transactionsBalance := self balanceOfTransactions.
	transferencesBalance := 0.
	^ transactionsBalance + transferencesBalance ! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'cde 10/20/2022 20:42:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'cde 10/20/2022 20:42:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'cde 10/20/2022 20:42:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'cde 10/20/2022 20:42:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'cde 10/20/2022 20:42:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'cde 10/20/2022 20:42:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'cde 10/20/2022 20:42:52'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'cde 10/20/2022 20:42:55'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'cde 10/20/2022 20:42:55'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'cde 10/20/2022 20:42:55'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'cde 10/20/2022 20:42:55'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'cde 10/20/2022 20:42:55'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'cde 10/20/2022 20:42:55'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'cde 10/20/2022 20:42:55'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'cde 10/20/2022 20:42:55'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'cde 10/20/2022 20:42:55'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'cde 10/20/2022 20:42:55'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'cde 10/20/2022 20:42:55'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'cde 10/20/2022 20:42:55'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'cde 10/20/2022 20:42:55'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'cde 10/20/2022 20:42:55'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'cde 10/20/2022 20:42:55'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'cde 10/20/2022 20:42:55'!
PASSED!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'cde 10/20/2022 20:42:55'!
PASSED!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'cde 10/20/2022 20:42:55'!
PASSED!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'cde 10/20/2022 20:42:55'!
PASSED!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'cde 10/20/2022 20:42:55'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'cde 10/20/2022 20:42:55'!
PASSED!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'cde 10/20/2022 20:42:55'!
PASSED!
!Transfer methodsFor: 'as yet unclassified' stamp: 'cde 10/20/2022 20:45:09'!
sendingAccount
	^ sendingAccount copy.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'cde 10/20/2022 20:45:25'!
receivingAccount
	^ receivingAccount copy.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'cde 10/20/2022 20:46:00' overrides: 16902254!
value
	^ value copy.! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'cde 10/20/2022 20:50:13'!
balanceOfTransferences
	^transactions 
			inject: 0
			into: [ :currentBalance :transference | transference receivingAccount = self ifTrue: [transference value] 
				ifFalse: [transference value * (-1)]  ]

	! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'cde 10/20/2022 20:50:52' prior: 50561951!
balanceOfTransferences
	^transactions 
			inject: 0
			into: [ :currentBalance :transference | transference receivingAccount = self ifTrue: [transference value] 
				ifFalse: [transference value * (-1)]  ].

	! !

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'cde 10/20/2022 20:59:50'!
PASSED!
!ReceptiveAccount methodsFor: 'balance' stamp: 'cde 10/20/2022 21:04:29' prior: 50561961!
balanceOfTransferences
	^transactions 
			inject: 0
			into: [ :currentBalance :transference | transference receivingAccount = self ifTrue: [transference value] 
				ifFalse: [transference value * (-1)]  ].

	! !
!Transfer methodsFor: 'registerTransaction' stamp: 'cde 10/20/2022 21:04:48' prior: 50561229!
register: aValue from: aSendingAccount to: aReceptiveAccount
	
	value := aValue.
	sendingAccount := aSendingAccount.
	receivingAccount := aReceptiveAccount.
	
	aSendingAccount registerTransference: self.
	aReceptiveAccount registerTransference: self.! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'cde 10/20/2022 21:05:24' prior: 50561816 overrides: 50559962!
balance
	|transactionsBalance transferencesBalance|
	
	transactionsBalance := self balanceOfTransactions.
	transferencesBalance := self balanceOfTransferences.
	^ transactionsBalance + transferencesBalance ! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'cde 10/20/2022 21:05:51' prior: 50561975!
balanceOfTransferences
	^transactions 
			inject: 0
			into: [ :currentBalance :transference | (transference receivingAccount = self) ifTrue: [transference value] 
				ifFalse: [transference value * (-1)]  ].

	! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'cde 10/20/2022 21:06:54'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'cde 10/20/2022 21:06:54'!
ERROR!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'cde 10/20/2022 21:06:54'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'cde 10/20/2022 21:06:54'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'cde 10/20/2022 21:06:54'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'cde 10/20/2022 21:06:54'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'cde 10/20/2022 21:06:54'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'cde 10/20/2022 21:06:54'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'cde 10/20/2022 21:06:54'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'cde 10/20/2022 21:06:54'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'cde 10/20/2022 21:06:54'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'cde 10/20/2022 21:06:54'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'cde 10/20/2022 21:06:54'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'cde 10/20/2022 21:06:54'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'cde 10/20/2022 21:06:54'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'cde 10/20/2022 21:06:54'!
FAILURE!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'cde 10/20/2022 21:06:54'!
FAILURE!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'cde 10/20/2022 21:06:54'!
PASSED!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'cde 10/20/2022 21:06:54'!
PASSED!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'cde 10/20/2022 21:06:54'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'cde 10/20/2022 21:06:54'!
ERROR!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'cde 10/20/2022 21:06:54'!
ERROR!
!ReceptiveAccount methodsFor: 'balance' stamp: 'cde 10/20/2022 21:08:33' prior: 50561997 overrides: 50559962!
balance
	|transactionsBalance transferencesBalance|
	
	transactionsBalance := self balanceOfTransactions.
	transferencesBalance := 0.
	^ transactionsBalance + transferencesBalance ! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'cde 10/20/2022 21:08:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'cde 10/20/2022 21:08:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'cde 10/20/2022 21:08:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'cde 10/20/2022 21:08:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'cde 10/20/2022 21:08:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'cde 10/20/2022 21:08:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'cde 10/20/2022 21:08:37'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'cde 10/20/2022 21:08:39'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'cde 10/20/2022 21:08:39'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'cde 10/20/2022 21:08:39'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'cde 10/20/2022 21:08:39'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'cde 10/20/2022 21:08:39'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'cde 10/20/2022 21:08:39'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'cde 10/20/2022 21:08:39'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'cde 10/20/2022 21:08:39'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'cde 10/20/2022 21:08:39'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'cde 10/20/2022 21:08:39'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'cde 10/20/2022 21:08:39'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'cde 10/20/2022 21:08:39'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'cde 10/20/2022 21:08:39'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'cde 10/20/2022 21:08:39'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'cde 10/20/2022 21:08:39'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'cde 10/20/2022 21:08:39'!
FAILURE!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'cde 10/20/2022 21:08:39'!
FAILURE!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'cde 10/20/2022 21:08:39'!
PASSED!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'cde 10/20/2022 21:08:39'!
PASSED!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'cde 10/20/2022 21:08:39'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'cde 10/20/2022 21:08:39'!
PASSED!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'cde 10/20/2022 21:08:39'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'cde 10/20/2022 21:09:02'!
FAILURE!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'cde 10/20/2022 21:09:52'!
FAILURE!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'cde 10/20/2022 21:09:52'!
FAILURE!
!ReceptiveAccount methodsFor: 'balance' stamp: 'cde 10/20/2022 21:11:03' prior: 50562104 overrides: 50559962!
balance
	|transactionsBalance transferencesBalance|
	
	transactionsBalance := self balanceOfTransactions.
	transferencesBalance := self balanceOfTransferences.
	^ transactionsBalance + transferencesBalance ! !

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'cde 10/20/2022 21:11:27'!
FAILURE!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'cde 10/20/2022 21:11:27'!
FAILURE!
!Transfer methodsFor: 'registerTransaction' stamp: 'cde 10/18/2022 19:41:40' prior: 50561985!
register: aValue from: aSendingAccount to: aReceptiveAccount
	
	value := aValue.
	sendingAccount := aSendingAccount.
	receivingAccount := aReceptiveAccount.
	
	Withdraw register: aValue on: aSendingAccount.
	Deposit register: aValue on: aReceptiveAccount.
	
	aSendingAccount registerTransference: self.
	aReceptiveAccount registerTransference: self.! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'cde 10/20/2022 21:20:45' prior: 50562238 overrides: 50559962!
balance
	|transactionsBalance transferencesBalance|
	
	transactionsBalance := self balanceOfTransactions.
	transferencesBalance := 0."self balanceOfTransferences"
	^ transactionsBalance + transferencesBalance ! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'cde 10/20/2022 21:20:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'cde 10/20/2022 21:20:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'cde 10/20/2022 21:20:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'cde 10/20/2022 21:20:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'cde 10/20/2022 21:20:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'cde 10/20/2022 21:20:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'cde 10/20/2022 21:20:50'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'cde 10/20/2022 21:20:53'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'cde 10/20/2022 21:20:53'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'cde 10/20/2022 21:20:53'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'cde 10/20/2022 21:20:53'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'cde 10/20/2022 21:20:53'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'cde 10/20/2022 21:20:53'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'cde 10/20/2022 21:20:53'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'cde 10/20/2022 21:20:53'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'cde 10/20/2022 21:20:53'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'cde 10/20/2022 21:20:53'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'cde 10/20/2022 21:20:53'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'cde 10/20/2022 21:20:53'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'cde 10/20/2022 21:20:53'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'cde 10/20/2022 21:20:53'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'cde 10/20/2022 21:20:53'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'cde 10/20/2022 21:20:53'!
PASSED!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'cde 10/20/2022 21:20:53'!
PASSED!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'cde 10/20/2022 21:20:53'!
PASSED!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'cde 10/20/2022 21:20:53'!
PASSED!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'cde 10/20/2022 21:20:53'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'cde 10/20/2022 21:20:53'!
PASSED!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'cde 10/20/2022 21:20:53'!
PASSED!

----SNAPSHOT----(20 October 2022 21:21:09) CuisUniversity-5481.image priorSource: 7364813!

----STARTUP---- (20 October 2022 21:41:40) as /home/clinux01/Escritorio/linux64/CuisUniversity-5481.image!

!AccountTransaction class methodsFor: 'instance creation' stamp: 'MO 10/20/2022 21:47:28'!
for: aValue

	^ self new initializeFor: aValue ! !

!methodRemoval: Deposit class #for: stamp: 'MO 10/20/2022 21:47:28'!
for: aValue

	^ self new initializeFor: aValue !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'MO 10/20/2022 21:47:30'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'MO 10/20/2022 21:47:30'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'MO 10/20/2022 21:47:30'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'MO 10/20/2022 21:47:30'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'MO 10/20/2022 21:47:30'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'MO 10/20/2022 21:47:30'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'MO 10/20/2022 21:47:30'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'MO 10/20/2022 21:47:30'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'MO 10/20/2022 21:47:30'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'MO 10/20/2022 21:47:30'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'MO 10/20/2022 21:47:30'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'MO 10/20/2022 21:47:30'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'MO 10/20/2022 21:47:30'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'MO 10/20/2022 21:47:30'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'MO 10/20/2022 21:47:30'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/20/2022 21:47:31'!
PASSED!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'MO 10/20/2022 21:47:31'!
PASSED!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'MO 10/20/2022 21:47:31'!
PASSED!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'MO 10/20/2022 21:47:31'!
PASSED!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'MO 10/20/2022 21:47:31'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'MO 10/20/2022 21:47:31'!
PASSED!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/20/2022 21:47:31'!
PASSED!
!AccountTransaction class methodsFor: 'instance creation' stamp: 'MO 10/20/2022 21:47:43' prior: 50562400!
for: aValue

	^ self new initializeFor: aValue ! !

!methodRemoval: Withdraw class #for: stamp: 'MO 10/20/2022 21:47:43'!
for: aValue

	^ self new initializeFor: aValue !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'MO 10/20/2022 21:47:54'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'MO 10/20/2022 21:47:54'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'MO 10/20/2022 21:47:54'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'MO 10/20/2022 21:47:54'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'MO 10/20/2022 21:47:54'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'MO 10/20/2022 21:47:54'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'MO 10/20/2022 21:47:54'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'MO 10/20/2022 21:47:54'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'MO 10/20/2022 21:47:54'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'MO 10/20/2022 21:47:54'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'MO 10/20/2022 21:47:54'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'MO 10/20/2022 21:47:54'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'MO 10/20/2022 21:47:54'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'MO 10/20/2022 21:47:54'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'MO 10/20/2022 21:47:54'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/20/2022 21:47:54'!
PASSED!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'MO 10/20/2022 21:47:54'!
PASSED!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'MO 10/20/2022 21:47:54'!
PASSED!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'MO 10/20/2022 21:47:54'!
PASSED!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'MO 10/20/2022 21:47:54'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'MO 10/20/2022 21:47:54'!
PASSED!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/20/2022 21:47:54'!
PASSED!

!classDefinition: #Deposit category: 'Portfolio-Solucion' stamp: 'MO 10/20/2022 21:49:38'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: 'Portfolio-Solucion' stamp: 'MO 10/20/2022 21:49:38'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountTransaction category: 'Portfolio-Solucion' stamp: 'MO 10/20/2022 21:49:38'!
Object subclass: #AccountTransaction
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'registerTransaction' stamp: 'MO 10/20/2022 21:52:23'!
initializeFor: aValue

	value := aValue! !

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'MO 10/20/2022 21:59:43'!
Object subclass: #Transfer
	instanceVariableNames: 'value sendingAccount receivingAccount senderAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'MO 10/20/2022 21:59:44'!
Object subclass: #Transfer
	instanceVariableNames: 'value sendingAccount receivingAccount senderAccount receiverAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'initialization' stamp: 'MO 10/20/2022 21:59:32'!
initializeFor: aValue forSender: aSenderAccount forReceiver: aReceiverAccount

	value := aValue.
	senderAccount := aSenderAccount.
	receiverAccount := aReceiverAccount! !

Object subclass: #Transfer
	instanceVariableNames: 'value senderAccount receiverAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'MO 10/20/2022 21:59:57'!
Object subclass: #Transfer
	instanceVariableNames: 'value senderAccount receiverAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer class methodsFor: 'instance creation' stamp: 'MO 10/20/2022 22:02:20'!
register: aValue from: aSenderAccount to: aReceiverAccount

	| transaction |
	
	transaction := self new 	initializeFor: aValue forSender: aSenderAccount forReceiver: aReceiverAccount.
	
	aSenderAccount register: transaction.
	aReceiverAccount register: transaction.
	
	^ transaction
	
	"value := aValue.
	senderAccount := aSendingAccount.
	receiverAccount := aReceptiveAccount.
	
	Withdraw register: aValue on: aSendingAccount.
	Deposit register: aValue on: aReceptiveAccount.
	
	aSendingAccount registerTransference: self.
	aReceptiveAccount registerTransference: self."! !

----STARTUP---- (21 October 2022 15:12:21) as C:\Users\maria\Desktop\Facultad\Taller\Inge1\CuisUniversity-windows64\CuisUniversity-5481.image!


----End fileIn of C:\Users\maria\Desktop\Portfolio-Solucion.st----!

!methodRemoval: Transfer #initializeFor: stamp: 'MO 10/21/2022 15:17:10'!
initializeFor: aValue

	value := aValue!
!Transfer methodsFor: 'initialization' stamp: 'MO 10/21/2022 15:18:34'!
initializeForValue: aValue forSender: aSenderAccount forReceiver: aReceiverAccount

	value := aValue.
	senderAccount := aSenderAccount.
	receiverAccount := aReceiverAccount! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'MO 10/21/2022 15:18:40' prior: 50565026!
register: aValue from: aSenderAccount to: aReceiverAccount

	| transaction |
	
	transaction := self new 	initializeForValue: aValue forSender: aSenderAccount forReceiver: aReceiverAccount.
	
	aSenderAccount register: transaction.
	aReceiverAccount register: transaction.
	
	^ transaction
	
	"value := aValue.
	senderAccount := aSendingAccount.
	receiverAccount := aReceptiveAccount.
	
	Withdraw register: aValue on: aSendingAccount.
	Deposit register: aValue on: aReceptiveAccount.
	
	aSendingAccount registerTransference: self.
	aReceptiveAccount registerTransference: self."! !

!methodRemoval: Transfer #initializeFor:forSender:forReceiver: stamp: 'MO 10/21/2022 15:18:41'!
initializeFor: aValue forSender: aSenderAccount forReceiver: aReceiverAccount

	value := aValue.
	senderAccount := aSenderAccount.
	receiverAccount := aReceiverAccount!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'MO 10/21/2022 15:18:58'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'MO 10/21/2022 15:19:02'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'MO 10/21/2022 15:19:03'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'MO 10/21/2022 15:19:03'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'MO 10/21/2022 15:19:03'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'MO 10/21/2022 15:19:03'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'MO 10/21/2022 15:19:03'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'MO 10/21/2022 15:19:03'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'MO 10/21/2022 15:19:03'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'MO 10/21/2022 15:19:03'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'MO 10/21/2022 15:19:03'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'MO 10/21/2022 15:19:03'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'MO 10/21/2022 15:19:03'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'MO 10/21/2022 15:19:03'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'MO 10/21/2022 15:19:03'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'MO 10/21/2022 15:19:03'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/21/2022 15:19:04'!
PASSED!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'MO 10/21/2022 15:19:04'!
PASSED!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'MO 10/21/2022 15:19:04'!
PASSED!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'MO 10/21/2022 15:19:04'!
PASSED!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'MO 10/21/2022 15:19:04'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'MO 10/21/2022 15:19:04'!
PASSED!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/21/2022 15:19:04'!
PASSED!

!methodRemoval: Transfer #register:from:to: stamp: 'MO 10/21/2022 15:21:24'!
register: aValue from: aSendingAccount to: aReceptiveAccount
	
	value := aValue.
	sendingAccount := aSendingAccount.
	receivingAccount := aReceptiveAccount.
	
	Withdraw register: aValue on: aSendingAccount.
	Deposit register: aValue on: aReceptiveAccount.
	
	aSendingAccount registerTransference: self.
	aReceptiveAccount registerTransference: self.!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'MO 10/21/2022 15:21:29'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'MO 10/21/2022 15:21:29'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'MO 10/21/2022 15:21:29'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'MO 10/21/2022 15:21:29'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'MO 10/21/2022 15:21:29'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'MO 10/21/2022 15:21:29'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'MO 10/21/2022 15:21:29'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'MO 10/21/2022 15:21:29'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'MO 10/21/2022 15:21:29'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'MO 10/21/2022 15:21:29'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'MO 10/21/2022 15:21:29'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'MO 10/21/2022 15:21:29'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'MO 10/21/2022 15:21:29'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'MO 10/21/2022 15:21:30'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'MO 10/21/2022 15:21:30'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/21/2022 15:21:30'!
ERROR!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'MO 10/21/2022 15:21:30'!
ERROR!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'MO 10/21/2022 15:21:30'!
ERROR!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'MO 10/21/2022 15:21:30'!
ERROR!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'MO 10/21/2022 15:21:30'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'MO 10/21/2022 15:21:30'!
PASSED!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/21/2022 15:21:30'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/21/2022 15:22:10' prior: 50564395!
test16AccountCanTransferToAnotherAccountCorrectly

	| anotherFuckingAccount aMothefuckingAccount |
	
	aMothefuckingAccount := ReceptiveAccount new.
	anotherFuckingAccount := ReceptiveAccount new.

	Transfer register: 50 from: aMothefuckingAccount to: anotherFuckingAccount.
	
	self assert: aMothefuckingAccount balance equals: (-50).
	self assert: anotherFuckingAccount balance equals: 50! !

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/21/2022 15:22:13'!
ERROR!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/21/2022 15:22:13'!
ERROR!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/21/2022 15:25:23'!
ERROR!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/21/2022 15:25:23'!
ERROR!

----STARTUP---- (21 October 2022 15:27:36) as C:\Users\maria\Desktop\Facultad\Taller\Inge1\CuisUniversity-windows64\CuisUniversity-5481.image!

!Transfer class methodsFor: 'as yet unclassified' stamp: 'MO 10/21/2022 15:28:26'!
register: aValue from: aSenderAccount to: aReceiverAccount

	| transaction |
	
	transaction := self new 	initializeForValue: aValue forSender: aSenderAccount forReceiver: aReceiverAccount.
	
	aSenderAccount register: transaction.
	aReceiverAccount register: transaction.
	
	^ transaction! !

Object subclass: #Transfer
	instanceVariableNames: 'value senderAccount receiverAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'MO 10/21/2022 15:29:21'!
Object subclass: #Transfer
	instanceVariableNames: 'value senderAccount receiverAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'registerTransaction' stamp: 'MO 10/21/2022 15:30:01'!
initializeForValue: aValue forSender: aSenderAccount forReceiver: aReceiverAccount

	value := aValue.
	senderAccount  := aSenderAccount.
	receiverAccount := aReceiverAccount! !
!Transfer class methodsFor: 'instance creation' stamp: 'MO 10/21/2022 15:31:42' prior: 50565320!
register: aValue from: aSenderAccount to: aReceiverAccount

	| transaction |
	
	transaction := self new 	initializeForValue: aValue forSender: aSenderAccount forReceiver: aReceiverAccount.
	
	Withdraw register: aValue on: aSenderAccount.
	Deposit register: aValue on: aReceiverAccount.
	
	"aSenderAccount register: transaction.
	aReceiverAccount register: transaction."
	
	^ transaction! !

!methodRemoval: Transfer #register:from:to: stamp: 'MO 10/21/2022 15:32:19'!
register: aValue from: aSendingAccount to: aReceptiveAccount
	
	value := aValue.
	sendingAccount := aSendingAccount.
	receivingAccount := aReceptiveAccount.
	
	Withdraw register: aValue on: aSendingAccount.
	Deposit register: aValue on: aReceptiveAccount.
	
	aSendingAccount registerTransference: self.
	aReceptiveAccount registerTransference: self.!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/21/2022 15:33:00'!
ERROR!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/21/2022 15:33:01'!
ERROR!
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/21/2022 15:33:14' prior: 50560983!
test16AccountCanTransferToAnotherAccountCorrectly

	| anotherFuckingAccount aMothefuckingAccount |
	
	aMothefuckingAccount := ReceptiveAccount new.
	anotherFuckingAccount := ReceptiveAccount new.
	
	Transfer register: 50 from: aMothefuckingAccount to: anotherFuckingAccount.
	
	self assert: aMothefuckingAccount balance equals: (-50).
	self assert: anotherFuckingAccount balance equals: 50! !

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/21/2022 15:33:19'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/21/2022 15:34:28' prior: 50560964!
test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly

	| anotherFuckingAccount aMothefuckingAccount portfolio|
	
	aMothefuckingAccount := ReceptiveAccount new.
	anotherFuckingAccount := ReceptiveAccount new.
	portfolio := Portfolio new.
	portfolio add: anotherFuckingAccount.

	Transfer register: 50 from: aMothefuckingAccount to: anotherFuckingAccount.
	
	self assert: aMothefuckingAccount balance equals: (-50).
	self assert: anotherFuckingAccount balance equals: 50! !
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/21/2022 15:34:34' prior: 50565409!
test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly

	| anotherFuckingAccount aMothefuckingAccount portfolio |
	
	aMothefuckingAccount := ReceptiveAccount new.
	anotherFuckingAccount := ReceptiveAccount new.
	portfolio := Portfolio new.
	portfolio add: anotherFuckingAccount.

	Transfer register: 50 from: aMothefuckingAccount to: anotherFuckingAccount.
	
	self assert: aMothefuckingAccount balance equals: (-50).
	self assert: anotherFuckingAccount balance equals: 50! !

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'MO 10/21/2022 15:34:36'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'MO 10/21/2022 15:34:37'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'MO 10/21/2022 15:34:37'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'MO 10/21/2022 15:34:37'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'MO 10/21/2022 15:34:37'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'MO 10/21/2022 15:34:37'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'MO 10/21/2022 15:34:37'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'MO 10/21/2022 15:34:37'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'MO 10/21/2022 15:34:37'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'MO 10/21/2022 15:34:37'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'MO 10/21/2022 15:34:37'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'MO 10/21/2022 15:34:37'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'MO 10/21/2022 15:34:37'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'MO 10/21/2022 15:34:37'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'MO 10/21/2022 15:34:37'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'MO 10/21/2022 15:34:37'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/21/2022 15:34:37'!
PASSED!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'MO 10/21/2022 15:34:37'!
PASSED!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'MO 10/21/2022 15:34:37'!
ERROR!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'MO 10/21/2022 15:34:37'!
ERROR!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'MO 10/21/2022 15:34:37'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'MO 10/21/2022 15:34:37'!
PASSED!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/21/2022 15:34:37'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/21/2022 15:35:07' prior: 50560949!
test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount

	| anotherFuckingAccount aMothefuckingAccount anOperation |
	
	aMothefuckingAccount := ReceptiveAccount new.
	anotherFuckingAccount := ReceptiveAccount new.
	
	anOperation := Transfer register: 50 from: aMothefuckingAccount to: anotherFuckingAccount.
	
	self assert: (aMothefuckingAccount hasRegisteredTransfer: anOperation)! !
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/21/2022 15:35:52' prior: 50560933!
test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount

	| anotherFuckingAccount aMothefuckingAccount anOperation |
	
	aMothefuckingAccount := ReceptiveAccount new.
	anotherFuckingAccount := ReceptiveAccount new.
	
	anOperation := Transfer register: 50 from: aMothefuckingAccount to: anotherFuckingAccount.
	
	self assert: (anotherFuckingAccount hasRegisteredTransfer: anOperation)! !

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'MO 10/21/2022 15:35:55'!
FAILURE!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'MO 10/21/2022 15:35:55'!
FAILURE!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'MO 10/21/2022 15:36:00'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'MO 10/21/2022 15:36:00'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'MO 10/21/2022 15:36:00'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'MO 10/21/2022 15:36:00'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'MO 10/21/2022 15:36:00'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'MO 10/21/2022 15:36:00'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'MO 10/21/2022 15:36:00'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'MO 10/21/2022 15:36:00'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'MO 10/21/2022 15:36:00'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'MO 10/21/2022 15:36:00'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'MO 10/21/2022 15:36:00'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'MO 10/21/2022 15:36:00'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'MO 10/21/2022 15:36:00'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'MO 10/21/2022 15:36:00'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'MO 10/21/2022 15:36:00'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/21/2022 15:36:00'!
PASSED!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'MO 10/21/2022 15:36:00'!
PASSED!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'MO 10/21/2022 15:36:00'!
FAILURE!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'MO 10/21/2022 15:36:00'!
FAILURE!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'MO 10/21/2022 15:36:00'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'MO 10/21/2022 15:36:01'!
PASSED!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/21/2022 15:36:01'!
PASSED!
!ReceptiveAccount methodsFor: 'balance' stamp: 'HAW 5/25/2019 11:24:46' prior: 50562270 overrides: 50559962!
balance

	^transactions 
		inject: 0
		into: [ :currentBalance :transaction | transaction affectBalance: currentBalance ]! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'cde 10/20/2022 21:20:45' prior: 50565662 overrides: 50559962!
balance
	|transactionsBalance transferencesBalance|
	
	transactionsBalance := self balanceOfTransactions.
	transferencesBalance := 0."self balanceOfTransferences"
	^ transactionsBalance + transferencesBalance ! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'MO 10/21/2022 15:42:29' prior: 50565670 overrides: 50559962!
balance
	|transactionsBalance transferencesBalance|
	
	transactionsBalance := self balanceOfTransactions.
	transferencesBalance := self balanceOfTransferences.
	
	^ transactionsBalance + transferencesBalance ! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'HAW 5/25/2019 11:24:46' prior: 50565681 overrides: 50559962!
balance

	^transactions 
		inject: 0
		into: [ :currentBalance :transaction | transaction affectBalance: currentBalance ]! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'MO 10/21/2022 15:45:12' prior: 50565692 overrides: 50559962!
balance

	^transactions 
		inject: 0
		into: [ :currentBalance :transaction | transaction affectBalance: currentBalance forAccount: anAccount ]! !
!Deposit methodsFor: 'balance' stamp: 'MO 10/21/2022 15:47:10'!
affectBalance: aBalance forAccount: anAccount

	^aBalance + value ! !
!Withdraw methodsFor: 'balance' stamp: 'MO 10/21/2022 15:47:32'!
affectBalance: aBalance forAccount: anAccount
	
	^aBalance - value! !
!Transfer methodsFor: 'balance' stamp: 'MO 10/21/2022 15:49:49'!
affectBalance: aBalance forAccount: anAccount

	(anAccount = senderAccount)   ifTrue: [^ aBalance - value].
	(anAccount = receiverAccount) ifTrue: [^ aBalance + value].
	^ 0! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'MO 10/21/2022 15:50:52' prior: 50565700 overrides: 50559962!
balance

	^transactions 
		inject: 0
		into: [ :currentBalance :transaction | transaction affectBalance: currentBalance forAccount: self ]! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'MO 10/21/2022 15:51:10' prior: 50565726 overrides: 50559962!
balance

	^ transactions 
		inject: 0
		into: [ :currentBalance :transaction | transaction affectBalance: currentBalance forAccount: self ]! !
!Withdraw methodsFor: 'balance' stamp: 'MO 10/21/2022 15:51:51' prior: 50565712!
affectBalance: aBalance forAccount: anAccount
	
	^ aBalance - value! !

!methodRemoval: ReceptiveAccount #balanceOfTransactions stamp: 'MO 10/21/2022 15:52:17'!
balanceOfTransactions
	^transactions 
			inject: 0
			into: [ :currentBalance :transaction | transaction affectBalance: currentBalance ]

	!

!methodRemoval: ReceptiveAccount #balanceOfTransferences stamp: 'MO 10/21/2022 15:52:20'!
balanceOfTransferences
	^transactions 
			inject: 0
			into: [ :currentBalance :transference | (transference receivingAccount = self) ifTrue: [transference value] 
				ifFalse: [transference value * (-1)]  ].

	!

!methodRemoval: Withdraw #affectBalance: stamp: 'MO 10/21/2022 15:52:24'!
affectBalance: aBalance

	^aBalance - value!

!methodRemoval: Deposit #affectBalance: stamp: 'MO 10/21/2022 15:52:50'!
affectBalance: aBalance

	^aBalance + value !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'MO 10/21/2022 15:53:56'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'MO 10/21/2022 15:53:56'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'MO 10/21/2022 15:53:56'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'MO 10/21/2022 15:53:56'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'MO 10/21/2022 15:53:56'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'MO 10/21/2022 15:53:56'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'MO 10/21/2022 15:53:56'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'MO 10/21/2022 15:53:56'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'MO 10/21/2022 15:53:56'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'MO 10/21/2022 15:53:56'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'MO 10/21/2022 15:53:56'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'MO 10/21/2022 15:53:56'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'MO 10/21/2022 15:53:56'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'MO 10/21/2022 15:53:56'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'MO 10/21/2022 15:53:56'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/21/2022 15:53:56'!
PASSED!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'MO 10/21/2022 15:53:56'!
PASSED!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'MO 10/21/2022 15:53:56'!
FAILURE!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'MO 10/21/2022 15:53:56'!
FAILURE!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'MO 10/21/2022 15:53:56'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'MO 10/21/2022 15:53:56'!
PASSED!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/21/2022 15:53:57'!
PASSED!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'MO 10/21/2022 15:56:25'!
FAILURE!
!Transfer class methodsFor: 'instance creation' stamp: 'MO 10/21/2022 15:56:52' prior: 50565354!
register: aValue from: aSenderAccount to: aReceiverAccount

	| transaction |
	
	transaction := self new 	initializeForValue: aValue forSender: aSenderAccount forReceiver: aReceiverAccount.
	
	aSenderAccount register: transaction.
	aReceiverAccount register: transaction.
	
	^ transaction! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'MO 10/21/2022 15:57:00'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'MO 10/21/2022 15:57:00'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'MO 10/21/2022 15:57:00'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'MO 10/21/2022 15:57:00'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'MO 10/21/2022 15:57:00'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'MO 10/21/2022 15:57:00'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'MO 10/21/2022 15:57:00'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'MO 10/21/2022 15:57:00'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'MO 10/21/2022 15:57:00'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'MO 10/21/2022 15:57:00'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'MO 10/21/2022 15:57:00'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'MO 10/21/2022 15:57:00'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'MO 10/21/2022 15:57:01'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'MO 10/21/2022 15:57:01'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'MO 10/21/2022 15:57:01'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/21/2022 15:57:01'!
PASSED!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'MO 10/21/2022 15:57:01'!
PASSED!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'MO 10/21/2022 15:57:01'!
FAILURE!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'MO 10/21/2022 15:57:01'!
FAILURE!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'MO 10/21/2022 15:57:01'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'MO 10/21/2022 15:57:01'!
PASSED!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/21/2022 15:57:01'!
PASSED!

Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Solucion' stamp: 'MO 10/21/2022 15:58:59'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!methodRemoval: ReceptiveAccount #registerTransference: stamp: 'MO 10/21/2022 15:59:18'!
registerTransference: aTransference

	transferences add: aTransference 
!

!methodRemoval: ReceptiveAccount #transferences stamp: 'MO 10/21/2022 16:00:52'!
transferences 

	^ transferences copy!
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/21/2022 16:02:15' prior: 50565536!
test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount

	| anotherFuckingAccount aMothefuckingAccount aTransfer |
	
	aMothefuckingAccount := ReceptiveAccount new.
	anotherFuckingAccount := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 from: aMothefuckingAccount to: anotherFuckingAccount.
	
	self assert: (aMothefuckingAccount transactions includes: aTransfer)
! !
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/21/2022 16:02:34' prior: 50565551!
test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount

	| anotherFuckingAccount aMothefuckingAccount aTransfer |
	
	aMothefuckingAccount := ReceptiveAccount new.
	anotherFuckingAccount := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 from: aMothefuckingAccount to: anotherFuckingAccount.
	
	self assert: (aMothefuckingAccount transactions includes: aTransfer)! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'MO 10/21/2022 16:02:45'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'MO 10/21/2022 16:02:45'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'MO 10/21/2022 16:02:45'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'MO 10/21/2022 16:02:45'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'MO 10/21/2022 16:02:46'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'MO 10/21/2022 16:02:46'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'MO 10/21/2022 16:02:46'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'MO 10/21/2022 16:02:46'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'MO 10/21/2022 16:02:46'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'MO 10/21/2022 16:02:46'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'MO 10/21/2022 16:02:46'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'MO 10/21/2022 16:02:46'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'MO 10/21/2022 16:02:46'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'MO 10/21/2022 16:02:46'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'MO 10/21/2022 16:02:46'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/21/2022 16:02:46'!
PASSED!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'MO 10/21/2022 16:02:46'!
PASSED!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'MO 10/21/2022 16:02:46'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'MO 10/21/2022 16:02:46'!
PASSED!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/21/2022 16:02:46'!
PASSED!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'MO 10/21/2022 16:02:46'!
PASSED!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'MO 10/21/2022 16:02:46'!
PASSED!

!methodRemoval: ReceptiveAccount #hasRegisteredTransfer: stamp: 'MO 10/21/2022 16:03:21'!
hasRegisteredTransfer: aTransference

	^ transferences includes: aTransference 
!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'MO 10/21/2022 16:04:43'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'MO 10/21/2022 16:04:43'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'MO 10/21/2022 16:04:43'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'MO 10/21/2022 16:04:43'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'MO 10/21/2022 16:04:43'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'MO 10/21/2022 16:04:43'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'MO 10/21/2022 16:04:43'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'MO 10/21/2022 16:04:43'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'MO 10/21/2022 16:04:43'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'MO 10/21/2022 16:04:43'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'MO 10/21/2022 16:04:43'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'MO 10/21/2022 16:04:44'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'MO 10/21/2022 16:04:44'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'MO 10/21/2022 16:04:44'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'MO 10/21/2022 16:04:44'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/21/2022 16:04:44'!
PASSED!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'MO 10/21/2022 16:04:44'!
PASSED!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'MO 10/21/2022 16:04:44'!
PASSED!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'MO 10/21/2022 16:04:44'!
PASSED!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'MO 10/21/2022 16:04:44'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'MO 10/21/2022 16:04:44'!
PASSED!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/21/2022 16:04:44'!
PASSED!

AccountTransaction subclass: #Transfer
	instanceVariableNames: 'value senderAccount receiverAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'MO 10/21/2022 16:05:11'!
AccountTransaction subclass: #Transfer
	instanceVariableNames: 'value senderAccount receiverAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Deposit category: 'Portfolio-Solucion' stamp: 'MO 10/21/2022 16:05:27'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: 'Portfolio-Solucion' stamp: 'MO 10/21/2022 16:05:27'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'MO 10/21/2022 16:05:27'!
AccountTransaction subclass: #Transfer
	instanceVariableNames: 'senderAccount receiverAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountTransaction category: 'Portfolio-Solucion' stamp: 'MO 10/21/2022 16:05:27'!
Object subclass: #AccountTransaction
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountTransaction methodsFor: 'balance' stamp: 'MO 10/21/2022 16:05:46'!
affectBalance: aBalance forAccount: anAccount

	self subclassResponsibility ! !

!methodRemoval: AccountTransaction #affectBalance: stamp: 'MO 10/21/2022 16:05:50'!
affectBalance: aBalance

	self subclassResponsibility !

!methodRemoval: Transfer #receivingAccount stamp: 'MO 10/21/2022 16:06:29'!
receivingAccount
	^ receivingAccount copy.!

!methodRemoval: Transfer #sendingAccount stamp: 'MO 10/21/2022 16:06:33'!
sendingAccount
	^ sendingAccount copy.!
!AccountTransaction methodsFor: 'value' stamp: 'MO 10/21/2022 16:08:01' prior: 50560192 overrides: 16902254!
value

	^ value! !

!methodRemoval: Deposit #value stamp: 'MO 10/21/2022 16:08:01'!
value

	^ value!

!methodRemoval: Transfer #value stamp: 'MO 10/21/2022 16:08:21'!
value
	^ value copy.!

!methodRemoval: Withdraw #value stamp: 'MO 10/21/2022 16:08:27'!
value

	^ value!
!AccountTransaction methodsFor: 'balance' stamp: 'MO 10/21/2022 16:09:45' overrides: 16901837!
asString

	self subclassResponsibility ! !
!Transfer methodsFor: 'printing' stamp: 'MO 10/21/2022 16:11:47' overrides: 50566263!
asString

	^ 'Transferencia y blablabla por ', value asString , '.'. ! !
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/21/2022 16:15:23' prior: 50565427!
test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly

	| aSenderAccount aReceiverAccount portfolio |
	
	aSenderAccount := ReceptiveAccount new.
	aReceiverAccount := ReceptiveAccount new.
	portfolio := Portfolio new.
	portfolio add: aReceiverAccount.

	Transfer register: 50 from: aSenderAccount to: aReceiverAccount.
	
	self assert: aSenderAccount balance equals: (-50).
	self assert: aReceiverAccount balance equals: 50! !

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'MO 10/21/2022 16:15:25'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'MO 10/21/2022 16:15:25'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'MO 10/21/2022 16:15:25'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'MO 10/21/2022 16:15:25'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'MO 10/21/2022 16:15:25'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'MO 10/21/2022 16:15:25'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'MO 10/21/2022 16:15:25'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'MO 10/21/2022 16:15:25'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'MO 10/21/2022 16:15:25'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'MO 10/21/2022 16:15:25'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'MO 10/21/2022 16:15:25'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'MO 10/21/2022 16:15:25'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'MO 10/21/2022 16:15:25'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'MO 10/21/2022 16:15:25'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'MO 10/21/2022 16:15:25'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'MO 10/21/2022 16:15:25'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/21/2022 16:15:25'!
PASSED!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'MO 10/21/2022 16:15:25'!
PASSED!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'MO 10/21/2022 16:15:25'!
PASSED!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'MO 10/21/2022 16:15:25'!
PASSED!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'MO 10/21/2022 16:15:25'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'MO 10/21/2022 16:15:25'!
PASSED!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/21/2022 16:15:25'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/21/2022 16:15:46' prior: 50565981!
test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount

	| aSenderAccount aReceiverAccount aTransfer |
	
	aSenderAccount := ReceptiveAccount new.
	aReceiverAccount := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 from: aSenderAccount to: aReceiverAccount.
	
	self assert: (aSenderAccount transactions includes: aTransfer)
! !

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'MO 10/21/2022 16:15:48'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'MO 10/21/2022 16:15:48'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'MO 10/21/2022 16:15:48'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'MO 10/21/2022 16:15:48'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'MO 10/21/2022 16:15:48'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'MO 10/21/2022 16:15:48'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'MO 10/21/2022 16:15:48'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'MO 10/21/2022 16:15:48'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'MO 10/21/2022 16:15:48'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'MO 10/21/2022 16:15:48'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'MO 10/21/2022 16:15:48'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'MO 10/21/2022 16:15:48'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'MO 10/21/2022 16:15:48'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'MO 10/21/2022 16:15:48'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'MO 10/21/2022 16:15:48'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'MO 10/21/2022 16:15:48'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/21/2022 16:15:48'!
PASSED!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'MO 10/21/2022 16:15:48'!
PASSED!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'MO 10/21/2022 16:15:48'!
PASSED!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'MO 10/21/2022 16:15:48'!
PASSED!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'MO 10/21/2022 16:15:48'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'MO 10/21/2022 16:15:49'!
PASSED!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/21/2022 16:15:49'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/21/2022 16:16:23' prior: 50565996!
test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount

	| aSenderAccount aReceiverAccount aTransfer |
	
	aSenderAccount := ReceptiveAccount new.
	aReceiverAccount := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 from: aSenderAccount to: aReceiverAccount.
	
	self assert: (aReceiverAccount transactions includes: aTransfer)! !

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'MO 10/21/2022 16:16:25'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'MO 10/21/2022 16:16:25'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'MO 10/21/2022 16:16:25'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'MO 10/21/2022 16:16:25'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'MO 10/21/2022 16:16:25'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'MO 10/21/2022 16:16:25'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'MO 10/21/2022 16:16:25'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'MO 10/21/2022 16:16:25'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'MO 10/21/2022 16:16:25'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'MO 10/21/2022 16:16:25'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'MO 10/21/2022 16:16:25'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'MO 10/21/2022 16:16:25'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'MO 10/21/2022 16:16:25'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'MO 10/21/2022 16:16:25'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'MO 10/21/2022 16:16:25'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'MO 10/21/2022 16:16:25'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/21/2022 16:16:26'!
PASSED!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'MO 10/21/2022 16:16:26'!
PASSED!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'MO 10/21/2022 16:16:26'!
PASSED!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'MO 10/21/2022 16:16:26'!
PASSED!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'MO 10/21/2022 16:16:26'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'MO 10/21/2022 16:16:26'!
PASSED!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/21/2022 16:16:26'!
PASSED!

----QUIT----(21 October 2022 16:17:34) CuisUniversity-5481.image priorSource: 7383742!

----STARTUP---- (23 October 2022 21:36:39) as C:\Users\maria\Desktop\Facultad\Taller\Inge1\CuisUniversity-windows64\CuisUniversity-5481.image!


!classDefinition: #PortfolioTest category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:36:44'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #PortfolioTest category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:36:44'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/25/2019 11:16:26' prior: 50559559!
test01BalanceOfPortfolioWithoutAccountsIsZero

	self assert: 0 equals: Portfolio new balance! !
!PortfolioTest methodsFor: 'tests' stamp: 'NR 5/27/2021 17:36:04' prior: 50559565!
test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance

	| account portfolio |
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	portfolio := Portfolio with: account.
	
	self assert: account balance equals: portfolio balance! !
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/25/2019 11:23:25' prior: 50559576!
test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios

	| simplePortfolioAccount simplePortfolio composedPortfolioAccount composedPortofolio |
	
	simplePortfolioAccount := ReceptiveAccount new.
	Deposit register: 100 on: simplePortfolioAccount.
	simplePortfolio := Portfolio with: simplePortfolioAccount.
	
	composedPortfolioAccount := ReceptiveAccount new.
	Withdraw register: 50 on: composedPortfolioAccount.
	composedPortofolio := Portfolio with: simplePortfolio with: composedPortfolioAccount.
	
	self assert: (composedPortfolioAccount balance + simplePortfolio balance) equals: composedPortofolio balance! !
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/25/2019 11:43:15' prior: 50559598!
test04PortfolioWithoutAccountsHasNoRegisteredTransaction

	self deny: (Portfolio new hasRegistered: (Deposit for: 100))! !
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/25/2019 11:43:11' prior: 50559604!
test05PortfolioHasRegisteredItsAccountsTransactions

	| account portfolio deposit |
	
	account := ReceptiveAccount new.
	deposit := Deposit register: 100 on: account.
	portfolio := Portfolio with: account.
	
	self assert: (portfolio hasRegistered: deposit)! !
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/25/2019 11:58:06' prior: 50559615!
test06PortfolioLooksForRegisteredTransactionsRecursively

	| simplePortfolioAccount simplePortfolio composedPortfolioAccount composedPortfolio composedPortfolioAccountWithdraw simplePortfolioAccountDeposit |
	
	simplePortfolioAccount := ReceptiveAccount new.
	simplePortfolioAccountDeposit := Deposit register: 100 on: simplePortfolioAccount.
	simplePortfolio := Portfolio with: simplePortfolioAccount.
	
	composedPortfolioAccount := ReceptiveAccount new.
	composedPortfolioAccountWithdraw := Withdraw register: 50 on: composedPortfolioAccount.
	composedPortfolio := Portfolio with: simplePortfolio with: composedPortfolioAccount.
	
	self assert: (composedPortfolio hasRegistered: simplePortfolioAccountDeposit).
	self assert: (composedPortfolio hasRegistered: composedPortfolioAccountWithdraw)! !
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/25/2019 11:58:10' prior: 50559643!
test07PortfolioHasNoTransactionWhenHasNoAccounts

	self assert: Portfolio new transactions isEmpty! !
!PortfolioTest methodsFor: 'tests' stamp: 'NR 6/22/2020 07:31:19' prior: 50559649!
test08PortfolioTransactionsIncludesAllItsAccountsTransactions

	| account portfolio accountDeposit anotherAccount portfolioTransactions anotherAccountWithdraw |
	
	account := ReceptiveAccount new.
	accountDeposit := Deposit register: 100 on: account.
	anotherAccount := ReceptiveAccount new.
	anotherAccountWithdraw := Withdraw register: 100 on: account.
	portfolio := Portfolio with: account.
	
	portfolioTransactions := portfolio transactions.
	
	self assert: 2 equals: portfolioTransactions size.
	self assert: (portfolioTransactions includes: accountDeposit).
	self assert: (portfolioTransactions includes: anotherAccountWithdraw)! !
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/25/2019 11:58:20' prior: 50559672!
test09PortfolioTransactionsAreCalculatedRecursively

	| simplePortfolioAccount simplePortfolio composedPortfolioAccount composedPortfolio composedPortfolioAccountWithdraw simplePortfolioAccountDeposit composedPortfolioTransactions |
	
	simplePortfolioAccount := ReceptiveAccount new.
	simplePortfolioAccountDeposit := Deposit register: 100 on: simplePortfolioAccount.
	simplePortfolio := Portfolio with: simplePortfolioAccount.
	
	composedPortfolioAccount := ReceptiveAccount new.
	composedPortfolioAccountWithdraw := Withdraw register: 50 on: composedPortfolioAccount.
	composedPortfolio := Portfolio with: simplePortfolio with: composedPortfolioAccount.
	
	composedPortfolioTransactions := composedPortfolio transactions.
	self assert: 2 equals: composedPortfolioTransactions size.
	self assert: (composedPortfolioTransactions includes: simplePortfolioAccountDeposit).
	self assert: (composedPortfolioTransactions includes: composedPortfolioAccountWithdraw)! !
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/25/2019 11:58:24' prior: 50559705!
test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce

	| account portfolio |
	
	account := ReceptiveAccount new.
	portfolio := Portfolio with: account.
	
	self 
		should: [ portfolio add: account ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: Portfolio canNotAddAccountErrorMessage equals: anError messageText.
			self assert: 1 equals: portfolio accountsSize.
			self assert: (portfolio accountsIncludes: account) ]! !
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/25/2019 11:58:28' prior: 50559722!
test11PortfolioCanNotIncludeAccountOfItsPortfolios

	| account simplePortfolio composedPortfolio |
	
	account := ReceptiveAccount new.
	simplePortfolio := Portfolio with: account.
	composedPortfolio := Portfolio with: simplePortfolio.
	
	self 
		should: [ composedPortfolio add: account ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: Portfolio canNotAddAccountErrorMessage equals: anError messageText.
			self assert: 1 equals: composedPortfolio accountsSize.
			self assert: (composedPortfolio accountsIncludes: simplePortfolio) ]! !
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/25/2019 11:58:32' prior: 50559743!
test12PortfolioCanNotIncludeItself

	| account simplePortfolio |
	
	account := ReceptiveAccount new.
	simplePortfolio := Portfolio with: account.
	
	self 
		should: [ simplePortfolio add: simplePortfolio ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: Portfolio canNotAddAccountErrorMessage equals: anError messageText.
			self assert: 1 equals: simplePortfolio accountsSize.
			self assert: (simplePortfolio accountsIncludes: account) ]! !
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/25/2019 12:01:51' prior: 50559761!
test13ComposedPortfolioCanNotHaveParentPortfolioAccount

	| account simplePortfolio composedPortfolio |
	
	account := ReceptiveAccount new.
	simplePortfolio := Portfolio new.
	composedPortfolio := Portfolio with: simplePortfolio.
	composedPortfolio add: account.
	
	self 
		should: [ simplePortfolio add: account ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: Portfolio canNotAddAccountErrorMessage equals: anError messageText.
			self assert: simplePortfolio accountsIsEmpty ]! !
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/25/2019 12:12:16' prior: 50559780!
test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively

	| account leftParentPortfolio leftRootParentPortfolio portfolio rightParentPortfolio rightRootParentPortfolio |
	
	account := ReceptiveAccount new.
	portfolio := Portfolio new.
	leftParentPortfolio := Portfolio with: portfolio .
	leftRootParentPortfolio := Portfolio with: leftParentPortfolio.
	leftRootParentPortfolio add: account.
	
	rightParentPortfolio := Portfolio with: portfolio .
	rightRootParentPortfolio := Portfolio with: rightParentPortfolio.
	rightRootParentPortfolio add: account.

	self 
		should: [ portfolio add: account ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: Portfolio canNotAddAccountErrorMessage equals: anError messageText.
			self assert: portfolio accountsIsEmpty ]! !
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/29/2019 16:31:18' prior: 50559808!
test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd

	| portfolioToAdd portfolioToModify rootPortfolio sharedAccount |
	
	sharedAccount := ReceptiveAccount new.
	portfolioToModify := Portfolio new.
	rootPortfolio := Portfolio with: sharedAccount with: portfolioToModify.
	portfolioToAdd := Portfolio with: sharedAccount.
	
	self 
		should: [ portfolioToModify add: portfolioToAdd ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError | 
			self assert: Portfolio canNotAddAccountErrorMessage equals: anError messageText.
			self assert: portfolioToModify accountsIsEmpty ]! !
!PortfolioTest methodsFor: 'tests' stamp: 'cde 10/18/2022 19:45:57' prior: 50565390!
test16AccountCanTransferToAnotherAccountCorrectly

	| anotherFuckingAccount aMothefuckingAccount anOperation|
	
	aMothefuckingAccount := ReceptiveAccount new.
	anotherFuckingAccount := ReceptiveAccount new.
	
	anOperation := Transfer new.
	anOperation register: 50 from: aMothefuckingAccount to: anotherFuckingAccount.
	
	self assert: aMothefuckingAccount balance equals: (-50).
	self assert: anotherFuckingAccount balance equals: 50! !
!PortfolioTest methodsFor: 'tests' stamp: 'cde 10/18/2022 19:45:53' prior: 50566273!
test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly

	| anotherFuckingAccount aMothefuckingAccount anOperation portfolio|
	
	aMothefuckingAccount := ReceptiveAccount new.
	anotherFuckingAccount := ReceptiveAccount new.
	portfolio := Portfolio new.
	portfolio add: anotherFuckingAccount.
	
	anOperation := Transfer new.
	anOperation register: 50 from: aMothefuckingAccount to: anotherFuckingAccount.
	
	self assert: aMothefuckingAccount balance equals: (-50).
	self assert: anotherFuckingAccount balance equals: 50! !
!PortfolioTest methodsFor: 'tests' stamp: 'cde 10/18/2022 19:45:49' prior: 50566380!
test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount

	| anotherFuckingAccount aMothefuckingAccount anOperation |
	
	aMothefuckingAccount := ReceptiveAccount new.
	anotherFuckingAccount := ReceptiveAccount new.
	
	anOperation := Transfer new.
	anOperation register: 50 from: aMothefuckingAccount to: anotherFuckingAccount.
	
	self assert: (aMothefuckingAccount hasRegisteredTransfer: anOperation)! !
!PortfolioTest methodsFor: 'tests' stamp: 'cde 10/18/2022 19:45:46' prior: 50566484!
test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount

	| anotherFuckingAccount aMothefuckingAccount anOperation |
	
	aMothefuckingAccount := ReceptiveAccount new.
	anotherFuckingAccount := ReceptiveAccount new.
	
	anOperation := Transfer new.
	anOperation register: 50 from: aMothefuckingAccount to: anotherFuckingAccount.
	
	self assert: (anotherFuckingAccount hasRegisteredTransfer: anOperation)! !
!PortfolioTest methodsFor: 'tests' stamp: 'cde 10/20/2022 20:31:26' prior: 50561554!
test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements

	| anAccount |
	
	anAccount := ReceptiveAccount new.
	
	self assert: (anAccount accountSummary at: 1) equals: 'Balance = 0.'.! !
!PortfolioTest methodsFor: 'tests' stamp: 'cde 10/20/2022 20:16:22' prior: 50561411!
test21AccountSummaryReturnsListWithOneDeposit

	| anAccount |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 50 on: anAccount. 
	
	self assert: (anAccount accountSummary at: 1) equals: 'Deposito por 50.'.
	self assert: (anAccount accountSummary at: 2) equals: 'Balance = 50.'.! !
!PortfolioTest methodsFor: 'tests' stamp: 'cde 10/20/2022 20:16:16' prior: 50561395!
test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal

	| anAccount |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	Withdraw register: 25 on: anAccount. 
	
	self assert: (anAccount accountSummary at: 1) equals: 'Deposito por 100.'.
	self assert: (anAccount accountSummary at: 2) equals: 'Extraccion por 25.'.
	self assert: (anAccount accountSummary at: 3) equals: 'Balance = 75.'.! !

!classDefinition: #ReceptiveAccountTest category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:36:45'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #ReceptiveAccountTest category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:36:45'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'HAW 5/23/2019 15:19:48' prior: 50559871!
test01ReceptiveAccountHaveZeroAsBalanceWhenCreated 

	| account |
	
	account := ReceptiveAccount new.

	self assert: 0 equals: account balance .
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'HAW 5/23/2019 15:19:54' prior: 50559878!
test02DepositIncreasesBalanceOnTransactionValue 

	| account |
	
	account := ReceptiveAccount  new.
	Deposit register: 100 on: account.
		
	self assert: 100 equals: account balance .
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'HAW 5/23/2019 15:20:02' prior: 50559887!
test03WithdrawDecreasesBalanceOnTransactionValue 

	| account |
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
		
	self assert: 50 equals: account balance .
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'HAW 5/23/2019 15:20:32' prior: 50559897!
test04WithdrawValueMustBePositive 

	| account withdrawValue |
	
	account := ReceptiveAccount new.
	withdrawValue := 50.
	
	self assert: withdrawValue equals: (Withdraw register: withdrawValue on: account) value
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'HAW 5/23/2019 15:20:46' prior: 50559907!
test05ReceptiveAccountKnowsRegisteredTransactions 

	| account deposit withdraw |
	
	account := ReceptiveAccount new.
	deposit := Deposit register: 100 on: account.
	withdraw := Withdraw register: 50 on: account.
		
	self assert: (account hasRegistered: deposit).
	self assert: (account hasRegistered: withdraw).
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'HAW 5/23/2019 15:20:54' prior: 50559920!
test06ReceptiveAccountDoNotKnowNotRegisteredTransactions

	| account deposit withdraw |
	
	account := ReceptiveAccount new.
	deposit :=  Deposit for: 100.
	withdraw := Withdraw for: 50.
		
	self deny: (account hasRegistered: deposit).
	self deny: (account hasRegistered:withdraw).
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'HAW 5/23/2019 15:21:24' prior: 50559932!
test07AccountKnowsItsTransactions 

	| account1 deposit1 |
	
	account1 := ReceptiveAccount new.
	
	deposit1 := Deposit register: 100 on: account1.
		
	self assert: 1 equals: account1 transactions size .
	self assert: (account1 transactions includes: deposit1).
! !

!classDefinition: #Account category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:36:46'!
Object subclass: #Account
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Account category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:36:46'!
Object subclass: #Account
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Account methodsFor: 'testing' stamp: 'HAW 5/25/2019 12:23:47' prior: 50559954!
hasRegistered: aTransaction

	self subclassResponsibility ! !
!Account methodsFor: 'testing' stamp: 'HAW 5/25/2019 12:24:25' prior: 50559958!
isComposedBy: anAccount

	self subclassResponsibility ! !
!Account methodsFor: 'balance' stamp: 'HAW 5/25/2019 12:23:40' prior: 50559962!
balance

	self subclassResponsibility ! !
!Account methodsFor: 'transactions' stamp: 'HAW 5/25/2019 12:23:27' prior: 50559966!
addTransactionsTo: aCollectionOfTransactions

	self subclassResponsibility ! !
!Account methodsFor: 'transactions' stamp: 'HAW 5/25/2019 12:23:15' prior: 50559971!
transactions

	self subclassResponsibility ! !
!Account methodsFor: 'composition' stamp: 'HAW 5/25/2019 12:24:04' prior: 50559975!
addedTo: aPortfolio

	self subclassResponsibility ! !

!classDefinition: #Portfolio category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:36:46'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Portfolio category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:36:46'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Portfolio methodsFor: 'accounts management' stamp: 'HAW 5/25/2019 11:49:20' prior: 50559992!
accountsIncludes: anAccount

	^accounts includes: anAccount ! !
!Portfolio methodsFor: 'accounts management' stamp: 'HAW 5/25/2019 12:05:04' prior: 50559997!
accountsIsEmpty
	
	^accounts isEmpty ! !
!Portfolio methodsFor: 'accounts management' stamp: 'HAW 5/25/2019 11:49:06' prior: 50560001!
accountsSize
	
	^accounts size! !
!Portfolio methodsFor: 'accounts management' stamp: 'HAW 5/25/2019 12:19:20' prior: 50560005!
add: accountToAdd

	self assertCanAdd: accountToAdd.
		
	accounts add: accountToAdd.
	accountToAdd addedTo: self 
	! !
!Portfolio methodsFor: 'accounts management' stamp: 'HAW 5/25/2019 12:17:31' prior: 50560012!
rootParents
	
	| rootParents |
	
	rootParents := Set new.
	self addRootParentsTo: rootParents.
	
	^ rootParents! !
!Portfolio methodsFor: 'initialization' stamp: 'HAW 5/25/2019 12:03:18' prior: 50560019 overrides: 16920235!
initialize

	accounts := OrderedCollection new.
	parents := OrderedCollection new.! !
!Portfolio methodsFor: 'balance' stamp: 'HAW 5/25/2019 11:19:36' prior: 50560025 overrides: 50567100!
balance
	
	^accounts sum: [ :anAccount | anAccount balance ] ifEmpty: [ 0 ]! !
!Portfolio methodsFor: 'transactions' stamp: 'HAW 5/25/2019 11:42:55' prior: 50560031 overrides: 50567104!
addTransactionsTo: aCollectionOfTransactions

	accounts do: [ :anAccount | anAccount addTransactionsTo: aCollectionOfTransactions ]! !
!Portfolio methodsFor: 'transactions' stamp: 'HAW 5/25/2019 11:38:32' prior: 50560039 overrides: 50567110!
transactions
	
	| transactions |
	
	transactions := OrderedCollection new.
	accounts do: [ :anAccount | anAccount addTransactionsTo: transactions ].
	
	^transactions ! !
!Portfolio methodsFor: 'composition' stamp: 'HAW 5/25/2019 12:02:59' prior: 50560048 overrides: 50567115!
addedTo: aPortfolio 
	
	parents add: aPortfolio ! !
!Portfolio methodsFor: 'testing' stamp: 'HAW 5/25/2019 12:20:56' prior: 50560052!
anyRootParentIsComposedBy: accountToAdd

	^self rootParents anySatisfy: [ :aParent | aParent isComposedBy: accountToAdd]! !
!Portfolio methodsFor: 'testing' stamp: 'HAW 5/25/2019 11:28:29' prior: 50560059 overrides: 50567090!
hasRegistered: aTransaction

	^accounts anySatisfy: [ :anAccount | anAccount hasRegistered: aTransaction ]! !
!Portfolio methodsFor: 'testing' stamp: 'HAW 5/29/2019 16:24:54' prior: 50560066 overrides: 50567095!
isComposedBy: anAccount

	^ self = anAccount or: [ accounts anySatisfy: [ :composedAccount | (composedAccount isComposedBy: anAccount) or: [ anAccount isComposedBy: composedAccount ]]]! !
!Portfolio methodsFor: 'account management - private' stamp: 'HAW 5/25/2019 12:17:31' prior: 50560075!
addRootParentsTo: rootParents

	parents 
		ifEmpty: [ rootParents add: self ] 
		ifNotEmpty: [ parents do: [ :aParent | aParent addRootParentsTo: rootParents ]]! !
!Portfolio methodsFor: 'account management - private' stamp: 'HAW 5/25/2019 12:20:36' prior: 50560083!
assertCanAdd: accountToAdd

	(self anyRootParentIsComposedBy: accountToAdd) ifTrue: [ self signalCanNotAddAccount ].
! !
!Portfolio methodsFor: 'account management - private' stamp: 'HAW 5/25/2019 11:48:34' prior: 50560090!
signalCanNotAddAccount
	
	self error: self class canNotAddAccountErrorMessage! !

!classDefinition: 'Portfolio class' category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:36:47'!
Portfolio class
	instanceVariableNames: ''!

!classDefinition: 'Portfolio class' category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:36:47'!
Portfolio class
	instanceVariableNames: ''!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'HAW 5/25/2019 11:48:55' prior: 50560103!
canNotAddAccountErrorMessage
	
	^'Can not add repeated account to a portfolio'! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'HAW 5/25/2019 11:18:21' prior: 50560109!
with: anAccount

	^self new 
		add: anAccount;
		yourself! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'HAW 5/25/2019 11:23:59' prior: 50560114!
with: anAccount with: anotherAccount

	^self new 
		add: anAccount;
		add: anotherAccount;
		yourself! !

!classDefinition: #ReceptiveAccount category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:36:47'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions transferences'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:36:47'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions transferences'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'cde 10/18/2022 19:34:49' prior: 50560717 overrides: 16920235!
initialize

	super initialize.
	transactions := OrderedCollection new.
	transferences := OrderedCollection new.! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'HAW 5/25/2019 11:38:52' prior: 50560140 overrides: 50567104!
addTransactionsTo: aCollectionOfTransactions

	aCollectionOfTransactions addAll: transactions ! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'HernanWilkinson 7/13/2011 18:37' prior: 50560146!
register: aTransaction

	transactions add: aTransaction 
! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'cde 10/18/2022 19:32:54'!
registerTransference: aTransference

	transferences add: aTransference 
! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'HernanWilkinson 7/13/2011 18:37' prior: 50560152 overrides: 50567110!
transactions 

	^ transactions copy! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'cde 10/18/2022 19:50:00'!
transferences 

	^ transferences copy! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'cde 10/20/2022 21:20:45' prior: 50565734 overrides: 50567100!
balance
	|transactionsBalance transferencesBalance|
	
	transactionsBalance := self balanceOfTransactions.
	transferencesBalance := 0."self balanceOfTransferences"
	^ transactionsBalance + transferencesBalance ! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'cde 10/20/2022 20:41:00'!
balanceOfTransactions
	^transactions 
			inject: 0
			into: [ :currentBalance :transaction | transaction affectBalance: currentBalance ]

	! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'cde 10/20/2022 21:05:51'!
balanceOfTransferences
	^transactions 
			inject: 0
			into: [ :currentBalance :transference | (transference receivingAccount = self) ifTrue: [transference value] 
				ifFalse: [transference value * (-1)]  ].

	! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'NR 10/21/2019 18:55:56' prior: 50560627 overrides: 50567090!
hasRegistered: aTransaction

	^ transactions includes: aTransaction 
! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'cde 10/18/2022 19:29:59'!
hasRegisteredTransfer: aTransference

	^ transferences includes: aTransference 
! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'HAW 5/25/2019 11:54:51' prior: 50560170 overrides: 50567095!
isComposedBy: anAccount

	^self = anAccount ! !
!ReceptiveAccount methodsFor: 'composition' stamp: 'HAW 5/25/2019 12:03:32' prior: 50560175 overrides: 50567115!
addedTo: aPortfolio 
	
	! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'cde 10/20/2022 20:30:58' prior: 50561535!
accountSummary
	|summary |
	
	summary := OrderedCollection new.
	
	transactions do: [:aTransaction | summary add: aTransaction asString].
	
	summary add: 'Balance = ', (self balance) asString, '.'.
	
	^ summary.
	! !

!classDefinition: #AccountTransaction category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:36:48'!
Object subclass: #AccountTransaction
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #MarsRoverWest stamp: 'MO 10/23/2022 21:36:49'!
MarsRoverState subclass: #MarsRoverWest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classRemoval: #MarsRoverSouth stamp: 'MO 10/23/2022 21:36:49'!
MarsRoverState subclass: #MarsRoverSouth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classRemoval: #MarsRoverNorth stamp: 'MO 10/23/2022 21:36:49'!
MarsRoverState subclass: #MarsRoverNorth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classRemoval: #MarsRoverEast stamp: 'MO 10/23/2022 21:36:50'!
MarsRoverState subclass: #MarsRoverEast
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classRemoval: #MarsRoverState stamp: 'MO 10/23/2022 21:36:50'!
Object subclass: #MarsRoverState
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classRemoval: #ReceiveR stamp: 'MO 10/23/2022 21:36:51'!
MarsRoverInstructionReceiver subclass: #ReceiveR
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classRemoval: #ReceiveL stamp: 'MO 10/23/2022 21:36:51'!
MarsRoverInstructionReceiver subclass: #ReceiveL
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classRemoval: #ReceiveInvalid stamp: 'MO 10/23/2022 21:36:52'!
MarsRoverInstructionReceiver subclass: #ReceiveInvalid
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classRemoval: #ReceiveF stamp: 'MO 10/23/2022 21:36:52'!
MarsRoverInstructionReceiver subclass: #ReceiveF
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classRemoval: #ReceiveB stamp: 'MO 10/23/2022 21:36:52'!
MarsRoverInstructionReceiver subclass: #ReceiveB
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classRemoval: #MarsRoverInstructionReceiver stamp: 'MO 10/23/2022 21:36:53'!
Object subclass: #MarsRoverInstructionReceiver
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classRemoval: #MarsRover stamp: 'MO 10/23/2022 21:36:53'!
Object subclass: #MarsRover
	instanceVariableNames: 'position direction'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classRemoval: #MarsRoverTest stamp: 'MO 10/23/2022 21:36:54'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #PortfolioTest category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:36:54'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #PortfolioTest category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:36:54'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/25/2019 11:16:26' prior: 50566608!
test01BalanceOfPortfolioWithoutAccountsIsZero

	self assert: 0 equals: Portfolio new balance! !
!PortfolioTest methodsFor: 'tests' stamp: 'NR 5/27/2021 17:36:04' prior: 50566614!
test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance

	| account portfolio |
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	portfolio := Portfolio with: account.
	
	self assert: account balance equals: portfolio balance! !
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/25/2019 11:23:25' prior: 50566625!
test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios

	| simplePortfolioAccount simplePortfolio composedPortfolioAccount composedPortofolio |
	
	simplePortfolioAccount := ReceptiveAccount new.
	Deposit register: 100 on: simplePortfolioAccount.
	simplePortfolio := Portfolio with: simplePortfolioAccount.
	
	composedPortfolioAccount := ReceptiveAccount new.
	Withdraw register: 50 on: composedPortfolioAccount.
	composedPortofolio := Portfolio with: simplePortfolio with: composedPortfolioAccount.
	
	self assert: (composedPortfolioAccount balance + simplePortfolio balance) equals: composedPortofolio balance! !
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/25/2019 11:43:15' prior: 50566647!
test04PortfolioWithoutAccountsHasNoRegisteredTransaction

	self deny: (Portfolio new hasRegistered: (Deposit for: 100))! !
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/25/2019 11:43:11' prior: 50566654!
test05PortfolioHasRegisteredItsAccountsTransactions

	| account portfolio deposit |
	
	account := ReceptiveAccount new.
	deposit := Deposit register: 100 on: account.
	portfolio := Portfolio with: account.
	
	self assert: (portfolio hasRegistered: deposit)! !
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/25/2019 11:58:06' prior: 50566665!
test06PortfolioLooksForRegisteredTransactionsRecursively

	| simplePortfolioAccount simplePortfolio composedPortfolioAccount composedPortfolio composedPortfolioAccountWithdraw simplePortfolioAccountDeposit |
	
	simplePortfolioAccount := ReceptiveAccount new.
	simplePortfolioAccountDeposit := Deposit register: 100 on: simplePortfolioAccount.
	simplePortfolio := Portfolio with: simplePortfolioAccount.
	
	composedPortfolioAccount := ReceptiveAccount new.
	composedPortfolioAccountWithdraw := Withdraw register: 50 on: composedPortfolioAccount.
	composedPortfolio := Portfolio with: simplePortfolio with: composedPortfolioAccount.
	
	self assert: (composedPortfolio hasRegistered: simplePortfolioAccountDeposit).
	self assert: (composedPortfolio hasRegistered: composedPortfolioAccountWithdraw)! !
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/25/2019 11:58:10' prior: 50566693!
test07PortfolioHasNoTransactionWhenHasNoAccounts

	self assert: Portfolio new transactions isEmpty! !
!PortfolioTest methodsFor: 'tests' stamp: 'NR 6/22/2020 07:31:19' prior: 50566699!
test08PortfolioTransactionsIncludesAllItsAccountsTransactions

	| account portfolio accountDeposit anotherAccount portfolioTransactions anotherAccountWithdraw |
	
	account := ReceptiveAccount new.
	accountDeposit := Deposit register: 100 on: account.
	anotherAccount := ReceptiveAccount new.
	anotherAccountWithdraw := Withdraw register: 100 on: account.
	portfolio := Portfolio with: account.
	
	portfolioTransactions := portfolio transactions.
	
	self assert: 2 equals: portfolioTransactions size.
	self assert: (portfolioTransactions includes: accountDeposit).
	self assert: (portfolioTransactions includes: anotherAccountWithdraw)! !
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/25/2019 11:58:20' prior: 50566722!
test09PortfolioTransactionsAreCalculatedRecursively

	| simplePortfolioAccount simplePortfolio composedPortfolioAccount composedPortfolio composedPortfolioAccountWithdraw simplePortfolioAccountDeposit composedPortfolioTransactions |
	
	simplePortfolioAccount := ReceptiveAccount new.
	simplePortfolioAccountDeposit := Deposit register: 100 on: simplePortfolioAccount.
	simplePortfolio := Portfolio with: simplePortfolioAccount.
	
	composedPortfolioAccount := ReceptiveAccount new.
	composedPortfolioAccountWithdraw := Withdraw register: 50 on: composedPortfolioAccount.
	composedPortfolio := Portfolio with: simplePortfolio with: composedPortfolioAccount.
	
	composedPortfolioTransactions := composedPortfolio transactions.
	self assert: 2 equals: composedPortfolioTransactions size.
	self assert: (composedPortfolioTransactions includes: simplePortfolioAccountDeposit).
	self assert: (composedPortfolioTransactions includes: composedPortfolioAccountWithdraw)! !
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/25/2019 11:58:24' prior: 50566755!
test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce

	| account portfolio |
	
	account := ReceptiveAccount new.
	portfolio := Portfolio with: account.
	
	self 
		should: [ portfolio add: account ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: Portfolio canNotAddAccountErrorMessage equals: anError messageText.
			self assert: 1 equals: portfolio accountsSize.
			self assert: (portfolio accountsIncludes: account) ]! !
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/25/2019 11:58:28' prior: 50566773!
test11PortfolioCanNotIncludeAccountOfItsPortfolios

	| account simplePortfolio composedPortfolio |
	
	account := ReceptiveAccount new.
	simplePortfolio := Portfolio with: account.
	composedPortfolio := Portfolio with: simplePortfolio.
	
	self 
		should: [ composedPortfolio add: account ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: Portfolio canNotAddAccountErrorMessage equals: anError messageText.
			self assert: 1 equals: composedPortfolio accountsSize.
			self assert: (composedPortfolio accountsIncludes: simplePortfolio) ]! !
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/25/2019 11:58:32' prior: 50566794!
test12PortfolioCanNotIncludeItself

	| account simplePortfolio |
	
	account := ReceptiveAccount new.
	simplePortfolio := Portfolio with: account.
	
	self 
		should: [ simplePortfolio add: simplePortfolio ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: Portfolio canNotAddAccountErrorMessage equals: anError messageText.
			self assert: 1 equals: simplePortfolio accountsSize.
			self assert: (simplePortfolio accountsIncludes: account) ]! !
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/25/2019 12:01:51' prior: 50566812!
test13ComposedPortfolioCanNotHaveParentPortfolioAccount

	| account simplePortfolio composedPortfolio |
	
	account := ReceptiveAccount new.
	simplePortfolio := Portfolio new.
	composedPortfolio := Portfolio with: simplePortfolio.
	composedPortfolio add: account.
	
	self 
		should: [ simplePortfolio add: account ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: Portfolio canNotAddAccountErrorMessage equals: anError messageText.
			self assert: simplePortfolio accountsIsEmpty ]! !
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/25/2019 12:12:16' prior: 50566831!
test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively

	| account leftParentPortfolio leftRootParentPortfolio portfolio rightParentPortfolio rightRootParentPortfolio |
	
	account := ReceptiveAccount new.
	portfolio := Portfolio new.
	leftParentPortfolio := Portfolio with: portfolio .
	leftRootParentPortfolio := Portfolio with: leftParentPortfolio.
	leftRootParentPortfolio add: account.
	
	rightParentPortfolio := Portfolio with: portfolio .
	rightRootParentPortfolio := Portfolio with: rightParentPortfolio.
	rightRootParentPortfolio add: account.

	self 
		should: [ portfolio add: account ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: Portfolio canNotAddAccountErrorMessage equals: anError messageText.
			self assert: portfolio accountsIsEmpty ]! !
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/29/2019 16:31:18' prior: 50566859!
test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd

	| portfolioToAdd portfolioToModify rootPortfolio sharedAccount |
	
	sharedAccount := ReceptiveAccount new.
	portfolioToModify := Portfolio new.
	rootPortfolio := Portfolio with: sharedAccount with: portfolioToModify.
	portfolioToAdd := Portfolio with: sharedAccount.
	
	self 
		should: [ portfolioToModify add: portfolioToAdd ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError | 
			self assert: Portfolio canNotAddAccountErrorMessage equals: anError messageText.
			self assert: portfolioToModify accountsIsEmpty ]! !
!PortfolioTest methodsFor: 'tests' stamp: 'cde 10/18/2022 19:45:57' prior: 50566881!
test16AccountCanTransferToAnotherAccountCorrectly

	| anotherFuckingAccount aMothefuckingAccount anOperation|
	
	aMothefuckingAccount := ReceptiveAccount new.
	anotherFuckingAccount := ReceptiveAccount new.
	
	anOperation := Transfer new.
	anOperation register: 50 from: aMothefuckingAccount to: anotherFuckingAccount.
	
	self assert: aMothefuckingAccount balance equals: (-50).
	self assert: anotherFuckingAccount balance equals: 50! !
!PortfolioTest methodsFor: 'tests' stamp: 'cde 10/18/2022 19:45:53' prior: 50566898!
test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly

	| anotherFuckingAccount aMothefuckingAccount anOperation portfolio|
	
	aMothefuckingAccount := ReceptiveAccount new.
	anotherFuckingAccount := ReceptiveAccount new.
	portfolio := Portfolio new.
	portfolio add: anotherFuckingAccount.
	
	anOperation := Transfer new.
	anOperation register: 50 from: aMothefuckingAccount to: anotherFuckingAccount.
	
	self assert: aMothefuckingAccount balance equals: (-50).
	self assert: anotherFuckingAccount balance equals: 50! !
!PortfolioTest methodsFor: 'tests' stamp: 'cde 10/18/2022 19:45:49' prior: 50566918!
test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount

	| anotherFuckingAccount aMothefuckingAccount anOperation |
	
	aMothefuckingAccount := ReceptiveAccount new.
	anotherFuckingAccount := ReceptiveAccount new.
	
	anOperation := Transfer new.
	anOperation register: 50 from: aMothefuckingAccount to: anotherFuckingAccount.
	
	self assert: (aMothefuckingAccount hasRegisteredTransfer: anOperation)! !
!PortfolioTest methodsFor: 'tests' stamp: 'cde 10/18/2022 19:45:46' prior: 50566934!
test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount

	| anotherFuckingAccount aMothefuckingAccount anOperation |
	
	aMothefuckingAccount := ReceptiveAccount new.
	anotherFuckingAccount := ReceptiveAccount new.
	
	anOperation := Transfer new.
	anOperation register: 50 from: aMothefuckingAccount to: anotherFuckingAccount.
	
	self assert: (anotherFuckingAccount hasRegisteredTransfer: anOperation)! !
!PortfolioTest methodsFor: 'tests' stamp: 'cde 10/20/2022 20:31:26' prior: 50566950!
test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements

	| anAccount |
	
	anAccount := ReceptiveAccount new.
	
	self assert: (anAccount accountSummary at: 1) equals: 'Balance = 0.'.! !
!PortfolioTest methodsFor: 'tests' stamp: 'cde 10/20/2022 20:16:22' prior: 50566959!
test21AccountSummaryReturnsListWithOneDeposit

	| anAccount |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 50 on: anAccount. 
	
	self assert: (anAccount accountSummary at: 1) equals: 'Deposito por 50.'.
	self assert: (anAccount accountSummary at: 2) equals: 'Balance = 50.'.! !
!PortfolioTest methodsFor: 'tests' stamp: 'cde 10/20/2022 20:16:16' prior: 50566971!
test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal

	| anAccount |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	Withdraw register: 25 on: anAccount. 
	
	self assert: (anAccount accountSummary at: 1) equals: 'Deposito por 100.'.
	self assert: (anAccount accountSummary at: 2) equals: 'Extraccion por 25.'.
	self assert: (anAccount accountSummary at: 3) equals: 'Balance = 75.'.! !

!classDefinition: #ReceptiveAccountTest category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:36:55'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #ReceptiveAccountTest category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:36:55'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'HAW 5/23/2019 15:19:48' prior: 50567003!
test01ReceptiveAccountHaveZeroAsBalanceWhenCreated 

	| account |
	
	account := ReceptiveAccount new.

	self assert: 0 equals: account balance .
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'HAW 5/23/2019 15:19:54' prior: 50567011!
test02DepositIncreasesBalanceOnTransactionValue 

	| account |
	
	account := ReceptiveAccount  new.
	Deposit register: 100 on: account.
		
	self assert: 100 equals: account balance .
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'HAW 5/23/2019 15:20:02' prior: 50567020!
test03WithdrawDecreasesBalanceOnTransactionValue 

	| account |
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
		
	self assert: 50 equals: account balance .
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'HAW 5/23/2019 15:20:32' prior: 50567030!
test04WithdrawValueMustBePositive 

	| account withdrawValue |
	
	account := ReceptiveAccount new.
	withdrawValue := 50.
	
	self assert: withdrawValue equals: (Withdraw register: withdrawValue on: account) value
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'HAW 5/23/2019 15:20:46' prior: 50567040!
test05ReceptiveAccountKnowsRegisteredTransactions 

	| account deposit withdraw |
	
	account := ReceptiveAccount new.
	deposit := Deposit register: 100 on: account.
	withdraw := Withdraw register: 50 on: account.
		
	self assert: (account hasRegistered: deposit).
	self assert: (account hasRegistered: withdraw).
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'HAW 5/23/2019 15:20:54' prior: 50567053!
test06ReceptiveAccountDoNotKnowNotRegisteredTransactions

	| account deposit withdraw |
	
	account := ReceptiveAccount new.
	deposit :=  Deposit for: 100.
	withdraw := Withdraw for: 50.
		
	self deny: (account hasRegistered: deposit).
	self deny: (account hasRegistered:withdraw).
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'HAW 5/23/2019 15:21:24' prior: 50567065!
test07AccountKnowsItsTransactions 

	| account1 deposit1 |
	
	account1 := ReceptiveAccount new.
	
	deposit1 := Deposit register: 100 on: account1.
		
	self assert: 1 equals: account1 transactions size .
	self assert: (account1 transactions includes: deposit1).
! !

!classDefinition: #Account category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:36:56'!
Object subclass: #Account
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Account category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:36:56'!
Object subclass: #Account
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Account methodsFor: 'testing' stamp: 'HAW 5/25/2019 12:23:47' prior: 50567090!
hasRegistered: aTransaction

	self subclassResponsibility ! !
!Account methodsFor: 'testing' stamp: 'HAW 5/25/2019 12:24:25' prior: 50567095!
isComposedBy: anAccount

	self subclassResponsibility ! !
!Account methodsFor: 'balance' stamp: 'HAW 5/25/2019 12:23:40' prior: 50567100!
balance

	self subclassResponsibility ! !
!Account methodsFor: 'transactions' stamp: 'HAW 5/25/2019 12:23:27' prior: 50567104!
addTransactionsTo: aCollectionOfTransactions

	self subclassResponsibility ! !
!Account methodsFor: 'transactions' stamp: 'HAW 5/25/2019 12:23:15' prior: 50567110!
transactions

	self subclassResponsibility ! !
!Account methodsFor: 'composition' stamp: 'HAW 5/25/2019 12:24:04' prior: 50567115!
addedTo: aPortfolio

	self subclassResponsibility ! !

!classDefinition: #Portfolio category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:36:56'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Portfolio category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:36:56'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Portfolio methodsFor: 'accounts management' stamp: 'HAW 5/25/2019 11:49:20' prior: 50567135!
accountsIncludes: anAccount

	^accounts includes: anAccount ! !
!Portfolio methodsFor: 'accounts management' stamp: 'HAW 5/25/2019 12:05:04' prior: 50567140!
accountsIsEmpty
	
	^accounts isEmpty ! !
!Portfolio methodsFor: 'accounts management' stamp: 'HAW 5/25/2019 11:49:06' prior: 50567145!
accountsSize
	
	^accounts size! !
!Portfolio methodsFor: 'accounts management' stamp: 'HAW 5/25/2019 12:19:20' prior: 50567149!
add: accountToAdd

	self assertCanAdd: accountToAdd.
		
	accounts add: accountToAdd.
	accountToAdd addedTo: self 
	! !
!Portfolio methodsFor: 'accounts management' stamp: 'HAW 5/25/2019 12:17:31' prior: 50567156!
rootParents
	
	| rootParents |
	
	rootParents := Set new.
	self addRootParentsTo: rootParents.
	
	^ rootParents! !
!Portfolio methodsFor: 'initialization' stamp: 'HAW 5/25/2019 12:03:18' prior: 50567163 overrides: 16920235!
initialize

	accounts := OrderedCollection new.
	parents := OrderedCollection new.! !
!Portfolio methodsFor: 'balance' stamp: 'HAW 5/25/2019 11:19:36' prior: 50567169 overrides: 50567982!
balance
	
	^accounts sum: [ :anAccount | anAccount balance ] ifEmpty: [ 0 ]! !
!Portfolio methodsFor: 'transactions' stamp: 'HAW 5/25/2019 11:42:55' prior: 50567175 overrides: 50567986!
addTransactionsTo: aCollectionOfTransactions

	accounts do: [ :anAccount | anAccount addTransactionsTo: aCollectionOfTransactions ]! !
!Portfolio methodsFor: 'transactions' stamp: 'HAW 5/25/2019 11:38:32' prior: 50567183 overrides: 50567992!
transactions
	
	| transactions |
	
	transactions := OrderedCollection new.
	accounts do: [ :anAccount | anAccount addTransactionsTo: transactions ].
	
	^transactions ! !
!Portfolio methodsFor: 'composition' stamp: 'HAW 5/25/2019 12:02:59' prior: 50567192 overrides: 50567997!
addedTo: aPortfolio 
	
	parents add: aPortfolio ! !
!Portfolio methodsFor: 'testing' stamp: 'HAW 5/25/2019 12:20:56' prior: 50567197!
anyRootParentIsComposedBy: accountToAdd

	^self rootParents anySatisfy: [ :aParent | aParent isComposedBy: accountToAdd]! !
!Portfolio methodsFor: 'testing' stamp: 'HAW 5/25/2019 11:28:29' prior: 50567205 overrides: 50567972!
hasRegistered: aTransaction

	^accounts anySatisfy: [ :anAccount | anAccount hasRegistered: aTransaction ]! !
!Portfolio methodsFor: 'testing' stamp: 'HAW 5/29/2019 16:24:54' prior: 50567212 overrides: 50567977!
isComposedBy: anAccount

	^ self = anAccount or: [ accounts anySatisfy: [ :composedAccount | (composedAccount isComposedBy: anAccount) or: [ anAccount isComposedBy: composedAccount ]]]! !
!Portfolio methodsFor: 'account management - private' stamp: 'HAW 5/25/2019 12:17:31' prior: 50567222!
addRootParentsTo: rootParents

	parents 
		ifEmpty: [ rootParents add: self ] 
		ifNotEmpty: [ parents do: [ :aParent | aParent addRootParentsTo: rootParents ]]! !
!Portfolio methodsFor: 'account management - private' stamp: 'HAW 5/25/2019 12:20:36' prior: 50567231!
assertCanAdd: accountToAdd

	(self anyRootParentIsComposedBy: accountToAdd) ifTrue: [ self signalCanNotAddAccount ].
! !
!Portfolio methodsFor: 'account management - private' stamp: 'HAW 5/25/2019 11:48:34' prior: 50567238!
signalCanNotAddAccount
	
	self error: self class canNotAddAccountErrorMessage! !

!classDefinition: 'Portfolio class' category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:36:56'!
Portfolio class
	instanceVariableNames: ''!

!classDefinition: 'Portfolio class' category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:36:56'!
Portfolio class
	instanceVariableNames: ''!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'HAW 5/25/2019 11:48:55' prior: 50567253!
canNotAddAccountErrorMessage
	
	^'Can not add repeated account to a portfolio'! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'HAW 5/25/2019 11:18:21' prior: 50567259!
with: anAccount

	^self new 
		add: anAccount;
		yourself! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'HAW 5/25/2019 11:23:59' prior: 50567265!
with: anAccount with: anotherAccount

	^self new 
		add: anAccount;
		add: anotherAccount;
		yourself! !

!classDefinition: #ReceptiveAccount category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:36:56'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions transferences'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:36:56'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions transferences'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'cde 10/18/2022 19:34:49' prior: 50567289 overrides: 16920235!
initialize

	super initialize.
	transactions := OrderedCollection new.
	transferences := OrderedCollection new.! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'HAW 5/25/2019 11:38:52' prior: 50567297 overrides: 50567986!
addTransactionsTo: aCollectionOfTransactions

	aCollectionOfTransactions addAll: transactions ! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'HernanWilkinson 7/13/2011 18:37' prior: 50567304!
register: aTransaction

	transactions add: aTransaction 
! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'cde 10/18/2022 19:32:54' prior: 50567309!
registerTransference: aTransference

	transferences add: aTransference 
! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'HernanWilkinson 7/13/2011 18:37' prior: 50567316 overrides: 50567992!
transactions 

	^ transactions copy! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'cde 10/18/2022 19:50:00' prior: 50567320!
transferences 

	^ transferences copy! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'cde 10/20/2022 21:20:45' prior: 50567325 overrides: 50567982!
balance
	|transactionsBalance transferencesBalance|
	
	transactionsBalance := self balanceOfTransactions.
	transferencesBalance := 0."self balanceOfTransferences"
	^ transactionsBalance + transferencesBalance ! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'cde 10/20/2022 20:41:00' prior: 50567334!
balanceOfTransactions
	^transactions 
			inject: 0
			into: [ :currentBalance :transaction | transaction affectBalance: currentBalance ]

	! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'cde 10/20/2022 21:05:51' prior: 50567341!
balanceOfTransferences
	^transactions 
			inject: 0
			into: [ :currentBalance :transference | (transference receivingAccount = self) ifTrue: [transference value] 
				ifFalse: [transference value * (-1)]  ].

	! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'NR 10/21/2019 18:55:56' prior: 50567352 overrides: 50567972!
hasRegistered: aTransaction

	^ transactions includes: aTransaction 
! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'cde 10/18/2022 19:29:59' prior: 50567357!
hasRegisteredTransfer: aTransference

	^ transferences includes: aTransference 
! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'HAW 5/25/2019 11:54:51' prior: 50567364 overrides: 50567977!
isComposedBy: anAccount

	^self = anAccount ! !
!ReceptiveAccount methodsFor: 'composition' stamp: 'HAW 5/25/2019 12:03:32' prior: 50567370 overrides: 50567997!
addedTo: aPortfolio 
	
	! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'cde 10/20/2022 20:30:58' prior: 50567374!
accountSummary
	|summary |
	
	summary := OrderedCollection new.
	
	transactions do: [:aTransaction | summary add: aTransaction asString].
	
	summary add: 'Balance = ', (self balance) asString, '.'.
	
	^ summary.
	! !

!classDefinition: #AccountTransaction category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:36:57'!
Object subclass: #AccountTransaction
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Transfer stamp: 'MO 10/23/2022 21:36:58'!
AccountTransaction subclass: #Transfer
	instanceVariableNames: 'senderAccount receiverAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Withdraw stamp: 'MO 10/23/2022 21:36:58'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Deposit stamp: 'MO 10/23/2022 21:36:59'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #AccountTransaction stamp: 'MO 10/23/2022 21:36:59'!
Object subclass: #AccountTransaction
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #ReceptiveAccount stamp: 'MO 10/23/2022 21:37:00'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions transferences'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Portfolio stamp: 'MO 10/23/2022 21:37:00'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Account stamp: 'MO 10/23/2022 21:37:01'!
Object subclass: #Account
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #ReceptiveAccountTest stamp: 'MO 10/23/2022 21:37:01'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #PortfolioTest stamp: 'MO 10/23/2022 21:37:02'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #PortfolioTest category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:37:02'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #PortfolioTest category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:37:02'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/25/2019 11:16:26'!
test01BalanceOfPortfolioWithoutAccountsIsZero

	self assert: 0 equals: Portfolio new balance! !
!PortfolioTest methodsFor: 'tests' stamp: 'NR 5/27/2021 17:36:04'!
test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance

	| account portfolio |
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	portfolio := Portfolio with: account.
	
	self assert: account balance equals: portfolio balance! !
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/25/2019 11:23:25'!
test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios

	| simplePortfolioAccount simplePortfolio composedPortfolioAccount composedPortofolio |
	
	simplePortfolioAccount := ReceptiveAccount new.
	Deposit register: 100 on: simplePortfolioAccount.
	simplePortfolio := Portfolio with: simplePortfolioAccount.
	
	composedPortfolioAccount := ReceptiveAccount new.
	Withdraw register: 50 on: composedPortfolioAccount.
	composedPortofolio := Portfolio with: simplePortfolio with: composedPortfolioAccount.
	
	self assert: (composedPortfolioAccount balance + simplePortfolio balance) equals: composedPortofolio balance! !
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/25/2019 11:43:15'!
test04PortfolioWithoutAccountsHasNoRegisteredTransaction

	self deny: (Portfolio new hasRegistered: (Deposit for: 100))! !
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/25/2019 11:43:11'!
test05PortfolioHasRegisteredItsAccountsTransactions

	| account portfolio deposit |
	
	account := ReceptiveAccount new.
	deposit := Deposit register: 100 on: account.
	portfolio := Portfolio with: account.
	
	self assert: (portfolio hasRegistered: deposit)! !
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/25/2019 11:58:06'!
test06PortfolioLooksForRegisteredTransactionsRecursively

	| simplePortfolioAccount simplePortfolio composedPortfolioAccount composedPortfolio composedPortfolioAccountWithdraw simplePortfolioAccountDeposit |
	
	simplePortfolioAccount := ReceptiveAccount new.
	simplePortfolioAccountDeposit := Deposit register: 100 on: simplePortfolioAccount.
	simplePortfolio := Portfolio with: simplePortfolioAccount.
	
	composedPortfolioAccount := ReceptiveAccount new.
	composedPortfolioAccountWithdraw := Withdraw register: 50 on: composedPortfolioAccount.
	composedPortfolio := Portfolio with: simplePortfolio with: composedPortfolioAccount.
	
	self assert: (composedPortfolio hasRegistered: simplePortfolioAccountDeposit).
	self assert: (composedPortfolio hasRegistered: composedPortfolioAccountWithdraw)! !
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/25/2019 11:58:10'!
test07PortfolioHasNoTransactionWhenHasNoAccounts

	self assert: Portfolio new transactions isEmpty! !
!PortfolioTest methodsFor: 'tests' stamp: 'NR 6/22/2020 07:31:19'!
test08PortfolioTransactionsIncludesAllItsAccountsTransactions

	| account portfolio accountDeposit anotherAccount portfolioTransactions anotherAccountWithdraw |
	
	account := ReceptiveAccount new.
	accountDeposit := Deposit register: 100 on: account.
	anotherAccount := ReceptiveAccount new.
	anotherAccountWithdraw := Withdraw register: 100 on: account.
	portfolio := Portfolio with: account.
	
	portfolioTransactions := portfolio transactions.
	
	self assert: 2 equals: portfolioTransactions size.
	self assert: (portfolioTransactions includes: accountDeposit).
	self assert: (portfolioTransactions includes: anotherAccountWithdraw)! !
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/25/2019 11:58:20'!
test09PortfolioTransactionsAreCalculatedRecursively

	| simplePortfolioAccount simplePortfolio composedPortfolioAccount composedPortfolio composedPortfolioAccountWithdraw simplePortfolioAccountDeposit composedPortfolioTransactions |
	
	simplePortfolioAccount := ReceptiveAccount new.
	simplePortfolioAccountDeposit := Deposit register: 100 on: simplePortfolioAccount.
	simplePortfolio := Portfolio with: simplePortfolioAccount.
	
	composedPortfolioAccount := ReceptiveAccount new.
	composedPortfolioAccountWithdraw := Withdraw register: 50 on: composedPortfolioAccount.
	composedPortfolio := Portfolio with: simplePortfolio with: composedPortfolioAccount.
	
	composedPortfolioTransactions := composedPortfolio transactions.
	self assert: 2 equals: composedPortfolioTransactions size.
	self assert: (composedPortfolioTransactions includes: simplePortfolioAccountDeposit).
	self assert: (composedPortfolioTransactions includes: composedPortfolioAccountWithdraw)! !
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/25/2019 11:58:24'!
test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce

	| account portfolio |
	
	account := ReceptiveAccount new.
	portfolio := Portfolio with: account.
	
	self 
		should: [ portfolio add: account ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: Portfolio canNotAddAccountErrorMessage equals: anError messageText.
			self assert: 1 equals: portfolio accountsSize.
			self assert: (portfolio accountsIncludes: account) ]! !
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/25/2019 11:58:28'!
test11PortfolioCanNotIncludeAccountOfItsPortfolios

	| account simplePortfolio composedPortfolio |
	
	account := ReceptiveAccount new.
	simplePortfolio := Portfolio with: account.
	composedPortfolio := Portfolio with: simplePortfolio.
	
	self 
		should: [ composedPortfolio add: account ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: Portfolio canNotAddAccountErrorMessage equals: anError messageText.
			self assert: 1 equals: composedPortfolio accountsSize.
			self assert: (composedPortfolio accountsIncludes: simplePortfolio) ]! !
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/25/2019 11:58:32'!
test12PortfolioCanNotIncludeItself

	| account simplePortfolio |
	
	account := ReceptiveAccount new.
	simplePortfolio := Portfolio with: account.
	
	self 
		should: [ simplePortfolio add: simplePortfolio ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: Portfolio canNotAddAccountErrorMessage equals: anError messageText.
			self assert: 1 equals: simplePortfolio accountsSize.
			self assert: (simplePortfolio accountsIncludes: account) ]! !
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/25/2019 12:01:51'!
test13ComposedPortfolioCanNotHaveParentPortfolioAccount

	| account simplePortfolio composedPortfolio |
	
	account := ReceptiveAccount new.
	simplePortfolio := Portfolio new.
	composedPortfolio := Portfolio with: simplePortfolio.
	composedPortfolio add: account.
	
	self 
		should: [ simplePortfolio add: account ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: Portfolio canNotAddAccountErrorMessage equals: anError messageText.
			self assert: simplePortfolio accountsIsEmpty ]! !
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/25/2019 12:12:16'!
test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively

	| account leftParentPortfolio leftRootParentPortfolio portfolio rightParentPortfolio rightRootParentPortfolio |
	
	account := ReceptiveAccount new.
	portfolio := Portfolio new.
	leftParentPortfolio := Portfolio with: portfolio .
	leftRootParentPortfolio := Portfolio with: leftParentPortfolio.
	leftRootParentPortfolio add: account.
	
	rightParentPortfolio := Portfolio with: portfolio .
	rightRootParentPortfolio := Portfolio with: rightParentPortfolio.
	rightRootParentPortfolio add: account.

	self 
		should: [ portfolio add: account ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: Portfolio canNotAddAccountErrorMessage equals: anError messageText.
			self assert: portfolio accountsIsEmpty ]! !
!PortfolioTest methodsFor: 'tests' stamp: 'HAW 5/29/2019 16:31:18'!
test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd

	| portfolioToAdd portfolioToModify rootPortfolio sharedAccount |
	
	sharedAccount := ReceptiveAccount new.
	portfolioToModify := Portfolio new.
	rootPortfolio := Portfolio with: sharedAccount with: portfolioToModify.
	portfolioToAdd := Portfolio with: sharedAccount.
	
	self 
		should: [ portfolioToModify add: portfolioToAdd ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError | 
			self assert: Portfolio canNotAddAccountErrorMessage equals: anError messageText.
			self assert: portfolioToModify accountsIsEmpty ]! !
!PortfolioTest methodsFor: 'tests' stamp: 'cde 10/18/2022 19:45:57'!
test16AccountCanTransferToAnotherAccountCorrectly

	| anotherFuckingAccount aMothefuckingAccount anOperation|
	
	aMothefuckingAccount := ReceptiveAccount new.
	anotherFuckingAccount := ReceptiveAccount new.
	
	anOperation := Transfer new.
	anOperation register: 50 from: aMothefuckingAccount to: anotherFuckingAccount.
	
	self assert: aMothefuckingAccount balance equals: (-50).
	self assert: anotherFuckingAccount balance equals: 50! !
!PortfolioTest methodsFor: 'tests' stamp: 'cde 10/18/2022 19:45:53'!
test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly

	| anotherFuckingAccount aMothefuckingAccount anOperation portfolio|
	
	aMothefuckingAccount := ReceptiveAccount new.
	anotherFuckingAccount := ReceptiveAccount new.
	portfolio := Portfolio new.
	portfolio add: anotherFuckingAccount.
	
	anOperation := Transfer new.
	anOperation register: 50 from: aMothefuckingAccount to: anotherFuckingAccount.
	
	self assert: aMothefuckingAccount balance equals: (-50).
	self assert: anotherFuckingAccount balance equals: 50! !
!PortfolioTest methodsFor: 'tests' stamp: 'cde 10/18/2022 19:45:49'!
test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount

	| anotherFuckingAccount aMothefuckingAccount anOperation |
	
	aMothefuckingAccount := ReceptiveAccount new.
	anotherFuckingAccount := ReceptiveAccount new.
	
	anOperation := Transfer new.
	anOperation register: 50 from: aMothefuckingAccount to: anotherFuckingAccount.
	
	self assert: (aMothefuckingAccount hasRegisteredTransfer: anOperation)! !
!PortfolioTest methodsFor: 'tests' stamp: 'cde 10/18/2022 19:45:46'!
test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount

	| anotherFuckingAccount aMothefuckingAccount anOperation |
	
	aMothefuckingAccount := ReceptiveAccount new.
	anotherFuckingAccount := ReceptiveAccount new.
	
	anOperation := Transfer new.
	anOperation register: 50 from: aMothefuckingAccount to: anotherFuckingAccount.
	
	self assert: (anotherFuckingAccount hasRegisteredTransfer: anOperation)! !
!PortfolioTest methodsFor: 'tests' stamp: 'cde 10/20/2022 20:31:26'!
test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements

	| anAccount |
	
	anAccount := ReceptiveAccount new.
	
	self assert: (anAccount accountSummary at: 1) equals: 'Balance = 0.'.! !
!PortfolioTest methodsFor: 'tests' stamp: 'cde 10/20/2022 20:16:22'!
test21AccountSummaryReturnsListWithOneDeposit

	| anAccount |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 50 on: anAccount. 
	
	self assert: (anAccount accountSummary at: 1) equals: 'Deposito por 50.'.
	self assert: (anAccount accountSummary at: 2) equals: 'Balance = 50.'.! !
!PortfolioTest methodsFor: 'tests' stamp: 'cde 10/20/2022 20:16:16'!
test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal

	| anAccount |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	Withdraw register: 25 on: anAccount. 
	
	self assert: (anAccount accountSummary at: 1) equals: 'Deposito por 100.'.
	self assert: (anAccount accountSummary at: 2) equals: 'Extraccion por 25.'.
	self assert: (anAccount accountSummary at: 3) equals: 'Balance = 75.'.! !

!classDefinition: #ReceptiveAccountTest category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:37:06'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #ReceptiveAccountTest category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:37:06'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'HAW 5/23/2019 15:19:48'!
test01ReceptiveAccountHaveZeroAsBalanceWhenCreated 

	| account |
	
	account := ReceptiveAccount new.

	self assert: 0 equals: account balance .
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'HAW 5/23/2019 15:19:54'!
test02DepositIncreasesBalanceOnTransactionValue 

	| account |
	
	account := ReceptiveAccount  new.
	Deposit register: 100 on: account.
		
	self assert: 100 equals: account balance .
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'HAW 5/23/2019 15:20:02'!
test03WithdrawDecreasesBalanceOnTransactionValue 

	| account |
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
		
	self assert: 50 equals: account balance .
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'HAW 5/23/2019 15:20:32'!
test04WithdrawValueMustBePositive 

	| account withdrawValue |
	
	account := ReceptiveAccount new.
	withdrawValue := 50.
	
	self assert: withdrawValue equals: (Withdraw register: withdrawValue on: account) value
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'HAW 5/23/2019 15:20:46'!
test05ReceptiveAccountKnowsRegisteredTransactions 

	| account deposit withdraw |
	
	account := ReceptiveAccount new.
	deposit := Deposit register: 100 on: account.
	withdraw := Withdraw register: 50 on: account.
		
	self assert: (account hasRegistered: deposit).
	self assert: (account hasRegistered: withdraw).
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'HAW 5/23/2019 15:20:54'!
test06ReceptiveAccountDoNotKnowNotRegisteredTransactions

	| account deposit withdraw |
	
	account := ReceptiveAccount new.
	deposit :=  Deposit for: 100.
	withdraw := Withdraw for: 50.
		
	self deny: (account hasRegistered: deposit).
	self deny: (account hasRegistered:withdraw).
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'HAW 5/23/2019 15:21:24'!
test07AccountKnowsItsTransactions 

	| account1 deposit1 |
	
	account1 := ReceptiveAccount new.
	
	deposit1 := Deposit register: 100 on: account1.
		
	self assert: 1 equals: account1 transactions size .
	self assert: (account1 transactions includes: deposit1).
! !

!classDefinition: #Account category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:37:07'!
Object subclass: #Account
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Account category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:37:07'!
Object subclass: #Account
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Account methodsFor: 'testing' stamp: 'HAW 5/25/2019 12:23:47'!
hasRegistered: aTransaction

	self subclassResponsibility ! !
!Account methodsFor: 'testing' stamp: 'HAW 5/25/2019 12:24:25'!
isComposedBy: anAccount

	self subclassResponsibility ! !
!Account methodsFor: 'balance' stamp: 'HAW 5/25/2019 12:23:40'!
balance

	self subclassResponsibility ! !
!Account methodsFor: 'transactions' stamp: 'HAW 5/25/2019 12:23:27'!
addTransactionsTo: aCollectionOfTransactions

	self subclassResponsibility ! !
!Account methodsFor: 'transactions' stamp: 'HAW 5/25/2019 12:23:15'!
transactions

	self subclassResponsibility ! !
!Account methodsFor: 'composition' stamp: 'HAW 5/25/2019 12:24:04'!
addedTo: aPortfolio

	self subclassResponsibility ! !

!classDefinition: #Portfolio category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:37:08'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Portfolio category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:37:08'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Portfolio methodsFor: 'accounts management' stamp: 'HAW 5/25/2019 11:49:20'!
accountsIncludes: anAccount

	^accounts includes: anAccount ! !
!Portfolio methodsFor: 'accounts management' stamp: 'HAW 5/25/2019 12:05:04'!
accountsIsEmpty
	
	^accounts isEmpty ! !
!Portfolio methodsFor: 'accounts management' stamp: 'HAW 5/25/2019 11:49:06'!
accountsSize
	
	^accounts size! !
!Portfolio methodsFor: 'accounts management' stamp: 'HAW 5/25/2019 12:19:20'!
add: accountToAdd

	self assertCanAdd: accountToAdd.
		
	accounts add: accountToAdd.
	accountToAdd addedTo: self 
	! !
!Portfolio methodsFor: 'accounts management' stamp: 'HAW 5/25/2019 12:17:31'!
rootParents
	
	| rootParents |
	
	rootParents := Set new.
	self addRootParentsTo: rootParents.
	
	^ rootParents! !
!Portfolio methodsFor: 'initialization' stamp: 'HAW 5/25/2019 12:03:18' overrides: 16920235!
initialize

	accounts := OrderedCollection new.
	parents := OrderedCollection new.! !
!Portfolio methodsFor: 'balance' stamp: 'HAW 5/25/2019 11:19:36' overrides: 50568836!
balance
	
	^accounts sum: [ :anAccount | anAccount balance ] ifEmpty: [ 0 ]! !
!Portfolio methodsFor: 'transactions' stamp: 'HAW 5/25/2019 11:42:55' overrides: 50568840!
addTransactionsTo: aCollectionOfTransactions

	accounts do: [ :anAccount | anAccount addTransactionsTo: aCollectionOfTransactions ]! !
!Portfolio methodsFor: 'transactions' stamp: 'HAW 5/25/2019 11:38:32' overrides: 50568845!
transactions
	
	| transactions |
	
	transactions := OrderedCollection new.
	accounts do: [ :anAccount | anAccount addTransactionsTo: transactions ].
	
	^transactions ! !
!Portfolio methodsFor: 'composition' stamp: 'HAW 5/25/2019 12:02:59' overrides: 50568849!
addedTo: aPortfolio 
	
	parents add: aPortfolio ! !
!Portfolio methodsFor: 'testing' stamp: 'HAW 5/25/2019 12:20:56'!
anyRootParentIsComposedBy: accountToAdd

	^self rootParents anySatisfy: [ :aParent | aParent isComposedBy: accountToAdd]! !
!Portfolio methodsFor: 'testing' stamp: 'HAW 5/25/2019 11:28:29' overrides: 50568828!
hasRegistered: aTransaction

	^accounts anySatisfy: [ :anAccount | anAccount hasRegistered: aTransaction ]! !
!Portfolio methodsFor: 'testing' stamp: 'HAW 5/29/2019 16:24:54' overrides: 50568832!
isComposedBy: anAccount

	^ self = anAccount or: [ accounts anySatisfy: [ :composedAccount | (composedAccount isComposedBy: anAccount) or: [ anAccount isComposedBy: composedAccount ]]]! !
!Portfolio methodsFor: 'account management - private' stamp: 'HAW 5/25/2019 12:17:31'!
addRootParentsTo: rootParents

	parents 
		ifEmpty: [ rootParents add: self ] 
		ifNotEmpty: [ parents do: [ :aParent | aParent addRootParentsTo: rootParents ]]! !
!Portfolio methodsFor: 'account management - private' stamp: 'HAW 5/25/2019 12:20:36'!
assertCanAdd: accountToAdd

	(self anyRootParentIsComposedBy: accountToAdd) ifTrue: [ self signalCanNotAddAccount ].
! !
!Portfolio methodsFor: 'account management - private' stamp: 'HAW 5/25/2019 11:48:34'!
signalCanNotAddAccount
	
	self error: self class canNotAddAccountErrorMessage! !

!classDefinition: 'Portfolio class' category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:37:10'!
Portfolio class
	instanceVariableNames: ''!

!classDefinition: 'Portfolio class' category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:37:10'!
Portfolio class
	instanceVariableNames: ''!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'HAW 5/25/2019 11:48:55'!
canNotAddAccountErrorMessage
	
	^'Can not add repeated account to a portfolio'! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'HAW 5/25/2019 11:18:21'!
with: anAccount

	^self new 
		add: anAccount;
		yourself! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'HAW 5/25/2019 11:23:59'!
with: anAccount with: anotherAccount

	^self new 
		add: anAccount;
		add: anotherAccount;
		yourself! !

!classDefinition: #ReceptiveAccount category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:37:10'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions transferences'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:37:10'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions transferences'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'cde 10/18/2022 19:34:49' overrides: 16920235!
initialize

	super initialize.
	transactions := OrderedCollection new.
	transferences := OrderedCollection new.! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'HAW 5/25/2019 11:38:52' overrides: 50568840!
addTransactionsTo: aCollectionOfTransactions

	aCollectionOfTransactions addAll: transactions ! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'HernanWilkinson 7/13/2011 18:37'!
register: aTransaction

	transactions add: aTransaction 
! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'cde 10/18/2022 19:32:54'!
registerTransference: aTransference

	transferences add: aTransference 
! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'HernanWilkinson 7/13/2011 18:37' overrides: 50568845!
transactions 

	^ transactions copy! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'cde 10/18/2022 19:50:00'!
transferences 

	^ transferences copy! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'cde 10/20/2022 21:20:45' overrides: 50568836!
balance
	|transactionsBalance transferencesBalance|
	
	transactionsBalance := self balanceOfTransactions.
	transferencesBalance := 0."self balanceOfTransferences"
	^ transactionsBalance + transferencesBalance ! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'cde 10/20/2022 20:41:00'!
balanceOfTransactions
	^transactions 
			inject: 0
			into: [ :currentBalance :transaction | transaction affectBalance: currentBalance ]

	! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'cde 10/20/2022 21:05:51'!
balanceOfTransferences
	^transactions 
			inject: 0
			into: [ :currentBalance :transference | (transference receivingAccount = self) ifTrue: [transference value] 
				ifFalse: [transference value * (-1)]  ].

	! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'NR 10/21/2019 18:55:56' overrides: 50568828!
hasRegistered: aTransaction

	^ transactions includes: aTransaction 
! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'cde 10/18/2022 19:29:59'!
hasRegisteredTransfer: aTransference

	^ transferences includes: aTransference 
! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'HAW 5/25/2019 11:54:51' overrides: 50568832!
isComposedBy: anAccount

	^self = anAccount ! !
!ReceptiveAccount methodsFor: 'composition' stamp: 'HAW 5/25/2019 12:03:32' overrides: 50568849!
addedTo: aPortfolio 
	
	! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'cde 10/20/2022 20:30:58'!
accountSummary
	|summary |
	
	summary := OrderedCollection new.
	
	transactions do: [:aTransaction | summary add: aTransaction asString].
	
	summary add: 'Balance = ', (self balance) asString, '.'.
	
	^ summary.
	! !

!classDefinition: #AccountTransaction category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:37:12'!
Object subclass: #AccountTransaction
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountTransaction category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:37:12'!
Object subclass: #AccountTransaction
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountTransaction methodsFor: 'value' stamp: 'HernanWilkinson 9/12/2011 12:25' overrides: 16902254!
value 

	self subclassResponsibility ! !
!AccountTransaction methodsFor: 'balance' stamp: 'HAW 5/25/2019 11:25:39'!
affectBalance: aBalance

	self subclassResponsibility ! !

!classDefinition: 'AccountTransaction class' category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:37:13'!
AccountTransaction class
	instanceVariableNames: ''!

!classDefinition: 'AccountTransaction class' category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:37:13'!
AccountTransaction class
	instanceVariableNames: ''!
!AccountTransaction class methodsFor: 'instance creation' stamp: 'MO 10/20/2022 21:47:43'!
for: aValue

	^ self new initializeFor: aValue ! !
!AccountTransaction class methodsFor: 'instance creation' stamp: 'NR 10/21/2019 18:54:27'!
register: aValue on: account

	| transaction |
	
	transaction := self for: aValue.
	account register: transaction.
		
	^ transaction! !

!classDefinition: #Deposit category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:37:13'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Deposit category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:37:13'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Deposit methodsFor: 'initialization' stamp: 'HernanWilkinson 7/13/2011 18:45'!
initializeFor: aValue

	value := aValue ! !
!Deposit methodsFor: 'value' stamp: 'cde 10/20/2022 20:32:11' overrides: 16901837!
asString

	^ 'Deposito por ', value asString , '.'. ! !
!Deposit methodsFor: 'value' stamp: 'HernanWilkinson 7/13/2011 18:38' overrides: 50569122!
value

	^ value! !
!Deposit methodsFor: 'balance' stamp: 'HAW 5/25/2019 11:25:02' overrides: 50569126!
affectBalance: aBalance

	^aBalance + value ! !

!classDefinition: #Withdraw category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:37:14'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:37:14'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Withdraw methodsFor: 'initialization' stamp: 'HernanWilkinson 7/13/2011 18:46'!
initializeFor: aValue

	value := aValue ! !
!Withdraw methodsFor: 'value' stamp: 'cde 10/20/2022 20:32:06' overrides: 16901837!
asString

	^ 'Extraccion por ', value asString , '.'. ! !
!Withdraw methodsFor: 'value' stamp: 'HernanWilkinson 7/13/2011 18:33' overrides: 50569122!
value

	^ value! !
!Withdraw methodsFor: 'balance' stamp: 'HAW 5/25/2019 11:25:15' overrides: 50569126!
affectBalance: aBalance

	^aBalance - value! !

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:37:14'!
Object subclass: #Transfer
	instanceVariableNames: 'value senderAccount receiverAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:37:14'!
Object subclass: #Transfer
	instanceVariableNames: 'value senderAccount receiverAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'registerTransaction' stamp: 'cde 10/20/2022 20:45:25'!
receivingAccount
	^ receivingAccount copy.! !
!Transfer methodsFor: 'registerTransaction' stamp: 'cde 10/18/2022 19:41:40'!
register: aValue from: aSendingAccount to: aReceptiveAccount
	
	value := aValue.
	sendingAccount := aSendingAccount.
	receivingAccount := aReceptiveAccount.
	
	Withdraw register: aValue on: aSendingAccount.
	Deposit register: aValue on: aReceptiveAccount.
	
	aSendingAccount registerTransference: self.
	aReceptiveAccount registerTransference: self.! !
!Transfer methodsFor: 'registerTransaction' stamp: 'cde 10/20/2022 20:45:09'!
sendingAccount
	^ sendingAccount copy.! !
!Transfer methodsFor: 'registerTransaction' stamp: 'cde 10/20/2022 20:46:00' overrides: 16902254!
value
	^ value copy.! !
!Transfer methodsFor: 'initialization' stamp: 'MO 10/20/2022 21:52:23'!
initializeFor: aValue

	value := aValue! !
!Transfer methodsFor: 'initialization' stamp: 'MO 10/20/2022 21:59:32'!
initializeFor: aValue forSender: aSenderAccount forReceiver: aReceiverAccount

	value := aValue.
	senderAccount := aSenderAccount.
	receiverAccount := aReceiverAccount! !

!classDefinition: 'Transfer class' category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:37:15'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:37:15'!
Transfer class
	instanceVariableNames: ''!
!Transfer class methodsFor: 'instance creation' stamp: 'MO 10/20/2022 22:02:20'!
register: aValue from: aSenderAccount to: aReceiverAccount

	| transaction |
	
	transaction := self new 	initializeFor: aValue forSender: aSenderAccount forReceiver: aReceiverAccount.
	
	aSenderAccount register: transaction.
	aReceiverAccount register: transaction.
	
	^ transaction
	
	"value := aValue.
	senderAccount := aSendingAccount.
	receiverAccount := aReceptiveAccount.
	
	Withdraw register: aValue on: aSendingAccount.
	Deposit register: aValue on: aReceptiveAccount.
	
	aSendingAccount registerTransference: self.
	aReceptiveAccount registerTransference: self."! !
!Transfer class methodsFor: 'error messages' stamp: 'MO 10/17/2022 22:02:32'!
canNotTransferToItselfErrorMessage

	^ 'no maquina, como te vas a transferir a vos mismo, estas re loco'! !

!methodRemoval: Transfer #initializeFor: stamp: 'MO 10/23/2022 21:37:15'!
initializeFor: aValue

	value := aValue!
!Transfer methodsFor: 'initialization' stamp: 'MO 10/21/2022 15:18:34'!
initializeForValue: aValue forSender: aSenderAccount forReceiver: aReceiverAccount

	value := aValue.
	senderAccount := aSenderAccount.
	receiverAccount := aReceiverAccount! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'MO 10/21/2022 15:18:40' prior: 50569281!
register: aValue from: aSenderAccount to: aReceiverAccount

	| transaction |
	
	transaction := self new 	initializeForValue: aValue forSender: aSenderAccount forReceiver: aReceiverAccount.
	
	aSenderAccount register: transaction.
	aReceiverAccount register: transaction.
	
	^ transaction
	
	"value := aValue.
	senderAccount := aSendingAccount.
	receiverAccount := aReceptiveAccount.
	
	Withdraw register: aValue on: aSendingAccount.
	Deposit register: aValue on: aReceptiveAccount.
	
	aSendingAccount registerTransference: self.
	aReceptiveAccount registerTransference: self."! !

!methodRemoval: Transfer #initializeFor:forSender:forReceiver: stamp: 'MO 10/23/2022 21:37:16'!
initializeFor: aValue forSender: aSenderAccount forReceiver: aReceiverAccount

	value := aValue.
	senderAccount := aSenderAccount.
	receiverAccount := aReceiverAccount!

!methodRemoval: Transfer #register:from:to: stamp: 'MO 10/23/2022 21:37:16'!
register: aValue from: aSendingAccount to: aReceptiveAccount
	
	value := aValue.
	sendingAccount := aSendingAccount.
	receivingAccount := aReceptiveAccount.
	
	Withdraw register: aValue on: aSendingAccount.
	Deposit register: aValue on: aReceptiveAccount.
	
	aSendingAccount registerTransference: self.
	aReceptiveAccount registerTransference: self.!
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/21/2022 15:22:10' prior: 50568623!
test16AccountCanTransferToAnotherAccountCorrectly

	| anotherFuckingAccount aMothefuckingAccount |
	
	aMothefuckingAccount := ReceptiveAccount new.
	anotherFuckingAccount := ReceptiveAccount new.

	Transfer register: 50 from: aMothefuckingAccount to: anotherFuckingAccount.
	
	self assert: aMothefuckingAccount balance equals: (-50).
	self assert: anotherFuckingAccount balance equals: 50! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'MO 10/21/2022 15:28:26' prior: 50569321!
register: aValue from: aSenderAccount to: aReceiverAccount

	| transaction |
	
	transaction := self new 	initializeForValue: aValue forSender: aSenderAccount forReceiver: aReceiverAccount.
	
	aSenderAccount register: transaction.
	aReceiverAccount register: transaction.
	
	^ transaction! !

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:37:16'!
Object subclass: #Transfer
	instanceVariableNames: 'value senderAccount receiverAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:37:16'!
Object subclass: #Transfer
	instanceVariableNames: 'value senderAccount receiverAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'registerTransaction' stamp: 'MO 10/21/2022 15:30:01' prior: 50569312!
initializeForValue: aValue forSender: aSenderAccount forReceiver: aReceiverAccount

	value := aValue.
	senderAccount  := aSenderAccount.
	receiverAccount := aReceiverAccount! !
!Transfer class methodsFor: 'instance creation' stamp: 'MO 10/21/2022 15:31:42' prior: 50569380!
register: aValue from: aSenderAccount to: aReceiverAccount

	| transaction |
	
	transaction := self new 	initializeForValue: aValue forSender: aSenderAccount forReceiver: aReceiverAccount.
	
	Withdraw register: aValue on: aSenderAccount.
	Deposit register: aValue on: aReceiverAccount.
	
	"aSenderAccount register: transaction.
	aReceiverAccount register: transaction."
	
	^ transaction! !
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/21/2022 15:33:14' prior: 50569364!
test16AccountCanTransferToAnotherAccountCorrectly

	| anotherFuckingAccount aMothefuckingAccount |
	
	aMothefuckingAccount := ReceptiveAccount new.
	anotherFuckingAccount := ReceptiveAccount new.
	
	Transfer register: 50 from: aMothefuckingAccount to: anotherFuckingAccount.
	
	self assert: aMothefuckingAccount balance equals: (-50).
	self assert: anotherFuckingAccount balance equals: 50! !
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/21/2022 15:34:28' prior: 50568639!
test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly

	| anotherFuckingAccount aMothefuckingAccount portfolio|
	
	aMothefuckingAccount := ReceptiveAccount new.
	anotherFuckingAccount := ReceptiveAccount new.
	portfolio := Portfolio new.
	portfolio add: anotherFuckingAccount.

	Transfer register: 50 from: aMothefuckingAccount to: anotherFuckingAccount.
	
	self assert: aMothefuckingAccount balance equals: (-50).
	self assert: anotherFuckingAccount balance equals: 50! !
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/21/2022 15:34:34' prior: 50569448!
test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly

	| anotherFuckingAccount aMothefuckingAccount portfolio |
	
	aMothefuckingAccount := ReceptiveAccount new.
	anotherFuckingAccount := ReceptiveAccount new.
	portfolio := Portfolio new.
	portfolio add: anotherFuckingAccount.

	Transfer register: 50 from: aMothefuckingAccount to: anotherFuckingAccount.
	
	self assert: aMothefuckingAccount balance equals: (-50).
	self assert: anotherFuckingAccount balance equals: 50! !
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/21/2022 15:35:07' prior: 50568658!
test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount

	| anotherFuckingAccount aMothefuckingAccount anOperation |
	
	aMothefuckingAccount := ReceptiveAccount new.
	anotherFuckingAccount := ReceptiveAccount new.
	
	anOperation := Transfer register: 50 from: aMothefuckingAccount to: anotherFuckingAccount.
	
	self assert: (aMothefuckingAccount hasRegisteredTransfer: anOperation)! !
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/21/2022 15:35:52' prior: 50568673!
test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount

	| anotherFuckingAccount aMothefuckingAccount anOperation |
	
	aMothefuckingAccount := ReceptiveAccount new.
	anotherFuckingAccount := ReceptiveAccount new.
	
	anOperation := Transfer register: 50 from: aMothefuckingAccount to: anotherFuckingAccount.
	
	self assert: (anotherFuckingAccount hasRegisteredTransfer: anOperation)! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'HAW 5/25/2019 11:24:46' prior: 50569050 overrides: 50568836!
balance

	^transactions 
		inject: 0
		into: [ :currentBalance :transaction | transaction affectBalance: currentBalance ]! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'cde 10/20/2022 21:20:45' prior: 50569515 overrides: 50568836!
balance
	|transactionsBalance transferencesBalance|
	
	transactionsBalance := self balanceOfTransactions.
	transferencesBalance := 0."self balanceOfTransferences"
	^ transactionsBalance + transferencesBalance ! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'MO 10/21/2022 15:42:29' prior: 50569523 overrides: 50568836!
balance
	|transactionsBalance transferencesBalance|
	
	transactionsBalance := self balanceOfTransactions.
	transferencesBalance := self balanceOfTransferences.
	
	^ transactionsBalance + transferencesBalance ! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'HAW 5/25/2019 11:24:46' prior: 50569534 overrides: 50568836!
balance

	^transactions 
		inject: 0
		into: [ :currentBalance :transaction | transaction affectBalance: currentBalance ]! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'MO 10/21/2022 15:45:12' prior: 50569545 overrides: 50568836!
balance

	^transactions 
		inject: 0
		into: [ :currentBalance :transaction | transaction affectBalance: currentBalance forAccount: anAccount ]! !
!Deposit methodsFor: 'balance' stamp: 'MO 10/21/2022 15:47:10'!
affectBalance: aBalance forAccount: anAccount

	^aBalance + value ! !
!Withdraw methodsFor: 'balance' stamp: 'MO 10/21/2022 15:47:32'!
affectBalance: aBalance forAccount: anAccount
	
	^aBalance - value! !
!Transfer methodsFor: 'balance' stamp: 'MO 10/21/2022 15:49:49'!
affectBalance: aBalance forAccount: anAccount

	(anAccount = senderAccount)   ifTrue: [^ aBalance - value].
	(anAccount = receiverAccount) ifTrue: [^ aBalance + value].
	^ 0! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'MO 10/21/2022 15:50:52' prior: 50569553 overrides: 50568836!
balance

	^transactions 
		inject: 0
		into: [ :currentBalance :transaction | transaction affectBalance: currentBalance forAccount: self ]! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'MO 10/21/2022 15:51:10' prior: 50569579 overrides: 50568836!
balance

	^ transactions 
		inject: 0
		into: [ :currentBalance :transaction | transaction affectBalance: currentBalance forAccount: self ]! !
!Withdraw methodsFor: 'balance' stamp: 'MO 10/21/2022 15:51:51' prior: 50569565!
affectBalance: aBalance forAccount: anAccount
	
	^ aBalance - value! !

!methodRemoval: ReceptiveAccount #balanceOfTransactions stamp: 'MO 10/23/2022 21:37:17'!
balanceOfTransactions
	^transactions 
			inject: 0
			into: [ :currentBalance :transaction | transaction affectBalance: currentBalance ]

	!

!methodRemoval: ReceptiveAccount #balanceOfTransferences stamp: 'MO 10/23/2022 21:37:17'!
balanceOfTransferences
	^transactions 
			inject: 0
			into: [ :currentBalance :transference | (transference receivingAccount = self) ifTrue: [transference value] 
				ifFalse: [transference value * (-1)]  ].

	!

!methodRemoval: Withdraw #affectBalance: stamp: 'MO 10/23/2022 21:37:17'!
affectBalance: aBalance

	^aBalance - value!

!methodRemoval: Deposit #affectBalance: stamp: 'MO 10/23/2022 21:37:17'!
affectBalance: aBalance

	^aBalance + value !
!Transfer class methodsFor: 'instance creation' stamp: 'MO 10/21/2022 15:56:52' prior: 50569418!
register: aValue from: aSenderAccount to: aReceiverAccount

	| transaction |
	
	transaction := self new 	initializeForValue: aValue forSender: aSenderAccount forReceiver: aReceiverAccount.
	
	aSenderAccount register: transaction.
	aReceiverAccount register: transaction.
	
	^ transaction! !

!classDefinition: #ReceptiveAccount category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:37:17'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:37:17'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!methodRemoval: ReceptiveAccount #registerTransference: stamp: 'MO 10/23/2022 21:37:17'!
registerTransference: aTransference

	transferences add: aTransference 
!

!methodRemoval: ReceptiveAccount #transferences stamp: 'MO 10/23/2022 21:37:17'!
transferences 

	^ transferences copy!
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/21/2022 16:02:15' prior: 50569484!
test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount

	| anotherFuckingAccount aMothefuckingAccount aTransfer |
	
	aMothefuckingAccount := ReceptiveAccount new.
	anotherFuckingAccount := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 from: aMothefuckingAccount to: anotherFuckingAccount.
	
	self assert: (aMothefuckingAccount transactions includes: aTransfer)
! !
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/21/2022 16:02:34' prior: 50569499!
test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount

	| anotherFuckingAccount aMothefuckingAccount aTransfer |
	
	aMothefuckingAccount := ReceptiveAccount new.
	anotherFuckingAccount := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 from: aMothefuckingAccount to: anotherFuckingAccount.
	
	self assert: (aMothefuckingAccount transactions includes: aTransfer)! !

!methodRemoval: ReceptiveAccount #hasRegisteredTransfer: stamp: 'MO 10/23/2022 21:37:17'!
hasRegisteredTransfer: aTransference

	^ transferences includes: aTransference 
!

!classDefinition: #Deposit category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:37:18'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:37:18'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:37:18'!
AccountTransaction subclass: #Transfer
	instanceVariableNames: 'senderAccount receiverAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountTransaction category: 'Portfolio-Solucion' stamp: 'MO 10/23/2022 21:37:18'!
Object subclass: #AccountTransaction
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountTransaction methodsFor: 'balance' stamp: 'MO 10/21/2022 16:05:46'!
affectBalance: aBalance forAccount: anAccount

	self subclassResponsibility ! !

!methodRemoval: AccountTransaction #affectBalance: stamp: 'MO 10/23/2022 21:37:18'!
affectBalance: aBalance

	self subclassResponsibility !

!methodRemoval: Transfer #receivingAccount stamp: 'MO 10/23/2022 21:37:18'!
receivingAccount
	^ receivingAccount copy.!

!methodRemoval: Transfer #sendingAccount stamp: 'MO 10/23/2022 21:37:18'!
sendingAccount
	^ sendingAccount copy.!
!AccountTransaction methodsFor: 'value' stamp: 'MO 10/21/2022 16:08:01' prior: 50569122 overrides: 16902254!
value

	^ value! !

!methodRemoval: Deposit #value stamp: 'MO 10/23/2022 21:37:18'!
value

	^ value!

!methodRemoval: Transfer #value stamp: 'MO 10/23/2022 21:37:18'!
value
	^ value copy.!

!methodRemoval: Withdraw #value stamp: 'MO 10/23/2022 21:37:18'!
value

	^ value!
!AccountTransaction methodsFor: 'balance' stamp: 'MO 10/21/2022 16:09:45' overrides: 16901837!
asString

	self subclassResponsibility ! !
!Transfer methodsFor: 'printing' stamp: 'MO 10/21/2022 16:11:47' overrides: 50569757!
asString

	^ 'Transferencia y blablabla por ', value asString , '.'. ! !
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/21/2022 16:15:23' prior: 50569466!
test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly

	| aSenderAccount aReceiverAccount portfolio |
	
	aSenderAccount := ReceptiveAccount new.
	aReceiverAccount := ReceptiveAccount new.
	portfolio := Portfolio new.
	portfolio add: aReceiverAccount.

	Transfer register: 50 from: aSenderAccount to: aReceiverAccount.
	
	self assert: aSenderAccount balance equals: (-50).
	self assert: aReceiverAccount balance equals: 50! !
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/21/2022 16:15:46' prior: 50569661!
test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount

	| aSenderAccount aReceiverAccount aTransfer |
	
	aSenderAccount := ReceptiveAccount new.
	aReceiverAccount := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 from: aSenderAccount to: aReceiverAccount.
	
	self assert: (aSenderAccount transactions includes: aTransfer)
! !
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/21/2022 16:16:23' prior: 50569676!
test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount

	| aSenderAccount aReceiverAccount aTransfer |
	
	aSenderAccount := ReceptiveAccount new.
	aReceiverAccount := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 from: aSenderAccount to: aReceiverAccount.
	
	self assert: (aReceiverAccount transactions includes: aTransfer)! !
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/23/2022 21:59:22'!
test23AccountSummaryReturnsListWithOneDepositOneWithdrawalAndOneOutgoingTransference

	| anAccount anotherAccount |
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	
	Deposit register: 10 on: anAccount.
	Withdraw register: 5 on: anAccount.
	Transfer register: 10 from: anAccount to: anotherAccount.
	
	self assert: (anAccount accountSummary at: 1) equals: 'Deposito por 20.'.
	self assert: (anAccount accountSummary at: 2) equals: 'Extraccion por 5.'.
	self assert: (anAccount accountSummary at: 3) equals: 'Salida por transferencia de 5.'.
	self assert: (anAccount accountSummary at: 4) equals: 'Balance = -5.'.! !

!testRun: #PortfolioTest #test23AccountSummaryReturnsListWithOneDepositOneWithdrawalAndOneOutgoingTransference stamp: 'MO 10/23/2022 21:59:31'!
FAILURE!
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/23/2022 21:59:55' prior: 50569812!
test23AccountSummaryReturnsListWithOneDepositOneWithdrawalAndOneOutgoingTransference

	| anAccount anotherAccount |
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	
	Deposit register: 10 on: anAccount.
	Withdraw register: 5 on: anAccount.
	Transfer register: 10 from: anAccount to: anotherAccount.
	
	self assert: (anAccount accountSummary at: 1) equals: 'Deposito por 10.'.
	self assert: (anAccount accountSummary at: 2) equals: 'Extraccion por 5.'.
	self assert: (anAccount accountSummary at: 3) equals: 'Salida por transferencia de 10.'.
	self assert: (anAccount accountSummary at: 4) equals: 'Balance = -5.'.! !

!testRun: #PortfolioTest #test23AccountSummaryReturnsListWithOneDepositOneWithdrawalAndOneOutgoingTransference stamp: 'MO 10/23/2022 22:00:01'!
FAILURE!
!ReceptiveAccount methodsFor: 'reports' stamp: 'MO 10/23/2022 22:03:09' prior: 50569096!
accountSummary
	
	|summary |
	
	summary := OrderedCollection new.
	
	transactions do: [:aTransaction | summary add: aTransaction asString].
	
	summary add: 'Balance = ', (self balance) asString, '.'.
	
	^ summary.
	! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'MO 10/23/2022 22:04:43' prior: 50569868!
accountSummary
	
	|summary |
	
	summary := OrderedCollection new.
	
	transactions do: [:aTransaction | summary add: (aTransaction asStringForAccount: self)].
	
	summary add: 'Balance = ', (self balance) asString, '.'.
	
	^ summary.
	! !
!Deposit methodsFor: 'value' stamp: 'MO 10/23/2022 22:05:35'!
asString: anAccount

	^ 'Deposito por ', value asString , '.'. ! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'MO 10/23/2022 22:05:36' prior: 50569172 overrides: 50569757!
asString

	^ 'Deposito por ', value asString: self , '.'. ! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'MO 10/23/2022 22:05:36' prior: 50569888!
asString: anAccount

	^ 'Deposito por ', value asString: self , '.'. ! !

!methodRemoval: Deposit #asString stamp: 'MO 10/23/2022 22:05:36'!
asString

	^ 'Deposito por ', value asString: self , '.'. !
!Deposit methodsFor: 'value' stamp: 'MO 10/23/2022 22:05:54'!
asStringForAccount: anAccount

	^ 'Deposito por ', value asString: self , '.'. ! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'MO 10/23/2022 22:05:54' prior: 50569899!
asString: anAccount

	^ 'Deposito por ', value asStringForAccount: self , '.'. ! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'MO 10/23/2022 22:05:54' prior: 50569908!
asStringForAccount: anAccount

	^ 'Deposito por ', value asStringForAccount: self , '.'. ! !

!methodRemoval: Deposit #asString: stamp: 'MO 10/23/2022 22:05:54'!
asString: anAccount

	^ 'Deposito por ', value asStringForAccount: self , '.'. !
!Transfer methodsFor: 'printing' stamp: 'MO 10/23/2022 22:06:23'!
asStringForAccount: anAccount

	^ 'Transferencia y blablabla por ', value asString , '.'. ! !

!methodRemoval: Transfer #asString stamp: 'MO 10/23/2022 22:06:33'!
asString

	^ 'Transferencia y blablabla por ', value asString , '.'. !
!Deposit methodsFor: 'value' stamp: 'MO 10/23/2022 22:08:57' prior: 50569920!
asStringForAccount: anAccount

	^ 'Deposito por ', value asString, '.'. ! !
!Withdraw methodsFor: 'value' stamp: 'MO 10/23/2022 22:09:31'!
asStringForAccount: anAccount

	^ 'Extraccion por ', value asString , '.'! !

!methodRemoval: Withdraw #asString stamp: 'MO 10/23/2022 22:09:40'!
asString

	^ 'Extraccion por ', value asString , '.'. !
!Transfer methodsFor: 'printing' stamp: 'MO 10/23/2022 22:13:04' prior: 50569930!
asStringForAccount: anAccount

	(anAccount = senderAccount)   ifTrue: [^ 'Salida por transferencia de ', value asString , '.'.].
	(anAccount = receiverAccount) ifTrue: [^ 'Entrada por transferencia de ', value asString , '.'.].
	
	^ 'Cuenta no conocida'! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'MO 10/23/2022 22:14:27'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'MO 10/23/2022 22:14:27'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'MO 10/23/2022 22:14:27'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'MO 10/23/2022 22:14:27'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'MO 10/23/2022 22:14:27'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'MO 10/23/2022 22:14:27'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'MO 10/23/2022 22:14:27'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'MO 10/23/2022 22:14:27'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'MO 10/23/2022 22:14:27'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'MO 10/23/2022 22:14:27'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'MO 10/23/2022 22:14:27'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'MO 10/23/2022 22:14:27'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'MO 10/23/2022 22:14:27'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'MO 10/23/2022 22:14:27'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'MO 10/23/2022 22:14:27'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/23/2022 22:14:27'!
PASSED!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'MO 10/23/2022 22:14:27'!
PASSED!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'MO 10/23/2022 22:14:27'!
PASSED!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'MO 10/23/2022 22:14:27'!
PASSED!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'MO 10/23/2022 22:14:28'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'MO 10/23/2022 22:14:28'!
PASSED!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/23/2022 22:14:28'!
PASSED!

!testRun: #PortfolioTest #test23AccountSummaryReturnsListWithOneDepositOneWithdrawalAndOneOutgoingTransference stamp: 'MO 10/23/2022 22:14:28'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/23/2022 22:17:27'!
test24AccountSummaryReturnsListWithOneOutgoingTransferenceAndOneIncomingTransference

	| anAccount anotherAccount |
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	
	Transfer register: 10 from: anAccount to: anotherAccount.
	Transfer register: 01 from: anotherAccount to: anAccount.
	
	self assert: (anAccount accountSummary at: 1) equals: 'Salida por transferencia de 10.'.
	self assert: (anAccount accountSummary at: 2) equals: 'Entrada por transferencia de 1.'.
	self assert: (anAccount accountSummary at: 3) equals: 'Balance = -9.'! !

!testRun: #PortfolioTest #test24AccountSummaryReturnsListWithOneOutgoingTransferenceAndOneIncomingTransference stamp: 'MO 10/23/2022 22:17:32'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'MO 10/23/2022 22:17:32'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'MO 10/23/2022 22:17:32'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'MO 10/23/2022 22:17:32'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'MO 10/23/2022 22:17:32'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'MO 10/23/2022 22:17:32'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'MO 10/23/2022 22:17:32'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'MO 10/23/2022 22:17:32'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'MO 10/23/2022 22:17:32'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'MO 10/23/2022 22:17:32'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'MO 10/23/2022 22:17:32'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'MO 10/23/2022 22:17:32'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'MO 10/23/2022 22:17:32'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'MO 10/23/2022 22:17:32'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'MO 10/23/2022 22:17:32'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'MO 10/23/2022 22:17:32'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/23/2022 22:17:32'!
PASSED!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'MO 10/23/2022 22:17:33'!
PASSED!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'MO 10/23/2022 22:17:33'!
PASSED!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'MO 10/23/2022 22:17:33'!
PASSED!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'MO 10/23/2022 22:17:33'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'MO 10/23/2022 22:17:33'!
PASSED!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/23/2022 22:17:33'!
PASSED!

!testRun: #PortfolioTest #test23AccountSummaryReturnsListWithOneDepositOneWithdrawalAndOneOutgoingTransference stamp: 'MO 10/23/2022 22:17:33'!
PASSED!

!testRun: #PortfolioTest #test24AccountSummaryReturnsListWithOneOutgoingTransferenceAndOneIncomingTransference stamp: 'MO 10/23/2022 22:17:33'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/23/2022 22:24:18'!
test24AccountNetTrasferReportIsCorrectWithTwoTransactions

	| anAccount anotherAccount |

	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.

	Transfer register: 10 from: anAccount to: anotherAccount.
	Transfer register: 01 from: anotherAccount to: anAccount.

	self assert: (anAccount netTransferReport) equals: 'De reporte de neto de transferencias de -9.'! !

!testRun: #PortfolioTest #test24AccountNetTrasferReportIsCorrectWithTwoTransactions stamp: 'MO 10/23/2022 22:25:04'!
ERROR!
!ReceptiveAccount methodsFor: 'reports' stamp: 'MO 10/23/2022 22:25:26'!
netTransferReport
	self shouldBeImplemented.! !
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/23/2022 22:27:37'!
test25AccountNetTrasferReportIsCorrectWithTwoTransactions

	| anAccount anotherAccount |

	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.

	Transfer register: 10 from: anAccount to: anotherAccount.
	Transfer register: 01 from: anotherAccount to: anAccount.

	self assert: (anAccount netTransferReport) equals: 'De reporte de neto de transferencias de -9.'! !

!methodRemoval: PortfolioTest #test24AccountNetTrasferReportIsCorrectWithTwoTransactions stamp: 'MO 10/23/2022 22:27:37'!
test24AccountNetTrasferReportIsCorrectWithTwoTransactions

	| anAccount anotherAccount |

	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.

	Transfer register: 10 from: anAccount to: anotherAccount.
	Transfer register: 01 from: anotherAccount to: anAccount.

	self assert: (anAccount netTransferReport) equals: 'De reporte de neto de transferencias de -9.'!
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/23/2022 22:27:56' prior: 50570055!
test24AccountSummaryReturnsListWithOneOutgoingTransferenceAndOneIncomingTransference

	| anAccount anotherAccount |
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	
	Deposit register: 10 on: anAccount.
	Withdraw register: 5 on: anAccount.
	Transfer register: 10 from: anAccount to: anotherAccount.
	Transfer register: 01 from: anotherAccount to: anAccount.
	
	self assert: (anAccount accountSummary at: 1) equals: 'Salida por transferencia de 10.'.
	self assert: (anAccount accountSummary at: 2) equals: 'Entrada por transferencia de 1.'.
	self assert: (anAccount accountSummary at: 3) equals: 'Balance = -9.'! !
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/23/2022 22:17:27' prior: 50570230!
test24AccountSummaryReturnsListWithOneOutgoingTransferenceAndOneIncomingTransference

	| anAccount anotherAccount |
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	
	Transfer register: 10 from: anAccount to: anotherAccount.
	Transfer register: 01 from: anotherAccount to: anAccount.
	
	self assert: (anAccount accountSummary at: 1) equals: 'Salida por transferencia de 10.'.
	self assert: (anAccount accountSummary at: 2) equals: 'Entrada por transferencia de 1.'.
	self assert: (anAccount accountSummary at: 3) equals: 'Balance = -9.'! !
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/23/2022 22:29:05' prior: 50570199!
test25AccountNetTrasferReportIsCorrectWithTwoTransactions

	| anAccount anotherAccount |

	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.

	Deposit register: 10 on: anAccount.
	Withdraw register: 5 on: anAccount.
	Transfer register: 10 from: anAccount to: anotherAccount.
	Transfer register: 01 from: anotherAccount to: anAccount.

	self assert: (anAccount netTransferReport) equals: 'De reporte de neto de transferencias de -9.'! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'MO 10/23/2022 22:40:28' prior: 50570195!
netTransferReport
	
	| netTransfer |
	
	netTransfer := transactions inject: 0
						   into: [ :currentNetTransfer :aTransaction | aTransaction affectNetTransfer: currentNetTransfer forAccount: self ]
	
	^ 'De reporte de neto de transferencias de ', netTransfer asString, '.'! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'MO 10/23/2022 22:40:42'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'MO 10/23/2022 22:40:42'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'MO 10/23/2022 22:40:42'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'MO 10/23/2022 22:40:42'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'MO 10/23/2022 22:40:42'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'MO 10/23/2022 22:40:42'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'MO 10/23/2022 22:40:42'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'MO 10/23/2022 22:40:42'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'MO 10/23/2022 22:40:42'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'MO 10/23/2022 22:40:42'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'MO 10/23/2022 22:40:42'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'MO 10/23/2022 22:40:42'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'MO 10/23/2022 22:40:42'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'MO 10/23/2022 22:40:42'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'MO 10/23/2022 22:40:42'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/23/2022 22:40:42'!
PASSED!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'MO 10/23/2022 22:40:42'!
PASSED!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'MO 10/23/2022 22:40:42'!
PASSED!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'MO 10/23/2022 22:40:42'!
PASSED!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'MO 10/23/2022 22:40:42'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'MO 10/23/2022 22:40:42'!
PASSED!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/23/2022 22:40:42'!
PASSED!

!testRun: #PortfolioTest #test23AccountSummaryReturnsListWithOneDepositOneWithdrawalAndOneOutgoingTransference stamp: 'MO 10/23/2022 22:40:42'!
PASSED!

!testRun: #PortfolioTest #test24AccountSummaryReturnsListWithOneOutgoingTransferenceAndOneIncomingTransference stamp: 'MO 10/23/2022 22:40:42'!
PASSED!

!testRun: #PortfolioTest #test25AccountNetTrasferReportIsCorrectWithTwoTransactions stamp: 'MO 10/23/2022 22:40:42'!
ERROR!

!testRun: #PortfolioTest #test25AccountNetTrasferReportIsCorrectWithTwoTransactions stamp: 'MO 10/23/2022 22:40:42'!
ERROR!
!ReceptiveAccount methodsFor: 'reports' stamp: 'MO 10/23/2022 22:42:23' prior: 50570292!
netTransferReport
	
	| netTransfer |
	
	netTransfer := transactions inject: 0
						   into: [ :currentNetTransfer :aTransaction |
							aTransaction affectNetTransfer: currentNetTransfer forAccount: self ].
	
	^ 'De reporte de neto de transferencias de ', netTransfer asString, '.'! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MO 10/23/2022 22:42:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MO 10/23/2022 22:42:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MO 10/23/2022 22:42:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MO 10/23/2022 22:42:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MO 10/23/2022 22:42:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MO 10/23/2022 22:42:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MO 10/23/2022 22:42:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MO 10/23/2022 22:42:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MO 10/23/2022 22:42:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MO 10/23/2022 22:42:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MO 10/23/2022 22:42:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MO 10/23/2022 22:42:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MO 10/23/2022 22:42:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MO 10/23/2022 22:42:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MO 10/23/2022 22:42:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MO 10/23/2022 22:42:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MO 10/23/2022 22:42:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MO 10/23/2022 22:42:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MO 10/23/2022 22:42:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MO 10/23/2022 22:42:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MO 10/23/2022 22:42:42'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'MO 10/23/2022 22:42:52'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'MO 10/23/2022 22:42:52'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'MO 10/23/2022 22:42:52'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'MO 10/23/2022 22:42:52'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'MO 10/23/2022 22:42:52'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'MO 10/23/2022 22:42:52'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'MO 10/23/2022 22:42:52'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'MO 10/23/2022 22:42:52'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'MO 10/23/2022 22:42:52'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'MO 10/23/2022 22:42:52'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'MO 10/23/2022 22:42:52'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'MO 10/23/2022 22:42:52'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'MO 10/23/2022 22:42:52'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'MO 10/23/2022 22:42:52'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'MO 10/23/2022 22:42:52'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/23/2022 22:42:52'!
PASSED!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'MO 10/23/2022 22:42:52'!
PASSED!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'MO 10/23/2022 22:42:52'!
PASSED!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'MO 10/23/2022 22:42:52'!
PASSED!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'MO 10/23/2022 22:42:52'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'MO 10/23/2022 22:42:52'!
PASSED!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/23/2022 22:42:52'!
PASSED!

!testRun: #PortfolioTest #test23AccountSummaryReturnsListWithOneDepositOneWithdrawalAndOneOutgoingTransference stamp: 'MO 10/23/2022 22:42:52'!
PASSED!

!testRun: #PortfolioTest #test24AccountSummaryReturnsListWithOneOutgoingTransferenceAndOneIncomingTransference stamp: 'MO 10/23/2022 22:42:52'!
PASSED!

!testRun: #PortfolioTest #test25AccountNetTrasferReportIsCorrectWithTwoTransactions stamp: 'MO 10/23/2022 22:42:52'!
ERROR!

!testRun: #PortfolioTest #test25AccountNetTrasferReportIsCorrectWithTwoTransactions stamp: 'MO 10/23/2022 22:42:52'!
ERROR!
!Deposit methodsFor: 'balance' stamp: 'MO 10/23/2022 22:43:28'!
affectNetTransfer: aSmallInteger forAccount: aReceptiveAccount 
	self shouldBeImplemented.! !
!Deposit methodsFor: 'balance' stamp: 'MO 10/23/2022 22:44:35' prior: 50570601!
affectNetTransfer: aNetTransfer forAccount: anAccount 
	
	^ aNetTransfer! !
!Withdraw methodsFor: 'balance' stamp: 'MO 10/23/2022 22:44:52'!
affectNetTransfer: aNetTransfer forAccount: anAccount 
	
	^ aNetTransfer! !
!Transfer methodsFor: 'balance' stamp: 'MO 10/23/2022 22:46:40'!
affectNetTransfer: aNetTransfer forAccount: anAccount 

	(anAccount = senderAccount)   ifTrue: [^ aNetTransfer - value].
	(anAccount = receiverAccount) ifTrue: [^ aNetTransfer + value].
	
	^ aNetTransfer! !
!Transfer methodsFor: 'balance' stamp: 'MO 10/23/2022 22:47:26' prior: 50570617!
affectNetTransfer: aNetTransfer forAccount: anAccount 

	^ self affectBalance: aNetTransfer forAccount: anAccount! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'MO 10/23/2022 22:48:10'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'MO 10/23/2022 22:48:10'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'MO 10/23/2022 22:48:10'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'MO 10/23/2022 22:48:10'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'MO 10/23/2022 22:48:11'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'MO 10/23/2022 22:48:11'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'MO 10/23/2022 22:48:11'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'MO 10/23/2022 22:48:11'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'MO 10/23/2022 22:48:11'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'MO 10/23/2022 22:48:11'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'MO 10/23/2022 22:48:11'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'MO 10/23/2022 22:48:11'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'MO 10/23/2022 22:48:11'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'MO 10/23/2022 22:48:11'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'MO 10/23/2022 22:48:11'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/23/2022 22:48:11'!
PASSED!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'MO 10/23/2022 22:48:11'!
PASSED!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'MO 10/23/2022 22:48:11'!
PASSED!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'MO 10/23/2022 22:48:11'!
PASSED!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'MO 10/23/2022 22:48:11'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'MO 10/23/2022 22:48:11'!
PASSED!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/23/2022 22:48:11'!
PASSED!

!testRun: #PortfolioTest #test23AccountSummaryReturnsListWithOneDepositOneWithdrawalAndOneOutgoingTransference stamp: 'MO 10/23/2022 22:48:11'!
PASSED!

!testRun: #PortfolioTest #test24AccountSummaryReturnsListWithOneOutgoingTransferenceAndOneIncomingTransference stamp: 'MO 10/23/2022 22:48:11'!
PASSED!

!testRun: #PortfolioTest #test25AccountNetTrasferReportIsCorrectWithTwoTransactions stamp: 'MO 10/23/2022 22:48:11'!
PASSED!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'MO 10/23/2022 23:05:41' prior: 50569017 overrides: 16920235!
initialize

	super initialize.
	transactions := OrderedCollection new.! !
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/23/2022 23:15:32'!
test25AccountSummaryOnPortfolioReturnsListWithNoBalanceWhenEmpty
	
	| aPortfolio |
	
	aPortfolio := Portfolio new.
	
	self assert: (aPortfolio accountSummary at: 1) equals: 'Balance = 0.'.! !
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/23/2022 23:16:35'!
test29AccountNetTrasferReportIsCorrectWithTwoTransactions

	| anAccount anotherAccount |

	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.

	Deposit register: 10 on: anAccount.
	Withdraw register: 5 on: anAccount.
	Transfer register: 10 from: anAccount to: anotherAccount.
	Transfer register: 01 from: anotherAccount to: anAccount.

	self assert: (anAccount netTransferReport) equals: 'De reporte de neto de transferencias de -9.'! !

!methodRemoval: PortfolioTest #test25AccountNetTrasferReportIsCorrectWithTwoTransactions stamp: 'MO 10/23/2022 23:16:35'!
test25AccountNetTrasferReportIsCorrectWithTwoTransactions

	| anAccount anotherAccount |

	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.

	Deposit register: 10 on: anAccount.
	Withdraw register: 5 on: anAccount.
	Transfer register: 10 from: anAccount to: anotherAccount.
	Transfer register: 01 from: anotherAccount to: anAccount.

	self assert: (anAccount netTransferReport) equals: 'De reporte de neto de transferencias de -9.'!
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/23/2022 23:19:37'!
test26AccountSummaryOnPortfolioReturnsListWithOneDeposit

	| aPortfolio anAccount |

	anAccount := ReceptiveAccount new.
	aPortfolio := Portfolio with: anAccount.
	Deposit register: 50 on: anAccount.

	self assert: (aPortfolio accountSummary at: 1) equals: 'Deposito por 50.'.
	self assert: (aPortfolio accountSummary at: 2) equals: 'Balance = 50.'.! !

!testRun: #PortfolioTest #test25AccountSummaryOnPortfolioReturnsListWithNoBalanceWhenEmpty stamp: 'MO 10/23/2022 23:19:42'!
ERROR!

!testRun: #PortfolioTest #test25AccountSummaryOnPortfolioReturnsListWithNoBalanceWhenEmpty stamp: 'MO 10/23/2022 23:19:42'!
ERROR!
!Portfolio methodsFor: 'reports' stamp: 'MO 10/23/2022 23:20:19'!
accountSummary
	self shouldBeImplemented.! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'MO 10/23/2022 23:27:48' prior: 50569878!
accountSummary
	
	|summary |
	
	summary := self collectTransactions.
	
	summary add: 'Balance = ', (self balance) asString, '.'.
	
	^ summary.
	! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'MO 10/23/2022 23:28:45'!
collectTransactions
	
	|summary |
	
	summary := OrderedCollection new.
	
	transactions do: [:aTransaction | summary add: (aTransaction asStringForAccount: self)].
	
	^ summary.
	! !
!Portfolio methodsFor: 'reports' stamp: 'MO 10/23/2022 23:33:39' prior: 50570804!
accountSummary
	
	|summary |
	
	summary := self collectTransactions.
	
	summary add: 'Balance = ', (self balance) asString, '.'.
	
	^ summary! !
!Portfolio methodsFor: 'reports' stamp: 'MO 10/23/2022 23:34:32'!
collectTransactions
	
	^ accounts inject: (OrderedCollection new)
			into: [ :currentSummary :anAccount | currentSummary addAll: (anAccount collectTransactions) ].! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'MO 10/23/2022 23:35:12'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'MO 10/23/2022 23:35:12'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'MO 10/23/2022 23:35:12'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'MO 10/23/2022 23:35:12'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'MO 10/23/2022 23:35:12'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'MO 10/23/2022 23:35:12'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'MO 10/23/2022 23:35:12'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'MO 10/23/2022 23:35:12'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'MO 10/23/2022 23:35:12'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'MO 10/23/2022 23:35:12'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'MO 10/23/2022 23:35:12'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'MO 10/23/2022 23:35:12'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'MO 10/23/2022 23:35:12'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'MO 10/23/2022 23:35:12'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'MO 10/23/2022 23:35:12'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/23/2022 23:35:13'!
PASSED!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'MO 10/23/2022 23:35:13'!
PASSED!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'MO 10/23/2022 23:35:13'!
PASSED!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'MO 10/23/2022 23:35:13'!
PASSED!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'MO 10/23/2022 23:35:13'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'MO 10/23/2022 23:35:13'!
PASSED!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/23/2022 23:35:13'!
PASSED!

!testRun: #PortfolioTest #test23AccountSummaryReturnsListWithOneDepositOneWithdrawalAndOneOutgoingTransference stamp: 'MO 10/23/2022 23:35:13'!
PASSED!

!testRun: #PortfolioTest #test24AccountSummaryReturnsListWithOneOutgoingTransferenceAndOneIncomingTransference stamp: 'MO 10/23/2022 23:35:13'!
PASSED!

!testRun: #PortfolioTest #test25AccountSummaryOnPortfolioReturnsListWithNoBalanceWhenEmpty stamp: 'MO 10/23/2022 23:35:13'!
PASSED!

!testRun: #PortfolioTest #test26AccountSummaryOnPortfolioReturnsListWithOneDeposit stamp: 'MO 10/23/2022 23:35:13'!
PASSED!

!testRun: #PortfolioTest #test29AccountNetTrasferReportIsCorrectWithTwoTransactions stamp: 'MO 10/23/2022 23:35:13'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/23/2022 23:37:29'!
test27AccountSummaryOnPortfolioReturnsListWithOneDepositAndOneWithdrawal

	| aPortfolio anAccount anotherAccount |

	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio with: anAccount with: anotherAccount.
	
	Deposit register: 100 on: anAccount.
	Withdraw register: 25 on: anotherAccount. 
	
	self assert: (aPortfolio accountSummary at: 1) equals: 'Deposito por 100.'.
	self assert: (aPortfolio accountSummary at: 2) equals: 'Extraccion por 25.'.
	self assert: (aPortfolio accountSummary at: 3) equals: 'Balance = 75.'.! !

!testRun: #PortfolioTest #test27AccountSummaryOnPortfolioReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/23/2022 23:37:37'!
FAILURE!
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/23/2022 23:38:08' prior: 50570947!
test27AccountSummaryOnPortfolioReturnsListWithOneDepositAndOneWithdrawal

	| aPortfolio anAccount anotherAccount |

	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio with: anAccount with: anotherAccount.
	
	Deposit register: 100 on: anAccount.
	Withdraw register: 25 on: anotherAccount. 
	
	self assert: (aPortfolio accountSummary at: 1) equals: 'Extraccion por 25.'.
	self assert: (aPortfolio accountSummary at: 2) equals: 'Deposito por 100.'.
	self assert: (aPortfolio accountSummary at: 3) equals: 'Balance = 75.'.! !

!testRun: #PortfolioTest #test27AccountSummaryOnPortfolioReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/23/2022 23:38:09'!
FAILURE!
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/23/2022 23:38:32' prior: 50570972!
test27AccountSummaryOnPortfolioReturnsListWithOneDepositAndOneWithdrawal

	| aPortfolio anAccount anotherAccount |

	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio with: anAccount with: anotherAccount.
	
	Deposit register: 100 on: anAccount.
	Withdraw register: 25 on: anotherAccount. 
	
	self assert: (aPortfolio accountSummary at: 1) equals: 'Deposito por 100.'.
	self assert: (aPortfolio accountSummary at: 2) equals: 'Extraccion por 25.'.
	self assert: (aPortfolio accountSummary at: 3) equals: 'Balance = 75.'.! !

!testRun: #PortfolioTest #test27AccountSummaryOnPortfolioReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/23/2022 23:38:34'!
FAILURE!
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/23/2022 23:39:05' prior: 50570997!
test27AccountSummaryOnPortfolioReturnsListWithOneDepositAndOneWithdrawal

	| aPortfolio anAccount anotherAccount |

	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio with: anAccount with: anotherAccount.
	
	Deposit register: 100 on: anAccount.
	Withdraw register: 25 on: anotherAccount. 
	
	self assert: (aPortfolio accountSummary at: 1) equals: 'Extraccion por 25.'.
	self assert: (aPortfolio accountSummary at: 2) equals: 'Deposito por 100.'.
	self assert: (aPortfolio accountSummary at: 3) equals: 'Balance = 75.'.! !

!testRun: #PortfolioTest #test27AccountSummaryOnPortfolioReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/23/2022 23:39:07'!
FAILURE!

!testRun: #PortfolioTest #test27AccountSummaryOnPortfolioReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/23/2022 23:40:31'!
FAILURE!
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/23/2022 23:42:41' prior: 50571022!
test27AccountSummaryOnPortfolioReturnsListWithOneDepositAndOneWithdrawal

	| aPortfolio anAccount anotherAccount portfolioSummary |

	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio with: anAccount with: anotherAccount.
	
	Deposit register: 100 on: anAccount.
	Withdraw register: 25 on: anotherAccount. 
	
	portfolioSummary := aPortfolio accountSummary.
	
	self assert: (portfolioSummary at: 1) equals: 'Extraccion por 25.'.
	self assert: (portfolioSummary at: 2) equals: 'Deposito por 100.'.
	self assert: (portfolioSummary at: 3) equals: 'Balance = 75.'.! !

!testRun: #PortfolioTest #test27AccountSummaryOnPortfolioReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/23/2022 23:42:43'!
FAILURE!

ReceptiveAccount!

a ReceptiveAccount!

a ReceptiveAccount!

ReceptiveAccount!

a!
!Portfolio methodsFor: 'reports' stamp: 'MO 10/23/2022 23:49:25' prior: 50570832!
collectTransactions
	
	|transactionCollection|
	
	transactionCollection := OrderedCollection new.
	
	^ accounts inject: transactionCollection
			into: [ :currentSummary :anAccount | currentSummary addAll: (anAccount collectTransactions) ].! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'MO 10/23/2022 23:49:31'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'MO 10/23/2022 23:49:31'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'MO 10/23/2022 23:49:31'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'MO 10/23/2022 23:49:31'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'MO 10/23/2022 23:49:31'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'MO 10/23/2022 23:49:31'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'MO 10/23/2022 23:49:31'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'MO 10/23/2022 23:49:31'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'MO 10/23/2022 23:49:31'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'MO 10/23/2022 23:49:31'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'MO 10/23/2022 23:49:31'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'MO 10/23/2022 23:49:31'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'MO 10/23/2022 23:49:31'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'MO 10/23/2022 23:49:31'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'MO 10/23/2022 23:49:31'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/23/2022 23:49:31'!
PASSED!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'MO 10/23/2022 23:49:31'!
PASSED!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'MO 10/23/2022 23:49:31'!
PASSED!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'MO 10/23/2022 23:49:31'!
PASSED!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'MO 10/23/2022 23:49:31'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'MO 10/23/2022 23:49:31'!
PASSED!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/23/2022 23:49:31'!
PASSED!

!testRun: #PortfolioTest #test23AccountSummaryReturnsListWithOneDepositOneWithdrawalAndOneOutgoingTransference stamp: 'MO 10/23/2022 23:49:31'!
PASSED!

!testRun: #PortfolioTest #test24AccountSummaryReturnsListWithOneOutgoingTransferenceAndOneIncomingTransference stamp: 'MO 10/23/2022 23:49:31'!
PASSED!

!testRun: #PortfolioTest #test25AccountSummaryOnPortfolioReturnsListWithNoBalanceWhenEmpty stamp: 'MO 10/23/2022 23:49:32'!
PASSED!

!testRun: #PortfolioTest #test26AccountSummaryOnPortfolioReturnsListWithOneDeposit stamp: 'MO 10/23/2022 23:49:32'!
PASSED!

!testRun: #PortfolioTest #test27AccountSummaryOnPortfolioReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/23/2022 23:49:32'!
FAILURE!

!testRun: #PortfolioTest #test29AccountNetTrasferReportIsCorrectWithTwoTransactions stamp: 'MO 10/23/2022 23:49:32'!
PASSED!

!testRun: #PortfolioTest #test27AccountSummaryOnPortfolioReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/23/2022 23:49:32'!
FAILURE!
!Portfolio methodsFor: 'reports' stamp: 'MO 10/23/2022 23:52:36' prior: 50571081!
collectTransactions
	
	| currentSummary |
	
	currentSummary := OrderedCollection new.
	
	^ accounts do: [ :anAccount | currentSummary addAll: (anAccount collectTransactions)]! !
!Portfolio methodsFor: 'reports' stamp: 'MO 10/23/2022 23:54:01' prior: 50571208!
collectTransactions
	
	| currentSummary |
	
	currentSummary := OrderedCollection new.
	
	accounts do: [ :anAccount | currentSummary addAll: (anAccount collectTransactions)].
	
	^ currentSummary! !
!Portfolio methodsFor: 'reports' stamp: 'MO 10/23/2022 23:54:17' prior: 50571217!
collectTransactions
	
	| currentSummary |
	
	currentSummary := OrderedCollection new.
	
	accounts do: [ :anAccount | currentSummary addAll: (anAccount collectTransactions) ].
	
	^ currentSummary! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'MO 10/23/2022 23:54:30'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'MO 10/23/2022 23:54:30'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'MO 10/23/2022 23:54:30'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'MO 10/23/2022 23:54:30'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'MO 10/23/2022 23:54:30'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'MO 10/23/2022 23:54:30'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'MO 10/23/2022 23:54:30'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'MO 10/23/2022 23:54:31'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'MO 10/23/2022 23:54:31'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'MO 10/23/2022 23:54:31'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'MO 10/23/2022 23:54:31'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'MO 10/23/2022 23:54:31'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'MO 10/23/2022 23:54:31'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'MO 10/23/2022 23:54:31'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'MO 10/23/2022 23:54:31'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/23/2022 23:54:31'!
PASSED!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'MO 10/23/2022 23:54:31'!
PASSED!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'MO 10/23/2022 23:54:31'!
PASSED!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'MO 10/23/2022 23:54:31'!
PASSED!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'MO 10/23/2022 23:54:31'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'MO 10/23/2022 23:54:31'!
PASSED!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/23/2022 23:54:31'!
PASSED!

!testRun: #PortfolioTest #test23AccountSummaryReturnsListWithOneDepositOneWithdrawalAndOneOutgoingTransference stamp: 'MO 10/23/2022 23:54:31'!
PASSED!

!testRun: #PortfolioTest #test24AccountSummaryReturnsListWithOneOutgoingTransferenceAndOneIncomingTransference stamp: 'MO 10/23/2022 23:54:31'!
PASSED!

!testRun: #PortfolioTest #test25AccountSummaryOnPortfolioReturnsListWithNoBalanceWhenEmpty stamp: 'MO 10/23/2022 23:54:31'!
PASSED!

!testRun: #PortfolioTest #test26AccountSummaryOnPortfolioReturnsListWithOneDeposit stamp: 'MO 10/23/2022 23:54:31'!
PASSED!

!testRun: #PortfolioTest #test27AccountSummaryOnPortfolioReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/23/2022 23:54:31'!
FAILURE!

!testRun: #PortfolioTest #test29AccountNetTrasferReportIsCorrectWithTwoTransactions stamp: 'MO 10/23/2022 23:54:31'!
PASSED!

!testRun: #PortfolioTest #test27AccountSummaryOnPortfolioReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/23/2022 23:54:31'!
FAILURE!
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/23/2022 23:54:53' prior: 50571052!
test27AccountSummaryOnPortfolioReturnsListWithOneDepositAndOneWithdrawal

	| aPortfolio anAccount anotherAccount portfolioSummary |

	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio with: anAccount with: anotherAccount.
	
	Deposit register: 100 on: anAccount.
	Withdraw register: 25 on: anotherAccount. 
	
	portfolioSummary := aPortfolio accountSummary.
	
	self assert: (portfolioSummary at: 1) equals: 'Deposito por 100.'.
	self assert: (portfolioSummary at: 2) equals: 'Extraccion por 25.'.
	self assert: (portfolioSummary at: 3) equals: 'Balance = 75.'.! !

!testRun: #PortfolioTest #test27AccountSummaryOnPortfolioReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/23/2022 23:54:55'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'MO 10/23/2022 23:54:55'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'MO 10/23/2022 23:54:55'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'MO 10/23/2022 23:54:55'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'MO 10/23/2022 23:54:55'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'MO 10/23/2022 23:54:55'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'MO 10/23/2022 23:54:55'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'MO 10/23/2022 23:54:55'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'MO 10/23/2022 23:54:55'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'MO 10/23/2022 23:54:55'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'MO 10/23/2022 23:54:55'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'MO 10/23/2022 23:54:55'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'MO 10/23/2022 23:54:55'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'MO 10/23/2022 23:54:55'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'MO 10/23/2022 23:54:55'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'MO 10/23/2022 23:54:55'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/23/2022 23:54:56'!
PASSED!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'MO 10/23/2022 23:54:56'!
PASSED!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'MO 10/23/2022 23:54:56'!
PASSED!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'MO 10/23/2022 23:54:56'!
PASSED!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'MO 10/23/2022 23:54:56'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'MO 10/23/2022 23:54:56'!
PASSED!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/23/2022 23:54:56'!
PASSED!

!testRun: #PortfolioTest #test23AccountSummaryReturnsListWithOneDepositOneWithdrawalAndOneOutgoingTransference stamp: 'MO 10/23/2022 23:54:56'!
PASSED!

!testRun: #PortfolioTest #test24AccountSummaryReturnsListWithOneOutgoingTransferenceAndOneIncomingTransference stamp: 'MO 10/23/2022 23:54:56'!
PASSED!

!testRun: #PortfolioTest #test25AccountSummaryOnPortfolioReturnsListWithNoBalanceWhenEmpty stamp: 'MO 10/23/2022 23:54:56'!
PASSED!

!testRun: #PortfolioTest #test26AccountSummaryOnPortfolioReturnsListWithOneDeposit stamp: 'MO 10/23/2022 23:54:56'!
PASSED!

!testRun: #PortfolioTest #test27AccountSummaryOnPortfolioReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/23/2022 23:54:56'!
PASSED!

!testRun: #PortfolioTest #test29AccountNetTrasferReportIsCorrectWithTwoTransactions stamp: 'MO 10/23/2022 23:54:56'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/23/2022 23:37:29' prior: 50571352!
test27AccountSummaryOnPortfolioReturnsListWithOneDepositAndOneWithdrawal

	| aPortfolio anAccount anotherAccount |

	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio with: anAccount with: anotherAccount.
	
	Deposit register: 100 on: anAccount.
	Withdraw register: 25 on: anotherAccount. 
	
	self assert: (aPortfolio accountSummary at: 1) equals: 'Deposito por 100.'.
	self assert: (aPortfolio accountSummary at: 2) equals: 'Extraccion por 25.'.
	self assert: (aPortfolio accountSummary at: 3) equals: 'Balance = 75.'.! !

!testRun: #PortfolioTest #test27AccountSummaryOnPortfolioReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/23/2022 23:55:34'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'MO 10/23/2022 23:55:34'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'MO 10/23/2022 23:55:34'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'MO 10/23/2022 23:55:34'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'MO 10/23/2022 23:55:34'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'MO 10/23/2022 23:55:34'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'MO 10/23/2022 23:55:34'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'MO 10/23/2022 23:55:34'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'MO 10/23/2022 23:55:34'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'MO 10/23/2022 23:55:34'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'MO 10/23/2022 23:55:34'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'MO 10/23/2022 23:55:34'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'MO 10/23/2022 23:55:34'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'MO 10/23/2022 23:55:34'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'MO 10/23/2022 23:55:35'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'MO 10/23/2022 23:55:35'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/23/2022 23:55:35'!
PASSED!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'MO 10/23/2022 23:55:35'!
PASSED!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'MO 10/23/2022 23:55:35'!
PASSED!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'MO 10/23/2022 23:55:35'!
PASSED!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'MO 10/23/2022 23:55:35'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'MO 10/23/2022 23:55:35'!
PASSED!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/23/2022 23:55:35'!
PASSED!

!testRun: #PortfolioTest #test23AccountSummaryReturnsListWithOneDepositOneWithdrawalAndOneOutgoingTransference stamp: 'MO 10/23/2022 23:55:35'!
PASSED!

!testRun: #PortfolioTest #test24AccountSummaryReturnsListWithOneOutgoingTransferenceAndOneIncomingTransference stamp: 'MO 10/23/2022 23:55:35'!
PASSED!

!testRun: #PortfolioTest #test25AccountSummaryOnPortfolioReturnsListWithNoBalanceWhenEmpty stamp: 'MO 10/23/2022 23:55:35'!
PASSED!

!testRun: #PortfolioTest #test26AccountSummaryOnPortfolioReturnsListWithOneDeposit stamp: 'MO 10/23/2022 23:55:35'!
PASSED!

!testRun: #PortfolioTest #test27AccountSummaryOnPortfolioReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/23/2022 23:55:35'!
PASSED!

!testRun: #PortfolioTest #test29AccountNetTrasferReportIsCorrectWithTwoTransactions stamp: 'MO 10/23/2022 23:55:35'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/23/2022 23:58:58'!
test28AccountSummaryOnPortfolioReturnsListWithOneDepositOneWithdrawalAndOneOutgoingTransference

	| aPortfolio anAccount anotherAccount |
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio with: anAccount with: anotherAccount.
	
	Deposit register: 10 on: anAccount.
	Withdraw register: 5 on: anAccount.
	Transfer register: 10 from: anAccount to: anotherAccount.
	
	self assert: (aPortfolio accountSummary at: 1) equals: 'Deposito por 10.'.
	self assert: (aPortfolio accountSummary at: 2) equals: 'Extraccion por 5.'.
	self assert: (aPortfolio accountSummary at: 3) equals: 'Salida por transferencia de 10.'.
	self assert: (aPortfolio accountSummary at: 3) equals: 'Entrada por transferencia de 10.'.
	self assert: (aPortfolio accountSummary at: 4) equals: 'Balance = 5.'.! !

!testRun: #PortfolioTest #test28AccountSummaryOnPortfolioReturnsListWithOneDepositOneWithdrawalAndOneOutgoingTransference stamp: 'MO 10/23/2022 23:59:01'!
FAILURE!
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/23/2022 23:59:33' prior: 50571628!
test28AccountSummaryOnPortfolioReturnsListWithOneDepositOneWithdrawalAndOneOutgoingTransference

	| aPortfolio anAccount anotherAccount |
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio with: anAccount with: anotherAccount.
	
	Deposit register: 10 on: anAccount.
	Withdraw register: 5 on: anAccount.
	Transfer register: 10 from: anAccount to: anotherAccount.
	
	self assert: (aPortfolio accountSummary at: 1) equals: 'Deposito por 10.'.
	self assert: (aPortfolio accountSummary at: 2) equals: 'Extraccion por 5.'.
	self assert: (aPortfolio accountSummary at: 3) equals: 'Salida por transferencia de 10.'.
	self assert: (aPortfolio accountSummary at: 4) equals: 'Entrada por transferencia de 10.'.
	self assert: (aPortfolio accountSummary at: 5) equals: 'Balance = 5.'.! !

!testRun: #PortfolioTest #test28AccountSummaryOnPortfolioReturnsListWithOneDepositOneWithdrawalAndOneOutgoingTransference stamp: 'MO 10/23/2022 23:59:34'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'MO 10/23/2022 23:59:35'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'MO 10/23/2022 23:59:35'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'MO 10/23/2022 23:59:35'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'MO 10/23/2022 23:59:35'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'MO 10/23/2022 23:59:35'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'MO 10/23/2022 23:59:35'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'MO 10/23/2022 23:59:35'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'MO 10/23/2022 23:59:35'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'MO 10/23/2022 23:59:35'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'MO 10/23/2022 23:59:35'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'MO 10/23/2022 23:59:35'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'MO 10/23/2022 23:59:35'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'MO 10/23/2022 23:59:35'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'MO 10/23/2022 23:59:35'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'MO 10/23/2022 23:59:35'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/23/2022 23:59:35'!
PASSED!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'MO 10/23/2022 23:59:35'!
PASSED!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'MO 10/23/2022 23:59:35'!
PASSED!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'MO 10/23/2022 23:59:35'!
PASSED!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'MO 10/23/2022 23:59:35'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'MO 10/23/2022 23:59:35'!
PASSED!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/23/2022 23:59:35'!
PASSED!

!testRun: #PortfolioTest #test23AccountSummaryReturnsListWithOneDepositOneWithdrawalAndOneOutgoingTransference stamp: 'MO 10/23/2022 23:59:35'!
PASSED!

!testRun: #PortfolioTest #test24AccountSummaryReturnsListWithOneOutgoingTransferenceAndOneIncomingTransference stamp: 'MO 10/23/2022 23:59:35'!
PASSED!

!testRun: #PortfolioTest #test25AccountSummaryOnPortfolioReturnsListWithNoBalanceWhenEmpty stamp: 'MO 10/23/2022 23:59:36'!
PASSED!

!testRun: #PortfolioTest #test26AccountSummaryOnPortfolioReturnsListWithOneDeposit stamp: 'MO 10/23/2022 23:59:36'!
PASSED!

!testRun: #PortfolioTest #test27AccountSummaryOnPortfolioReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/23/2022 23:59:36'!
PASSED!

!testRun: #PortfolioTest #test28AccountSummaryOnPortfolioReturnsListWithOneDepositOneWithdrawalAndOneOutgoingTransference stamp: 'MO 10/23/2022 23:59:36'!
PASSED!

!testRun: #PortfolioTest #test29AccountNetTrasferReportIsCorrectWithTwoTransactions stamp: 'MO 10/23/2022 23:59:36'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/24/2022 00:03:13'!
test30AccountNetTrasferReportOnPortfolioIsCorrectWithTwoTransactions

	| aPortfolio anAccount anotherAccount anExternalAccount |

	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	anExternalAccount := ReceptiveAccount new.
	aPortfolio := Portfolio with: anAccount with: anotherAccount .

	Deposit register: 10 on: anAccount.
	Withdraw register: 5 on: anAccount.
	Transfer register: 10 from: anAccount to: anotherAccount.
	Transfer register: 01 from: anotherAccount to: anAccount.
	Transfer register: 01 from: anExternalAccount to: anAccount.

	self assert: (aPortfolio netTransferReport) equals: 'De reporte de neto de transferencias de 0.'! !

!testRun: #PortfolioTest #test30AccountNetTrasferReportOnPortfolioIsCorrectWithTwoTransactions stamp: 'MO 10/24/2022 00:03:17'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MO 10/24/2022 00:03:35'!
netTransferReport
	self shouldBeImplemented.! !
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/24/2022 00:03:44' prior: 50571813!
test30AccountNetTrasferReportOnPortfolioIsCorrectWithTwoTransactions

	| aPortfolio anAccount anotherAccount anExternalAccount |

	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	anExternalAccount := ReceptiveAccount new.
	aPortfolio := Portfolio with: anAccount with: anotherAccount .

	Deposit register: 10 on: anAccount.
	Withdraw register: 5 on: anAccount.
	Transfer register: 10 from: anAccount to: anotherAccount.
	Transfer register: 01 from: anotherAccount to: anAccount.
	Transfer register: 01 from: anExternalAccount to: anAccount.

	self assert: (aPortfolio netTransferReport) equals: 'De reporte de neto de transferencias de 1.'! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'MO 10/24/2022 00:05:26' prior: 50570407!
netTransferReport
	
	^ 'De reporte de neto de transferencias de ', self collectTransfers asString, '.'! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'MO 10/24/2022 00:06:09'!
collectTransfers
	
	^ transactions
		inject: 0
		into: [ :currentNetTransfer :aTransaction | aTransaction affectNetTransfer: currentNetTransfer forAccount: self ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MO 10/24/2022 00:07:22' prior: 50571841!
netTransferReport
	
	^ 'De reporte de neto de transferencias de ', self collectTransfers asString, '.'! !
!Portfolio methodsFor: 'reports' stamp: 'MO 10/24/2022 00:08:22'!
collectTransfers
	
	^ accounts sum: [ :anAccount | anAccount collectTransfers ] ifEmpty: [ 0 ]! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'MO 10/24/2022 00:08:54'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'MO 10/24/2022 00:08:54'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'MO 10/24/2022 00:08:54'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'MO 10/24/2022 00:08:54'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'MO 10/24/2022 00:08:54'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'MO 10/24/2022 00:08:55'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'MO 10/24/2022 00:08:55'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'MO 10/24/2022 00:08:55'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'MO 10/24/2022 00:08:55'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'MO 10/24/2022 00:08:55'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'MO 10/24/2022 00:08:55'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'MO 10/24/2022 00:08:55'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'MO 10/24/2022 00:08:55'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'MO 10/24/2022 00:08:55'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'MO 10/24/2022 00:08:55'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/24/2022 00:08:55'!
PASSED!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'MO 10/24/2022 00:08:55'!
PASSED!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'MO 10/24/2022 00:08:55'!
PASSED!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'MO 10/24/2022 00:08:55'!
PASSED!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'MO 10/24/2022 00:08:55'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'MO 10/24/2022 00:08:55'!
PASSED!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/24/2022 00:08:55'!
PASSED!

!testRun: #PortfolioTest #test23AccountSummaryReturnsListWithOneDepositOneWithdrawalAndOneOutgoingTransference stamp: 'MO 10/24/2022 00:08:55'!
PASSED!

!testRun: #PortfolioTest #test24AccountSummaryReturnsListWithOneOutgoingTransferenceAndOneIncomingTransference stamp: 'MO 10/24/2022 00:08:55'!
PASSED!

!testRun: #PortfolioTest #test25AccountSummaryOnPortfolioReturnsListWithNoBalanceWhenEmpty stamp: 'MO 10/24/2022 00:08:55'!
PASSED!

!testRun: #PortfolioTest #test26AccountSummaryOnPortfolioReturnsListWithOneDeposit stamp: 'MO 10/24/2022 00:08:55'!
PASSED!

!testRun: #PortfolioTest #test27AccountSummaryOnPortfolioReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/24/2022 00:08:55'!
PASSED!

!testRun: #PortfolioTest #test28AccountSummaryOnPortfolioReturnsListWithOneDepositOneWithdrawalAndOneOutgoingTransference stamp: 'MO 10/24/2022 00:08:55'!
PASSED!

!testRun: #PortfolioTest #test29AccountNetTrasferReportIsCorrectWithTwoTransactions stamp: 'MO 10/24/2022 00:08:55'!
PASSED!

!testRun: #PortfolioTest #test30AccountNetTrasferReportOnPortfolioIsCorrectWithTwoTransactions stamp: 'MO 10/24/2022 00:08:55'!
PASSED!

----SNAPSHOT----(24 October 2022 00:12:16) CuisUniversity-5481.image priorSource: 7383742!

----STARTUP---- (24 October 2022 14:43:22) as C:\Users\maria\Desktop\Facultad\Taller\Inge1\CuisUniversity-windows64\CuisUniversity-5481.image!

!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/24/2022 14:56:56'!
test31NamedAccountHasCorrectName

	| account |
	
	account := ReceptiveAccount named: 'Cuenta de Juan'.
	
	self assert: account accountName equals: 'Cuenta de Juan'.! !
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/24/2022 14:57:09'!
test32NamedPortfolioHasCorrectName

	| portfolio |
	
	portfolio := Portfolio named: 'Portfolio familiar'.
	
	self assert: portfolio accountName equals: 'Portfolio familiar'.! !

Object subclass: #Account
	instanceVariableNames: 'accountName'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Account category: 'Portfolio-Solucion' stamp: 'MO 10/24/2022 14:57:55'!
Object subclass: #Account
	instanceVariableNames: 'accountName'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Account methodsFor: 'name' stamp: 'MO 10/24/2022 14:58:48'!
accountName

	^accountName! !
!Account methodsFor: 'name' stamp: 'MO 10/24/2022 14:58:52' prior: 50572053!
accountName

	^ accountName! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'MO 10/24/2022 14:59:00'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'MO 10/24/2022 14:59:00'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'MO 10/24/2022 14:59:00'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'MO 10/24/2022 14:59:00'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'MO 10/24/2022 14:59:00'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'MO 10/24/2022 14:59:00'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'MO 10/24/2022 14:59:00'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'MO 10/24/2022 14:59:00'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'MO 10/24/2022 14:59:00'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'MO 10/24/2022 14:59:00'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'MO 10/24/2022 14:59:00'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'MO 10/24/2022 14:59:00'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'MO 10/24/2022 14:59:00'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'MO 10/24/2022 14:59:00'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'MO 10/24/2022 14:59:00'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/24/2022 14:59:00'!
PASSED!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'MO 10/24/2022 14:59:00'!
PASSED!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'MO 10/24/2022 14:59:01'!
PASSED!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'MO 10/24/2022 14:59:01'!
PASSED!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'MO 10/24/2022 14:59:01'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'MO 10/24/2022 14:59:01'!
PASSED!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/24/2022 14:59:01'!
PASSED!

!testRun: #PortfolioTest #test23AccountSummaryReturnsListWithOneDepositOneWithdrawalAndOneOutgoingTransference stamp: 'MO 10/24/2022 14:59:01'!
PASSED!

!testRun: #PortfolioTest #test24AccountSummaryReturnsListWithOneOutgoingTransferenceAndOneIncomingTransference stamp: 'MO 10/24/2022 14:59:01'!
PASSED!

!testRun: #PortfolioTest #test25AccountSummaryOnPortfolioReturnsListWithNoBalanceWhenEmpty stamp: 'MO 10/24/2022 14:59:01'!
PASSED!

!testRun: #PortfolioTest #test26AccountSummaryOnPortfolioReturnsListWithOneDeposit stamp: 'MO 10/24/2022 14:59:01'!
PASSED!

!testRun: #PortfolioTest #test27AccountSummaryOnPortfolioReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/24/2022 14:59:01'!
PASSED!

!testRun: #PortfolioTest #test28AccountSummaryOnPortfolioReturnsListWithOneDepositOneWithdrawalAndOneOutgoingTransference stamp: 'MO 10/24/2022 14:59:01'!
PASSED!

!testRun: #PortfolioTest #test29AccountNetTrasferReportIsCorrectWithTwoTransactions stamp: 'MO 10/24/2022 14:59:01'!
PASSED!

!testRun: #PortfolioTest #test30AccountNetTrasferReportOnPortfolioIsCorrectWithTwoTransactions stamp: 'MO 10/24/2022 14:59:01'!
PASSED!

!testRun: #PortfolioTest #test31NamedAccountHasCorrectName stamp: 'MO 10/24/2022 14:59:01'!
ERROR!

!testRun: #PortfolioTest #test32NamedPortfolioHasCorrectName stamp: 'MO 10/24/2022 14:59:01'!
ERROR!
!Account methodsFor: 'initialization' stamp: 'MO 10/24/2022 14:59:57'!
initializeNamed: aName 

	accountName := aName! !
!Account class methodsFor: 'no messages' stamp: 'MO 10/24/2022 15:01:16'!
named: aName 

	^self new initializeNamed: aName! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'MO 10/24/2022 15:01:32'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'MO 10/24/2022 15:01:32'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'MO 10/24/2022 15:01:32'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'MO 10/24/2022 15:01:32'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'MO 10/24/2022 15:01:32'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'MO 10/24/2022 15:01:32'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'MO 10/24/2022 15:01:32'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'MO 10/24/2022 15:01:32'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'MO 10/24/2022 15:01:32'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'MO 10/24/2022 15:01:32'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'MO 10/24/2022 15:01:32'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'MO 10/24/2022 15:01:32'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'MO 10/24/2022 15:01:32'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'MO 10/24/2022 15:01:32'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'MO 10/24/2022 15:01:32'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/24/2022 15:01:32'!
PASSED!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'MO 10/24/2022 15:01:32'!
PASSED!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'MO 10/24/2022 15:01:32'!
PASSED!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'MO 10/24/2022 15:01:32'!
PASSED!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'MO 10/24/2022 15:01:32'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'MO 10/24/2022 15:01:32'!
PASSED!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/24/2022 15:01:32'!
PASSED!

!testRun: #PortfolioTest #test23AccountSummaryReturnsListWithOneDepositOneWithdrawalAndOneOutgoingTransference stamp: 'MO 10/24/2022 15:01:33'!
PASSED!

!testRun: #PortfolioTest #test24AccountSummaryReturnsListWithOneOutgoingTransferenceAndOneIncomingTransference stamp: 'MO 10/24/2022 15:01:33'!
PASSED!

!testRun: #PortfolioTest #test25AccountSummaryOnPortfolioReturnsListWithNoBalanceWhenEmpty stamp: 'MO 10/24/2022 15:01:33'!
PASSED!

!testRun: #PortfolioTest #test26AccountSummaryOnPortfolioReturnsListWithOneDeposit stamp: 'MO 10/24/2022 15:01:33'!
PASSED!

!testRun: #PortfolioTest #test27AccountSummaryOnPortfolioReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/24/2022 15:01:33'!
PASSED!

!testRun: #PortfolioTest #test28AccountSummaryOnPortfolioReturnsListWithOneDepositOneWithdrawalAndOneOutgoingTransference stamp: 'MO 10/24/2022 15:01:33'!
PASSED!

!testRun: #PortfolioTest #test29AccountNetTrasferReportIsCorrectWithTwoTransactions stamp: 'MO 10/24/2022 15:01:33'!
PASSED!

!testRun: #PortfolioTest #test30AccountNetTrasferReportOnPortfolioIsCorrectWithTwoTransactions stamp: 'MO 10/24/2022 15:01:33'!
PASSED!

!testRun: #PortfolioTest #test31NamedAccountHasCorrectName stamp: 'MO 10/24/2022 15:01:33'!
PASSED!

!testRun: #PortfolioTest #test32NamedPortfolioHasCorrectName stamp: 'MO 10/24/2022 15:01:33'!
PASSED!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'MO 10/24/2022 15:03:18'!
named: aName with: anAccount

	^ self new initializeNamed: aName;
		add: anAccount;
		yourself! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'MO 10/24/2022 15:03:52'!
named: aName with: anAccount with: anotherAccount

	^self new initializeNamed: aName;
		add: anAccount;
		add: anotherAccount;
		yourself! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'MO 10/24/2022 15:04:02' prior: 50572330!
named: aName with: anAccount with: anotherAccount

	^ self new initializeNamed: aName;
		add: anAccount;
		add: anotherAccount;
		yourself! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'MO 10/24/2022 15:04:58'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'MO 10/24/2022 15:04:58'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'MO 10/24/2022 15:04:58'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'MO 10/24/2022 15:04:58'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'MO 10/24/2022 15:04:58'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'MO 10/24/2022 15:04:58'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'MO 10/24/2022 15:04:58'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'MO 10/24/2022 15:04:58'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'MO 10/24/2022 15:04:58'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'MO 10/24/2022 15:04:58'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'MO 10/24/2022 15:04:58'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'MO 10/24/2022 15:04:58'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'MO 10/24/2022 15:04:58'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'MO 10/24/2022 15:04:58'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'MO 10/24/2022 15:04:58'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/24/2022 15:04:58'!
PASSED!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'MO 10/24/2022 15:04:58'!
PASSED!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'MO 10/24/2022 15:04:58'!
PASSED!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'MO 10/24/2022 15:04:58'!
PASSED!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'MO 10/24/2022 15:04:59'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'MO 10/24/2022 15:04:59'!
PASSED!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/24/2022 15:04:59'!
PASSED!

!testRun: #PortfolioTest #test23AccountSummaryReturnsListWithOneDepositOneWithdrawalAndOneOutgoingTransference stamp: 'MO 10/24/2022 15:04:59'!
PASSED!

!testRun: #PortfolioTest #test24AccountSummaryReturnsListWithOneOutgoingTransferenceAndOneIncomingTransference stamp: 'MO 10/24/2022 15:04:59'!
PASSED!

!testRun: #PortfolioTest #test25AccountSummaryOnPortfolioReturnsListWithNoBalanceWhenEmpty stamp: 'MO 10/24/2022 15:04:59'!
PASSED!

!testRun: #PortfolioTest #test26AccountSummaryOnPortfolioReturnsListWithOneDeposit stamp: 'MO 10/24/2022 15:04:59'!
PASSED!

!testRun: #PortfolioTest #test27AccountSummaryOnPortfolioReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/24/2022 15:04:59'!
PASSED!

!testRun: #PortfolioTest #test28AccountSummaryOnPortfolioReturnsListWithOneDepositOneWithdrawalAndOneOutgoingTransference stamp: 'MO 10/24/2022 15:04:59'!
PASSED!

!testRun: #PortfolioTest #test29AccountNetTrasferReportIsCorrectWithTwoTransactions stamp: 'MO 10/24/2022 15:04:59'!
PASSED!

!testRun: #PortfolioTest #test30AccountNetTrasferReportOnPortfolioIsCorrectWithTwoTransactions stamp: 'MO 10/24/2022 15:04:59'!
PASSED!

!testRun: #PortfolioTest #test31NamedAccountHasCorrectName stamp: 'MO 10/24/2022 15:04:59'!
PASSED!

!testRun: #PortfolioTest #test32NamedPortfolioHasCorrectName stamp: 'MO 10/24/2022 15:04:59'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/24/2022 15:11:30'!
test32UnnamedAccountHasNoName

	| account |
	
	account := ReceptiveAccount new.
	
	self assert: account accountName equals: 'Cuenta de Juan'.
	
	self 
		should: [ account accountName ]
		raise: Error
		withExceptionDo: [ :anError | self assert: Account accountHasNoName equals: anError messageText ]! !
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/24/2022 15:12:08'!
test32UnnamedPortfolioHasNoName

	| portfolio |
	
	portfolio := Portfolio new.
	
	self assert: portfolio accountName equals: 'Cuenta de Juan'.
	
	self 
		should: [ portfolio accountName ]
		raise: Error
		withExceptionDo: [ :anError | self assert: Account accountHasNoName equals: anError messageText ]! !
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/24/2022 15:12:19'!
test33UnnamedAccountHasNoName

	| account |
	
	account := ReceptiveAccount new.
	
	self assert: account accountName equals: 'Cuenta de Juan'.
	
	self 
		should: [ account accountName ]
		raise: Error
		withExceptionDo: [ :anError | self assert: Account accountHasNoName equals: anError messageText ]! !

!methodRemoval: PortfolioTest #test32UnnamedAccountHasNoName stamp: 'MO 10/24/2022 15:12:19'!
test32UnnamedAccountHasNoName

	| account |
	
	account := ReceptiveAccount new.
	
	self assert: account accountName equals: 'Cuenta de Juan'.
	
	self 
		should: [ account accountName ]
		raise: Error
		withExceptionDo: [ :anError | self assert: Account accountHasNoName equals: anError messageText ]!
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/24/2022 15:12:27'!
test34UnnamedPortfolioHasNoName

	| portfolio |
	
	portfolio := Portfolio new.
	
	self assert: portfolio accountName equals: 'Cuenta de Juan'.
	
	self 
		should: [ portfolio accountName ]
		raise: Error
		withExceptionDo: [ :anError | self assert: Account accountHasNoName equals: anError messageText ]! !

!methodRemoval: PortfolioTest #test32UnnamedPortfolioHasNoName stamp: 'MO 10/24/2022 15:12:27'!
test32UnnamedPortfolioHasNoName

	| portfolio |
	
	portfolio := Portfolio new.
	
	self assert: portfolio accountName equals: 'Cuenta de Juan'.
	
	self 
		should: [ portfolio accountName ]
		raise: Error
		withExceptionDo: [ :anError | self assert: Account accountHasNoName equals: anError messageText ]!

!testRun: #PortfolioTest #test34UnnamedPortfolioHasNoName stamp: 'MO 10/24/2022 15:12:37'!
FAILURE!
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/24/2022 15:13:20' prior: 50572521!
test34UnnamedPortfolioHasNoName

	| portfolio |
	
	portfolio := Portfolio new.
	
	self 
		should: [ portfolio accountName ]
		raise: Error
		withExceptionDo: [ :anError | self assert: Account accountHasNoName equals: anError messageText ]! !
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/24/2022 15:13:28' prior: 50572497!
test33UnnamedAccountHasNoName

	| account |
	
	account := ReceptiveAccount new.
	
	self 
		should: [ account accountName ]
		raise: Error
		withExceptionDo: [ :anError | self assert: Account accountHasNoName equals: anError messageText ]! !

!testRun: #PortfolioTest #test33UnnamedAccountHasNoName stamp: 'MO 10/24/2022 15:13:31'!
FAILURE!
!Account class methodsFor: 'error messages' stamp: 'MO 10/24/2022 15:14:31'!
accountHasNoName
	
	^ 'No se puede obtener el nombre de la cuenta porque no tiene'! !
!Account methodsFor: 'name' stamp: 'MO 10/24/2022 15:17:20' prior: 50572057!
accountName
	
	accountName ifNil: [ self error: self class accountHasNoName ].
	
	^ accountName! !

!testRun: #PortfolioTest #test34UnnamedPortfolioHasNoName stamp: 'MO 10/24/2022 15:17:23'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'MO 10/24/2022 15:17:23'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'MO 10/24/2022 15:17:23'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'MO 10/24/2022 15:17:23'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'MO 10/24/2022 15:17:23'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'MO 10/24/2022 15:17:23'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'MO 10/24/2022 15:17:23'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'MO 10/24/2022 15:17:23'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'MO 10/24/2022 15:17:23'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'MO 10/24/2022 15:17:23'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'MO 10/24/2022 15:17:23'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'MO 10/24/2022 15:17:23'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'MO 10/24/2022 15:17:23'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'MO 10/24/2022 15:17:23'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'MO 10/24/2022 15:17:23'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'MO 10/24/2022 15:17:24'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/24/2022 15:17:24'!
PASSED!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'MO 10/24/2022 15:17:24'!
PASSED!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'MO 10/24/2022 15:17:24'!
PASSED!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'MO 10/24/2022 15:17:24'!
PASSED!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'MO 10/24/2022 15:17:24'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'MO 10/24/2022 15:17:24'!
PASSED!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/24/2022 15:17:24'!
PASSED!

!testRun: #PortfolioTest #test23AccountSummaryReturnsListWithOneDepositOneWithdrawalAndOneOutgoingTransference stamp: 'MO 10/24/2022 15:17:24'!
PASSED!

!testRun: #PortfolioTest #test24AccountSummaryReturnsListWithOneOutgoingTransferenceAndOneIncomingTransference stamp: 'MO 10/24/2022 15:17:24'!
PASSED!

!testRun: #PortfolioTest #test25AccountSummaryOnPortfolioReturnsListWithNoBalanceWhenEmpty stamp: 'MO 10/24/2022 15:17:24'!
PASSED!

!testRun: #PortfolioTest #test26AccountSummaryOnPortfolioReturnsListWithOneDeposit stamp: 'MO 10/24/2022 15:17:24'!
PASSED!

!testRun: #PortfolioTest #test27AccountSummaryOnPortfolioReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/24/2022 15:17:24'!
PASSED!

!testRun: #PortfolioTest #test28AccountSummaryOnPortfolioReturnsListWithOneDepositOneWithdrawalAndOneOutgoingTransference stamp: 'MO 10/24/2022 15:17:24'!
PASSED!

!testRun: #PortfolioTest #test29AccountNetTrasferReportIsCorrectWithTwoTransactions stamp: 'MO 10/24/2022 15:17:24'!
PASSED!

!testRun: #PortfolioTest #test30AccountNetTrasferReportOnPortfolioIsCorrectWithTwoTransactions stamp: 'MO 10/24/2022 15:17:24'!
PASSED!

!testRun: #PortfolioTest #test31NamedAccountHasCorrectName stamp: 'MO 10/24/2022 15:17:24'!
PASSED!

!testRun: #PortfolioTest #test32NamedPortfolioHasCorrectName stamp: 'MO 10/24/2022 15:17:24'!
PASSED!

!testRun: #PortfolioTest #test33UnnamedAccountHasNoName stamp: 'MO 10/24/2022 15:17:24'!
PASSED!

!testRun: #PortfolioTest #test34UnnamedPortfolioHasNoName stamp: 'MO 10/24/2022 15:17:24'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/24/2022 15:23:09'!
test35NamedPortfolioReportsItself

	| portfolio |
	
	portfolio := Portfolio named: 'Portfolio familiar'.
	
	self assert: (portfolio structureReport at: 1) equals: 'Portfolio familiar'! !
!Portfolio methodsFor: 'reports' stamp: 'MO 10/24/2022 15:27:18'!
structureReport

	| portfolioTree |

	portfolioTree := OrderedCollection new.
	
	^ portfolioTree add: accountName! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'MO 10/24/2022 15:27:35'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'MO 10/24/2022 15:27:35'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'MO 10/24/2022 15:27:35'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'MO 10/24/2022 15:27:35'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'MO 10/24/2022 15:27:35'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'MO 10/24/2022 15:27:35'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'MO 10/24/2022 15:27:35'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'MO 10/24/2022 15:27:35'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'MO 10/24/2022 15:27:35'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'MO 10/24/2022 15:27:35'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'MO 10/24/2022 15:27:35'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'MO 10/24/2022 15:27:35'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'MO 10/24/2022 15:27:35'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'MO 10/24/2022 15:27:35'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'MO 10/24/2022 15:27:35'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/24/2022 15:27:35'!
PASSED!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'MO 10/24/2022 15:27:35'!
PASSED!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'MO 10/24/2022 15:27:35'!
PASSED!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'MO 10/24/2022 15:27:35'!
PASSED!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'MO 10/24/2022 15:27:35'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'MO 10/24/2022 15:27:35'!
PASSED!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/24/2022 15:27:35'!
PASSED!

!testRun: #PortfolioTest #test23AccountSummaryReturnsListWithOneDepositOneWithdrawalAndOneOutgoingTransference stamp: 'MO 10/24/2022 15:27:35'!
PASSED!

!testRun: #PortfolioTest #test24AccountSummaryReturnsListWithOneOutgoingTransferenceAndOneIncomingTransference stamp: 'MO 10/24/2022 15:27:36'!
PASSED!

!testRun: #PortfolioTest #test25AccountSummaryOnPortfolioReturnsListWithNoBalanceWhenEmpty stamp: 'MO 10/24/2022 15:27:36'!
PASSED!

!testRun: #PortfolioTest #test26AccountSummaryOnPortfolioReturnsListWithOneDeposit stamp: 'MO 10/24/2022 15:27:36'!
PASSED!

!testRun: #PortfolioTest #test27AccountSummaryOnPortfolioReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/24/2022 15:27:36'!
PASSED!

!testRun: #PortfolioTest #test28AccountSummaryOnPortfolioReturnsListWithOneDepositOneWithdrawalAndOneOutgoingTransference stamp: 'MO 10/24/2022 15:27:36'!
PASSED!

!testRun: #PortfolioTest #test29AccountNetTrasferReportIsCorrectWithTwoTransactions stamp: 'MO 10/24/2022 15:27:36'!
PASSED!

!testRun: #PortfolioTest #test30AccountNetTrasferReportOnPortfolioIsCorrectWithTwoTransactions stamp: 'MO 10/24/2022 15:27:36'!
PASSED!

!testRun: #PortfolioTest #test31NamedAccountHasCorrectName stamp: 'MO 10/24/2022 15:27:36'!
PASSED!

!testRun: #PortfolioTest #test32NamedPortfolioHasCorrectName stamp: 'MO 10/24/2022 15:27:36'!
PASSED!

!testRun: #PortfolioTest #test33UnnamedAccountHasNoName stamp: 'MO 10/24/2022 15:27:36'!
PASSED!

!testRun: #PortfolioTest #test34UnnamedPortfolioHasNoName stamp: 'MO 10/24/2022 15:27:36'!
PASSED!

!testRun: #PortfolioTest #test35NamedPortfolioReportsItself stamp: 'MO 10/24/2022 15:27:36'!
FAILURE!

!testRun: #PortfolioTest #test35NamedPortfolioReportsItself stamp: 'MO 10/24/2022 15:27:36'!
FAILURE!
!Portfolio methodsFor: 'reports' stamp: 'MO 10/24/2022 15:29:22' prior: 50572731!
structureReport

	| portfolioTree |

	portfolioTree := OrderedCollection new.
	
	portfolioTree add: accountName.
	
	^ portfolioTree! !

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'MO 10/24/2022 15:29:25'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'MO 10/24/2022 15:29:25'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'MO 10/24/2022 15:29:25'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'MO 10/24/2022 15:29:25'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'MO 10/24/2022 15:29:25'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'MO 10/24/2022 15:29:25'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'MO 10/24/2022 15:29:25'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'MO 10/24/2022 15:29:25'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'MO 10/24/2022 15:29:25'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'MO 10/24/2022 15:29:25'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'MO 10/24/2022 15:29:25'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'MO 10/24/2022 15:29:26'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'MO 10/24/2022 15:29:26'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'MO 10/24/2022 15:29:26'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'MO 10/24/2022 15:29:26'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'MO 10/24/2022 15:29:26'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/24/2022 15:29:26'!
PASSED!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'MO 10/24/2022 15:29:26'!
PASSED!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'MO 10/24/2022 15:29:26'!
PASSED!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'MO 10/24/2022 15:29:26'!
PASSED!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'MO 10/24/2022 15:29:26'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'MO 10/24/2022 15:29:26'!
PASSED!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/24/2022 15:29:26'!
PASSED!

!testRun: #PortfolioTest #test23AccountSummaryReturnsListWithOneDepositOneWithdrawalAndOneOutgoingTransference stamp: 'MO 10/24/2022 15:29:26'!
PASSED!

!testRun: #PortfolioTest #test24AccountSummaryReturnsListWithOneOutgoingTransferenceAndOneIncomingTransference stamp: 'MO 10/24/2022 15:29:26'!
PASSED!

!testRun: #PortfolioTest #test25AccountSummaryOnPortfolioReturnsListWithNoBalanceWhenEmpty stamp: 'MO 10/24/2022 15:29:26'!
PASSED!

!testRun: #PortfolioTest #test26AccountSummaryOnPortfolioReturnsListWithOneDeposit stamp: 'MO 10/24/2022 15:29:26'!
PASSED!

!testRun: #PortfolioTest #test27AccountSummaryOnPortfolioReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/24/2022 15:29:26'!
PASSED!

!testRun: #PortfolioTest #test28AccountSummaryOnPortfolioReturnsListWithOneDepositOneWithdrawalAndOneOutgoingTransference stamp: 'MO 10/24/2022 15:29:26'!
PASSED!

!testRun: #PortfolioTest #test29AccountNetTrasferReportIsCorrectWithTwoTransactions stamp: 'MO 10/24/2022 15:29:26'!
PASSED!

!testRun: #PortfolioTest #test30AccountNetTrasferReportOnPortfolioIsCorrectWithTwoTransactions stamp: 'MO 10/24/2022 15:29:26'!
PASSED!

!testRun: #PortfolioTest #test31NamedAccountHasCorrectName stamp: 'MO 10/24/2022 15:29:26'!
PASSED!

!testRun: #PortfolioTest #test32NamedPortfolioHasCorrectName stamp: 'MO 10/24/2022 15:29:26'!
PASSED!

!testRun: #PortfolioTest #test33UnnamedAccountHasNoName stamp: 'MO 10/24/2022 15:29:27'!
PASSED!

!testRun: #PortfolioTest #test34UnnamedPortfolioHasNoName stamp: 'MO 10/24/2022 15:29:27'!
PASSED!

!testRun: #PortfolioTest #test35NamedPortfolioReportsItself stamp: 'MO 10/24/2022 15:29:27'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/24/2022 15:30:58' prior: 50572723!
test35NamedPortfolioReportsItself

	| portfolio account |
	
	portfolio := Portfolio named: 'Portfolio familiar'.
	account := ReceptiveAccount named: 'vacio'.
	
	self assert: (portfolio structureReport at: 1) equals: 'Portfolio familiar'.
	self assert: (portfolio structureReport at: 2) equals: '   vacio'! !
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/24/2022 15:31:33' prior: 50573027!
test35NamedPortfolioReportsItself

	| account portfolio  |
	
	account := ReceptiveAccount named: 'vacio'.
	portfolio := Portfolio named: 'Portfolio familiar' with: account.
	
	
	self assert: (portfolio structureReport at: 1) equals: 'Portfolio familiar'.
	self assert: (portfolio structureReport at: 2) equals: '   vacio'! !
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/24/2022 15:31:39' prior: 50573040!
test35NamedPortfolioReportsItself

	| account portfolio  |

	account := ReceptiveAccount named: 'vacio'.
	portfolio := Portfolio named: 'Portfolio familiar' with: account.

	self assert: (portfolio structureReport at: 1) equals: 'Portfolio familiar'.
	self assert: (portfolio structureReport at: 2) equals: '   vacio'! !
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/24/2022 15:32:55'!
test36NamedPortfolioReportsWithOneAccountReportCorrectly

	| account portfolio  |

	account := ReceptiveAccount named: 'vacio'.
	portfolio := Portfolio named: 'Portfolio familiar' with: account.

	self assert: (portfolio structureReport at: 1) equals: 'Portfolio familiar'.
	self assert: (portfolio structureReport at: 2) equals: '   vacio'! !
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/24/2022 15:23:09' prior: 50573053!
test35NamedPortfolioReportsItself

	| portfolio |
	
	portfolio := Portfolio named: 'Portfolio familiar'.
	
	self assert: (portfolio structureReport at: 1) equals: 'Portfolio familiar'! !
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/24/2022 15:33:25' prior: 50573066!
test36NamedPortfolioReportsWithOneAccountReportCorrectly

	| account portfolio |

	account := ReceptiveAccount named: 'vacio'.
	portfolio := Portfolio named: 'Portfolio familiar' with: account.

	self assert: (portfolio structureReport at: 1) equals: 'Portfolio familiar'.
	self assert: (portfolio structureReport at: 2) equals: '   vacio'! !
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/24/2022 15:34:05' prior: 50573089!
test36NamedPortfolioReportsWithOneAccountReportCorrectly

	| account portfolio |

	account := ReceptiveAccount named: 'Hijo Prodigio'.
	portfolio := Portfolio named: 'Portfolio familiar' with: account.

	self assert: (portfolio structureReport at: 1) equals: 'Portfolio familiar'.
	self assert: (portfolio structureReport at: 2) equals: '   Hijo Prodigio'! !
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/24/2022 15:35:23'!
test37NamedPortfolioReportsWithTwoAccountsReportCorrectly

	| anAccount anotherAccount portfolio |

	anAccount := ReceptiveAccount named: 'Hijo Prodigio'.
	anotherAccount := ReceptiveAccount named: 'El Otro'.
	portfolio := Portfolio named: 'Portfolio familiar' with: anAccount with: anotherAccount.

	self assert: (portfolio structureReport at: 1) equals: 'Portfolio familiar'.
	self assert: (portfolio structureReport at: 2) equals: '   Hijo Prodigio'.
	self assert: (portfolio structureReport at: 3) equals: '   El Otro'! !
!PortfolioTest methodsFor: 'tests' stamp: 'MO 10/24/2022 15:35:34' prior: 50573103!
test36NamedPortfolioReportsWithOneAccountReportCorrectly

	| account portfolio |

	account := ReceptiveAccount named: 'vacio'.
	portfolio := Portfolio named: 'Portfolio familiar' with: account.

	self assert: (portfolio structureReport at: 1) equals: 'Portfolio familiar'.
	self assert: (portfolio structureReport at: 2) equals: '   vacio'! !
!Portfolio methodsFor: 'reports' stamp: 'MO 10/24/2022 15:42:34' prior: 50572878!
structureReport

	| portfolioTree subTree |

	portfolioTree := OrderedCollection new.
	subTree := OrderedCollection new.
	
	portfolioTree add: accountName.
	
	accounts do: [ :account | subTree addAll: (account structureReport) ].
	
	subTree indentar.
	
	portfolioTree addAll: subTree.
	
	^ portfolioTree! !
!Portfolio methodsFor: 'reports' stamp: 'MO 10/24/2022 15:43:04' prior: 50573151!
structureReport

	| portfolioTree subTree |

	portfolioTree := OrderedCollection new.
	subTree := OrderedCollection new.
	
	portfolioTree add: accountName.
	
	accounts do: [ :account | subTree addAll: (account structureReport) ].
	
	self indentar: subTree.
	
	portfolioTree addAll: subTree.
	
	^ portfolioTree! !
!Portfolio methodsFor: 'reports' stamp: 'MO 10/24/2022 15:47:29'!
indentar: anAccountNamesCollection

	anAccountNamesCollection collect: [ :aName | '   ' , aName]! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'MO 10/24/2022 15:47:36'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'MO 10/24/2022 15:47:36'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'MO 10/24/2022 15:47:37'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'MO 10/24/2022 15:47:37'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'MO 10/24/2022 15:47:37'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'MO 10/24/2022 15:47:37'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'MO 10/24/2022 15:47:37'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'MO 10/24/2022 15:47:37'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'MO 10/24/2022 15:47:37'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'MO 10/24/2022 15:47:37'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'MO 10/24/2022 15:47:37'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'MO 10/24/2022 15:47:37'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'MO 10/24/2022 15:47:37'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'MO 10/24/2022 15:47:37'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'MO 10/24/2022 15:47:37'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/24/2022 15:47:37'!
PASSED!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'MO 10/24/2022 15:47:37'!
PASSED!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'MO 10/24/2022 15:47:37'!
PASSED!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'MO 10/24/2022 15:47:37'!
PASSED!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'MO 10/24/2022 15:47:37'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'MO 10/24/2022 15:47:37'!
PASSED!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/24/2022 15:47:37'!
PASSED!

!testRun: #PortfolioTest #test23AccountSummaryReturnsListWithOneDepositOneWithdrawalAndOneOutgoingTransference stamp: 'MO 10/24/2022 15:47:37'!
PASSED!

!testRun: #PortfolioTest #test24AccountSummaryReturnsListWithOneOutgoingTransferenceAndOneIncomingTransference stamp: 'MO 10/24/2022 15:47:38'!
PASSED!

!testRun: #PortfolioTest #test25AccountSummaryOnPortfolioReturnsListWithNoBalanceWhenEmpty stamp: 'MO 10/24/2022 15:47:38'!
PASSED!

!testRun: #PortfolioTest #test26AccountSummaryOnPortfolioReturnsListWithOneDeposit stamp: 'MO 10/24/2022 15:47:38'!
PASSED!

!testRun: #PortfolioTest #test27AccountSummaryOnPortfolioReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/24/2022 15:47:38'!
PASSED!

!testRun: #PortfolioTest #test28AccountSummaryOnPortfolioReturnsListWithOneDepositOneWithdrawalAndOneOutgoingTransference stamp: 'MO 10/24/2022 15:47:38'!
PASSED!

!testRun: #PortfolioTest #test29AccountNetTrasferReportIsCorrectWithTwoTransactions stamp: 'MO 10/24/2022 15:47:38'!
PASSED!

!testRun: #PortfolioTest #test30AccountNetTrasferReportOnPortfolioIsCorrectWithTwoTransactions stamp: 'MO 10/24/2022 15:47:38'!
PASSED!

!testRun: #PortfolioTest #test31NamedAccountHasCorrectName stamp: 'MO 10/24/2022 15:47:38'!
PASSED!

!testRun: #PortfolioTest #test32NamedPortfolioHasCorrectName stamp: 'MO 10/24/2022 15:47:38'!
PASSED!

!testRun: #PortfolioTest #test33UnnamedAccountHasNoName stamp: 'MO 10/24/2022 15:47:38'!
PASSED!

!testRun: #PortfolioTest #test34UnnamedPortfolioHasNoName stamp: 'MO 10/24/2022 15:47:38'!
PASSED!

!testRun: #PortfolioTest #test35NamedPortfolioReportsItself stamp: 'MO 10/24/2022 15:47:38'!
PASSED!

!testRun: #PortfolioTest #test36NamedPortfolioReportsWithOneAccountReportCorrectly stamp: 'MO 10/24/2022 15:47:38'!
ERROR!

!testRun: #PortfolioTest #test37NamedPortfolioReportsWithTwoAccountsReportCorrectly stamp: 'MO 10/24/2022 15:47:38'!
ERROR!

!testRun: #PortfolioTest #test36NamedPortfolioReportsWithOneAccountReportCorrectly stamp: 'MO 10/24/2022 15:48:31'!
ERROR!

!testRun: #PortfolioTest #test36NamedPortfolioReportsWithOneAccountReportCorrectly stamp: 'MO 10/24/2022 15:48:31'!
ERROR!
!ReceptiveAccount methodsFor: 'reports' stamp: 'MO 10/24/2022 15:49:21'!
structureReport
	
	^ self accountName! !

!testRun: #PortfolioTest #test36NamedPortfolioReportsWithOneAccountReportCorrectly stamp: 'MO 10/24/2022 15:49:27'!
ERROR!
!Account methodsFor: 'initialization' stamp: 'MO 10/24/2022 15:50:46' prior: 50572188!
initializeNamed: aName 

	accountName := aName asString! !

!testRun: #PortfolioTest #test36NamedPortfolioReportsWithOneAccountReportCorrectly stamp: 'MO 10/24/2022 15:50:59'!
ERROR!
!Portfolio methodsFor: 'reports' stamp: 'MO 10/24/2022 15:51:24' prior: 50573176!
indentar: anAccountNamesCollection

	anAccountNamesCollection collect: [ :aName | '   ' asString , aName]! !

!testRun: #PortfolioTest #test36NamedPortfolioReportsWithOneAccountReportCorrectly stamp: 'MO 10/24/2022 15:51:32'!
ERROR!
!Portfolio methodsFor: 'reports' stamp: 'MO 10/24/2022 15:54:22'!
treeStructureWithIndent: indentCount

	| result accName |

	result := OrderedCollection new.
	
	accName := ''.
	
	indentCount timesRepeat: [ accName := accName , '   ' ].
	
	accName := accName , accountName.
	
	result add: accName.
	
	accounts do: [ :account | result addAll: (account treeStructureWithIndent: (indentCount + 1)) ].
	
	^result! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'MO 10/24/2022 15:54:40'!
treeStructureWithIndent: indentCount

	| result |
	
	result := ''.
	
	indentCount timesRepeat: [ result := result , '   ' ].
	
	result := result , accountName.
	
	^(OrderedCollection with: result)! !

!methodRemoval: ReceptiveAccount #structureReport stamp: 'MO 10/24/2022 15:54:45'!
structureReport
	
	^ self accountName!
!Portfolio methodsFor: 'reports' stamp: 'MO 10/24/2022 15:55:13' prior: 50573164!
structureReport
	
	^ self treeStructureWithIndent: 0! !

!testRun: #PortfolioTest #test36NamedPortfolioReportsWithOneAccountReportCorrectly stamp: 'MO 10/24/2022 15:55:16'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'MO 10/24/2022 15:55:16'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'MO 10/24/2022 15:55:16'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'MO 10/24/2022 15:55:16'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'MO 10/24/2022 15:55:16'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'MO 10/24/2022 15:55:16'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'MO 10/24/2022 15:55:16'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'MO 10/24/2022 15:55:16'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'MO 10/24/2022 15:55:16'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'MO 10/24/2022 15:55:16'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'MO 10/24/2022 15:55:16'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'MO 10/24/2022 15:55:16'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'MO 10/24/2022 15:55:16'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'MO 10/24/2022 15:55:16'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'MO 10/24/2022 15:55:16'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'MO 10/24/2022 15:55:16'!
PASSED!

!testRun: #PortfolioTest #test16AccountCanTransferToAnotherAccountCorrectly stamp: 'MO 10/24/2022 15:55:17'!
PASSED!

!testRun: #PortfolioTest #test17AccountCanTransferToAnotherAccountThatIsWIthinAPortfolioCorrectly stamp: 'MO 10/24/2022 15:55:17'!
PASSED!

!testRun: #PortfolioTest #test18AccountTransferenceIsRegisteredCorrectlyInSendingAccount stamp: 'MO 10/24/2022 15:55:17'!
PASSED!

!testRun: #PortfolioTest #test19AccountTransferenceIsRegisteredCorrectlyInReceivingAccount stamp: 'MO 10/24/2022 15:55:17'!
PASSED!

!testRun: #PortfolioTest #test20AccountSummaryReturnsListWithNoBalanceInAccountWithNoMovements stamp: 'MO 10/24/2022 15:55:17'!
PASSED!

!testRun: #PortfolioTest #test21AccountSummaryReturnsListWithOneDeposit stamp: 'MO 10/24/2022 15:55:17'!
PASSED!

!testRun: #PortfolioTest #test22AccountSummaryReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/24/2022 15:55:17'!
PASSED!

!testRun: #PortfolioTest #test23AccountSummaryReturnsListWithOneDepositOneWithdrawalAndOneOutgoingTransference stamp: 'MO 10/24/2022 15:55:17'!
PASSED!

!testRun: #PortfolioTest #test24AccountSummaryReturnsListWithOneOutgoingTransferenceAndOneIncomingTransference stamp: 'MO 10/24/2022 15:55:17'!
PASSED!

!testRun: #PortfolioTest #test25AccountSummaryOnPortfolioReturnsListWithNoBalanceWhenEmpty stamp: 'MO 10/24/2022 15:55:17'!
PASSED!

!testRun: #PortfolioTest #test26AccountSummaryOnPortfolioReturnsListWithOneDeposit stamp: 'MO 10/24/2022 15:55:17'!
PASSED!

!testRun: #PortfolioTest #test27AccountSummaryOnPortfolioReturnsListWithOneDepositAndOneWithdrawal stamp: 'MO 10/24/2022 15:55:17'!
PASSED!

!testRun: #PortfolioTest #test28AccountSummaryOnPortfolioReturnsListWithOneDepositOneWithdrawalAndOneOutgoingTransference stamp: 'MO 10/24/2022 15:55:17'!
PASSED!

!testRun: #PortfolioTest #test29AccountNetTrasferReportIsCorrectWithTwoTransactions stamp: 'MO 10/24/2022 15:55:17'!
PASSED!

!testRun: #PortfolioTest #test30AccountNetTrasferReportOnPortfolioIsCorrectWithTwoTransactions stamp: 'MO 10/24/2022 15:55:17'!
PASSED!

!testRun: #PortfolioTest #test31NamedAccountHasCorrectName stamp: 'MO 10/24/2022 15:55:17'!
PASSED!

!testRun: #PortfolioTest #test32NamedPortfolioHasCorrectName stamp: 'MO 10/24/2022 15:55:17'!
PASSED!

!testRun: #PortfolioTest #test33UnnamedAccountHasNoName stamp: 'MO 10/24/2022 15:55:17'!
PASSED!

!testRun: #PortfolioTest #test34UnnamedPortfolioHasNoName stamp: 'MO 10/24/2022 15:55:17'!
PASSED!

!testRun: #PortfolioTest #test35NamedPortfolioReportsItself stamp: 'MO 10/24/2022 15:55:17'!
PASSED!

!testRun: #PortfolioTest #test36NamedPortfolioReportsWithOneAccountReportCorrectly stamp: 'MO 10/24/2022 15:55:17'!
PASSED!

!testRun: #PortfolioTest #test37NamedPortfolioReportsWithTwoAccountsReportCorrectly stamp: 'MO 10/24/2022 15:55:17'!
PASSED!

----SNAPSHOT----(24 October 2022 15:55:35) CuisUniversity-5481.image priorSource: 7691754!

----QUIT----(24 October 2022 15:55:46) CuisUniversity-5481.image priorSource: 7740496!